	public String generateMethod(String fragment, String name, int methodIndex) 
	{
		Element e = _methods.get(name);
		
		String camelCase = Character.toUpperCase(name.charAt(0)) + name.substring(1);
		
		
		
		fragment = fragment.replace("<+index>",Integer.toString(methodIndex));


		fragment = fragment.replace("<+field>",name);
		
		fragment = fragment.replace("<+camelField>",camelCase);

		String fullType = e.asType().toString();
		fragment = fragment.replace("<+type>",fullType);
		
		while (fullType.indexOf('.') >= 0) fullType = fullType.substring(fullType.indexOf('.')+1);

		if (fullType.compareTo("int") == 0 || fullType.compareTo("Integer") == 0)
		{
			fullType = "Long";
			fragment = fragment.replace("<+cast>","(int)");
		}
		else
		{
			fragment = fragment.replace("<+cast>","");
		}
		
		if (fullType.compareTo("long") == 0)
		{
			fullType = "Long";
		}
		
		if (fullType.compareTo("float") == 0)
			fullType = "Float";

		if (fullType.compareTo("double") == 0)
			fullType = "Double";
		
		if (fullType.compareTo("long") == 0)
			fullType = "Long";
		
		if (fullType.compareTo("boolean") == 0)
			fullType = "Boolean";
		
		fragment = fragment.replace("<+etter_type>", fullType);

		return fragment;
	}

