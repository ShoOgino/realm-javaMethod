	public boolean generate() throws IOException
	{
		JavaWriter writer = new JavaWriter(_bw);

		writer.emitPackage(_values.get("package")).beginType(_values.get("package")+"."+_values.get("class")+"RealmProxy", "class", EnumSet.of(Modifier.PUBLIC,Modifier.FINAL),_values.get("class"));

		Iterator<String> methodNamesIterator = _methods.keySet().iterator();

		while (methodNamesIterator.hasNext())
		{
			String fieldName = methodNamesIterator.next();
			if (ignoreFields.contains(fieldName))
			{
				continue;
			}
			
			Element e = _methods.get(fieldName);
			String fullType =  convertSimpleTypesToObject(e.asType().toString());
			String returnCast = "";
			String camelCase = Character.toUpperCase(fieldName.charAt(0)) + fieldName.substring(1);
			String fieldId = camelCase+"Index";

			if (fullType.compareTo("Integer") == 0)
			{
				fullType = "Long";
				returnCast ="(int)";
			}
			
			String getterStmt = "return "+returnCast+"row.get"+fullType+"( "+fieldId+" )";

			writer.emitField("int", fieldId, EnumSet.of(Modifier.PUBLIC,Modifier.FINAL,Modifier.STATIC));

			writer.beginMethod(fullType, "get"+camelCase, EnumSet.of(Modifier.PUBLIC))
    		  .emitStatement(getterStmt)
    	      .endMethod();
		}
		
		writer.endType();
		writer.close();
		
		return true;
	}

