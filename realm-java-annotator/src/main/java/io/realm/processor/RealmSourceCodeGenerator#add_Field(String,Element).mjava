	public boolean add_Field(String fieldName, Element e) throws IOException
	{
		if (!checkState(2)) return false;

		String originalType = e.asType().toString();
		String fullType =  convertSimpleTypesToObject(originalType);
		String shortType = fullType.substring(fullType.lastIndexOf(".") + 1);
		
		String returnCast = "";
		String camelCase = Character.toUpperCase(fieldName.charAt(0)) + fieldName.substring(1);
		String fieldId = "rowIndex"+camelCase;

		if (originalType.compareTo("int") == 0)
		{
			fullType = "long";
			shortType = "Long";
			returnCast ="("+originalType+")";
		}
		
		if (shortType.compareTo("Integer") == 0)
		{
			fullType = "long";
			shortType = "Long";
			returnCast ="(int)";
		}
		
		String getterStmt = "return "+returnCast+"row.get"+shortType+"( "+fieldId+" )";
		
		String setterStmt = "row.set"+shortType+"( "+fieldId+", value )";

		writer.emitField("int", fieldId, EnumSet.of(Modifier.PRIVATE,Modifier.FINAL,Modifier.STATIC),
				Integer.toString(fieldIndex));
		fieldIndex++;

		writer.emitAnnotation("Override").beginMethod(originalType, "get"+camelCase, EnumSet.of(Modifier.PUBLIC))
		  .emitStatement(getterStmt)
	      .endMethod();

		writer.emitAnnotation("Override").beginMethod("void", "set"+camelCase, EnumSet.of(Modifier.PUBLIC),
				originalType, "value")
		       .emitStatement(setterStmt)
	           .endMethod().emitEmptyLine();
		return true;

	}

