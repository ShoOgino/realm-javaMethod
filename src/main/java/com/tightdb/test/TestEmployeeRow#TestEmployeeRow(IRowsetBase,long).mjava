	public TestEmployeeRow(IRowsetBase rowset, long position) {
		super(TestEmployeeTable.TYPES, rowset, position);

        firstName = new StringCursorColumn<TestEmployeeRow, TestEmployeeView, TestEmployeeQuery>(TestEmployeeTable.TYPES, this, 0, "firstName");
        lastName = new StringCursorColumn<TestEmployeeRow, TestEmployeeView, TestEmployeeQuery>(TestEmployeeTable.TYPES, this, 1, "lastName");
        salary = new LongCursorColumn<TestEmployeeRow, TestEmployeeView, TestEmployeeQuery>(TestEmployeeTable.TYPES, this, 2, "salary");
        driver = new BooleanCursorColumn<TestEmployeeRow, TestEmployeeView, TestEmployeeQuery>(TestEmployeeTable.TYPES, this, 3, "driver");
        photo = new BinaryCursorColumn<TestEmployeeRow, TestEmployeeView, TestEmployeeQuery>(TestEmployeeTable.TYPES, this, 4, "photo");
        birthdate = new DateCursorColumn<TestEmployeeRow, TestEmployeeView, TestEmployeeQuery>(TestEmployeeTable.TYPES, this, 5, "birthdate");
        extra = new MixedCursorColumn<TestEmployeeRow, TestEmployeeView, TestEmployeeQuery>(TestEmployeeTable.TYPES, this, 6, "extra");
        phones = new TableCursorColumn<TestEmployeeRow, TestEmployeeView, TestEmployeeQuery, TestPhoneRow, TestPhoneTable>(TestEmployeeTable.TYPES, this, 7, "phones", TestPhoneTable.class);
	}

