    public boolean generate() throws IOException {

    	// Set source code indent to 4 spaces
        writer.setIndent("    ");

        // Emit java writer code in sections: 
        
        //   1. Package Header and imports
        emitPackage();
        
        //   2. class definition
        emitClass();
        
        //   3. public setters and getters for each field
        emitFields();

        // Generate initTable method, which is used to create the datqbase table

        String tableName = this.className.toLowerCase(Locale.getDefault());

        writer.beginMethod("Table", "initTable", EnumSet.of(Modifier.PUBLIC, Modifier.STATIC),
                "ImplicitTransaction", "transaction").
                beginControlFlow("if(!transaction.hasTable(\"" + tableName + "\"))").
                emitStatement("Table table = transaction.getTable(\"" + tableName + "\")");

        // For each field generate corresponding table index constant
        for (FieldInfo field : fields) {

            if (field.columnType.equals("ColumnType.LINK")) {
                writer.emitStatement("table.addColumnLink( %s, \"%s\", %s)", field.columnType,
                    field.fieldName.toLowerCase(Locale.getDefault()), "table");
            }
            else {
                writer.emitStatement("table.addColumn( %s, \"%s\" )", field.columnType, field.fieldName.toLowerCase(Locale.getDefault()));
            }
        }

        writer.emitStatement("return table");
        writer.endControlFlow();
        writer.emitStatement("return transaction.getTable(\"" + tableName + "\")");
        writer.endMethod().emitEmptyLine();

        // End the class definition 
        writer.endType();
        writer.close();

        fields.clear();

        generatorState = GeneratorStates.PACKAGE;

        return true;
    }

