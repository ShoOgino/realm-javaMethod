    public void generate() throws IOException {
        String qualifiedGeneratedClassName = String.format("%s.%sMediator", REALM_PACKAGE_NAME, className);
        JavaFileObject sourceFile = processingEnvironment.getFiler().createSourceFile(qualifiedGeneratedClassName);
        JavaWriter writer = new JavaWriter(new BufferedWriter(sourceFile.openWriter()));
        writer.setIndent("    ");

        writer.emitPackage(REALM_PACKAGE_NAME);
        writer.emitEmptyLine();

        writer.emitImports(
                "android.util.JsonReader",
                "java.io.IOException",
                "java.util.ArrayList",
                "java.util.Collections",
                "java.util.List",
                "java.util.Map",
                "io.realm.exceptions.RealmException",
                "io.realm.internal.ImplicitTransaction",
                "io.realm.internal.RealmObjectProxy",
                "io.realm.internal.RealmProxyMediator",
                "io.realm.internal.Table",
                "org.json.JSONException",
                "org.json.JSONObject"
        );
        writer.emitImports(qualifiedModelClasses);

        writer.emitEmptyLine();

        writer.emitAnnotation(RealmModule.class);
        writer.beginType(
                qualifiedGeneratedClassName,        // full qualified name of the item to generate
                "class",                            // the type of the item
                Collections.<Modifier>emptySet(),   // modifiers to apply
                null,                               // class to extend
                "RealmProxyMediator");              // Interfaces to implement
        writer.emitEmptyLine();

        emitFields(writer);
        emitCreateTableMethod(writer);
        emitValidateTableMethod(writer);
        emitGetFieldNamesMethod(writer);
        emitGetTableNameMethod(writer);
        emitNewInstanceMethod(writer);
        emitGetClassModelList(writer);
        emitGetColumnIndices(writer);
        emitCopyToRealmMethod(writer);
        emitPopulateUsingJsonObject(writer);
        emitPopulateUsingJsonStream(writer);

        writer.endType();
        writer.close();
    }

