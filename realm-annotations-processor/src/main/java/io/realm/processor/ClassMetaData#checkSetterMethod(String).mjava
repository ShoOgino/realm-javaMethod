    // Verify that a setter is used to set a field in the model class.
    // Note: This is done heuristically by comparing the name of setter with the name of the field.
    // Annotation processors does not allow us to inspect individual statements.
    private void checkSetterMethod(String methodName) {
        boolean found = false;

        String methodMinusSet = methodName.substring(3);
        String methodMinusSetCapitalised = Utils.lowerFirstChar(methodMinusSet);
        String methodMenusSetPlusIs = "is" + methodMinusSet;

        if (fieldNames.contains(methodMinusSet)) { // mPerson -> setmPerson
            expectedSetters.remove(methodMinusSet);
            if (!ignoreFieldNames.contains(methodMinusSet)) {
                setters.put(methodMinusSet, methodName);
            }
            found = true;
        } else if (fieldNames.contains(methodMinusSetCapitalised)) { // person -> setPerson
            expectedSetters.remove(methodMinusSetCapitalised);
            if (!ignoreFieldNames.contains(methodMinusSetCapitalised)) {
                setters.put(methodMinusSetCapitalised, methodName);
            }
            found = true;
        } else if (fieldNames.contains(methodMenusSetPlusIs)) { // isReady -> setReady
            expectedSetters.remove(methodMenusSetPlusIs);
            if (!ignoreFieldNames.contains(methodMenusSetPlusIs)) {
                setters.put(methodMenusSetPlusIs, methodName);
            }
            found = true;
        }

        if (!found) {
            Utils.note(String.format("Setter %s is not associated to any field", methodName));
        }
    }

