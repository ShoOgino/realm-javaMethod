    // Verify that a getter is used to get a field in the model class.
    // Note: This is done heuristically by comparing the name of getter with the name of the field.
    // Annotation processors does not allow us to inspect individual statements.
    private void checkGetterMethod(String methodName) {
        boolean found = false;

        if (methodName.startsWith("is")) {
            String methodMinusIs = methodName.substring(2);
            String methodMinusIsCapitalised = Utils.lowerFirstChar(methodMinusIs);
            if (fieldNames.contains(methodName)) { // isDone -> isDone
                expectedGetters.remove(methodName);
                if (!ignoreFieldNames.contains(methodName)) {
                    getters.put(methodName, methodName);
                }
                found = true;
            } else if (fieldNames.contains(methodMinusIs)) {  // mDone -> ismDone
                expectedGetters.remove(methodMinusIs);
                if (!ignoreFieldNames.contains(methodMinusIs)) {
                    getters.put(methodMinusIs, methodName);
                }
                found = true;
            } else if (fieldNames.contains(methodMinusIsCapitalised)) { // done -> isDone
                expectedGetters.remove(methodMinusIsCapitalised);
                if (!ignoreFieldNames.contains(methodMinusIsCapitalised)) {
                    getters.put(methodMinusIsCapitalised, methodName);
                }
                found = true;
            }
        }

        if (!found && methodName.startsWith("get")) {
            String methodMinusGet = methodName.substring(3);
            String methodMinusGetCapitalised = Utils.lowerFirstChar(methodMinusGet);
            if (fieldNames.contains(methodMinusGet)) { // mPerson -> getmPerson
                expectedGetters.remove(methodMinusGet);
                if (!ignoreFieldNames.contains(methodMinusGet)) {
                    getters.put(methodMinusGet, methodName);
                }
                found = true;
            } else if (fieldNames.contains(methodMinusGetCapitalised)) { // person -> getPerson
                expectedGetters.remove(methodMinusGetCapitalised);
                if (!ignoreFieldNames.contains(methodMinusGetCapitalised)) {
                    getters.put(methodMinusGetCapitalised, methodName);
                }
                found = true;
            }
        }

        if (!found) {
            Utils.note(String.format("Getter %s is not associated to any field", methodName));
        }
    }

