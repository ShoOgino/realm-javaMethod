    public boolean emitFields() throws IOException {

        int columnIndex = 0;
    	
        for (FieldInfo field : fields) {
            String originalType = field.fieldElement.asType().toString();
            String fullType = objectTypes.get(originalType);
            String shortType = fullType.substring(fullType.lastIndexOf(".") + 1);

            String returnCast = "";
            String camelCaseFieldName = Character.toUpperCase(field.fieldName.charAt(0)) + field.fieldName.substring(1);

            if (originalType.equals("int")) {
                shortType = "Long";
                returnCast = "(int)";
            }

            if (shortType.equals("Integer")) {
                shortType = "Long";
                returnCast = "(int)";
            }

            String getterStmt = String.format("return %s row.get%s(%s)", returnCast, shortType, columnIndex);
            String setterStmt = String.format("row.set%s(%s, value)", shortType, columnIndex);

            columnIndex++;

            writer.emitAnnotation("Override").beginMethod(originalType, "get" + camelCaseFieldName, EnumSet.of(Modifier.PUBLIC))
                    .emitStatement(getterStmt)
                    .endMethod();

            writer.emitAnnotation("Override").beginMethod("void", "set" + camelCaseFieldName, EnumSet.of(Modifier.PUBLIC),
                    originalType, "value")
                    .emitStatement(setterStmt)
                    .endMethod().emitEmptyLine();
        }

        return true;
    }

