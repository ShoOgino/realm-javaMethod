    /**
     * This test verifies the behavior in the {@link DogRepositoryImpl} class.
     */
    @Test
    public void shouldVerifyThatDogWasCreated() {

        doCallRealMethod().when(mockRealm).executeTransaction(Mockito.any(Realm.Transaction.class));

        Dog dog = mock(Dog.class);
        when(mockRealm.createObject(Dog.class)).thenReturn(dog);

        DogRepository dogRepo = new DogRepositoryImpl();
        dogRepo.createDog("Spot");

        // Attempting to verify that a method was called (executeTransaction) on a partial
        // mock will return unexpected results due to the partial mock. For example,
        // verifying that `executeTransaction` was called only once will fail as Powermock
        // actually calls the method 3 times for some reason. I cannot determine why at this
        // point.


        // Verify that Realm#createObject was called only once
        verify(mockRealm, times(1)).createObject(Dog.class); // Verify that a Dog was in fact created.

        // Verify that Dog#setName() is called only once
        verify(dog, times(1)).setName(Mockito.anyString()); // Any string will do

        // Verify that the Realm was closed only once.
        verify(mockRealm, times(1)).close();
    }

