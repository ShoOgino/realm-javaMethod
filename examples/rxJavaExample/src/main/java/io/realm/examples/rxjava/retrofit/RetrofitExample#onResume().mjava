    @Override
    protected void onResume() {
        super.onResume();

        // Load all persons and merge them with their latest stats from GitHub (if they have any)
        disposable = realm.where(Person.class).isNotNull("githubUserName").findAllSortedAsync("name").asFlowable()
                // We only want the list once it is loaded.
                .filter(people -> people.isLoaded())
                .switchMap(people -> Flowable.fromIterable(people))

                // get GitHub statistics.
                .flatMap(person -> api.user(person.getGithubUserName()))

                // Map Network model to our View model
                .map(gitHubUser -> new UserViewModel(gitHubUser.name, gitHubUser.public_repos, gitHubUser.public_gists))

                // Retrofit put us on a worker thread. Move back to UI
                .observeOn(AndroidSchedulers.mainThread())

                .subscribe(user -> {
                    // Print user info.
                    TextView userView = new TextView(RetrofitExample.this);
                    userView.setText(
                            String.format(Locale.US, "%s : %d/%d", user.getUsername(), user.getPublicRepos(), user.getPublicGists()));
                    container.addView(userView);
                }, throwable -> throwable.printStackTrace());
    }

