    /**
     * Loads the news feed as well as all future updates.
     */
    @UiThread
    public Flowable<RealmResults<NYTimesStory>> loadNewsFeed(@NonNull String sectionKey, boolean forceReload) {
        // Start loading data from the network if needed
        // It will put all data into Realm
        if (forceReload || timeSinceLastNetworkRequest(sectionKey) > MINIMUM_NETWORK_WAIT_SEC) {
            dataLoader.loadData(sectionKey, apiKey, realm, networkLoading);
            lastNetworkRequest.put(sectionKey, System.currentTimeMillis());
        }

        // Return the data in Realm. The query result will be automatically updated when the network requests
        // save data in Realm
        return realm.where(NYTimesStory.class)
                .equalTo(NYTimesStory.API_SECTION, sectionKey)
                .sort(NYTimesStory.PUBLISHED_DATE, Sort.DESCENDING)
                .findAllAsync()
                .asFlowable();
    }

