    // Load all sections one by one.
    private void loadNextSection(final int sectionIndex) {
        networkInUse.onNext(true);
        nyTimesService.topStories(nytSections[sectionIndex], apiKey)
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Action1<NYTimesResponse<List<NYTimesStory>>>() {
                    @Override
                    public void call(NYTimesResponse<List<NYTimesStory>> response) {
                        Timber.d("Success - Data received: %s", nytSections[sectionIndex]);
                        processAndAddData(realm, response.results);

                        if (sectionIndex < nytSections.length - 1) {
                            loadNextSection(sectionIndex + 1);
                        } else {
                            networkInUse.onNext(false);

                        }
                    }
                }, new Action1<Throwable>() {
                    @Override
                    public void call(Throwable throwable) {
                        networkInUse.onNext(false);
                        Timber.d("Failure: Data not loaded: %s - %s", nytSections[sectionIndex], throwable.toString());
                    }
                });
    }

