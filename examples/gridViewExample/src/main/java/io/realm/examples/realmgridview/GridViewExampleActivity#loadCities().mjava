    private List<City> loadCities() {
        // In this case we're loading from local assets.
        // NOTE: could alternatively easily load from network
        InputStream stream = null;
        try {
            stream = getAssets().open("cities.json");
        } catch (IOException e) {
            return null;
        }

        // GSON can parse the data.
        // Note there is a bug in GSON 2.3.1 that can cause it to StackOverflow in some cases.
        // Downgrading to GSON 1.7.1 usually fixes this.
        // See more here: https://code.google.com/p/google-gson/issues/detail?id=440
        JsonArray json = new JsonParser().parse(new InputStreamReader(stream)).getAsJsonArray();
        List<City> cities = new Gson().fromJson(json.toString(), new TypeToken<List<City>>(){}.getType());

        // Open a transaction to store items into the realm
        // Use copyToRealm() to convert the objects into proper RealmObjects managed by Realm.
        realm.beginTransaction();
        Collection<City> realmCities = realm.copyToRealm(cities);
        realm.commitTransaction();

        return new ArrayList<City>(realmCities);
    }

