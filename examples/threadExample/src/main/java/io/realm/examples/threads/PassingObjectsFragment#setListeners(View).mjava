    /**
     * Sets the click listeners on the three buttons.
     *
     * RealmObjects are thread confined, therefore they cannot be passed through an intent. We
     * recommend using an object identifier and passing that value through the intent. The
     * receiving Android component will then obtain that value, open the Realm and query for
     * that object.
     *
     * Below, each {@link android.view.View.OnClickListener} builds an {@link Intent} that
     * accepts the {@link Person#getId()} value as a string extra. This is the value that will
     * be retrieved in the receiving Android components ({@link ReceivingActivity},
     * {@link ReceivingService} and {@link WakefulReceivingBroadcastReceiver}.
     *
     * @param view The view where the buttons are located.
     */
    private void setListeners(View view) {
        view.findViewById(R.id.start_activity).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(getActivity(), ReceivingActivity.class);
                intent.putExtra("person_id", person.getId());
                startActivity(intent);
            }
        });

        view.findViewById(R.id.start_intent_service).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(getActivity(), ReceivingService.class);
                intent.putExtra("person_id", person.getId());
                getActivity().startService(intent);
            }
        });

        view.findViewById(R.id.start_receiver).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(getActivity(), WakefulReceivingBroadcastReceiver.class);
                intent.putExtra("person_id", person.getId());
                getActivity().sendBroadcast(intent);
            }
        });
    }

