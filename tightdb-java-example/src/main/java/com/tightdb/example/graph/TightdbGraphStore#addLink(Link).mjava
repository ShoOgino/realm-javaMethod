	boolean addLink(Link link) {
		WriteTransaction tr = db.beginWrite();
		try {						
			NodeTable nodes = new NodeTable(tr);
			LinkTable links = new LinkTable(tr);
			LinkDeletedTable deleted_links = new LinkDeletedTable(tr);
			
			// check if link already exists
            // we don't want to search over all links, so we go through the source node
            LinktypeQuery query = nodes.at(link.id1).getLink_out().
            						where().type.eq(link.link_type);
            for (LinktypeRow ref : query.findAll()) {
            	LinkRow l = links.at(ref.getLink());
            	if (l.getId2() == link.id2) {
            		l.setData(link.data);
            		l.setVersion(link.version);
            		l.setTime(link.time);
            		tr.commit();
            		return false;	// updated existing link
            	}
            }
            
            // create new link
            int link_id;
            if (deleted_links.isEmpty()) {
                links.add(link.id1, link.link_type, link.id2, link.data, 
                		  link.version, link.time, false);
                link_id = (int) (links.size()-1); 		// inserted at end
            } else {
                int free_row_ndx = (int) deleted_links.at(0).getId();
                links.at(free_row_ndx).setId1(link.id1);
                links.at(free_row_ndx).setLink_type(link.link_type);
                links.at(free_row_ndx).setId2(link.id2);
                links.at(free_row_ndx).setData(link.data);
                links.at(free_row_ndx).setVersion(link.version);
                links.at(free_row_ndx).setTime(link.time);
                links.at(free_row_ndx).setDeleted(false);
                deleted_links.remove(0);
                link_id = free_row_ndx;
            }
            
            // update refs in nodes
            nodes.at(link.id1).getLink_out().add(link.link_type, link_id);
            nodes.at(link.id2).getLink_in().add(link.link_type, link_id);
            tr.commit();
			return true;
		} catch (Exception e) {
			System.err.println("Exception");
		}
		tr.rollback();
		return false;
	}

