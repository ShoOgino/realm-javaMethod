    @Override
    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment env) {
        logger.info("Entering annotation processor...");

        // this is a hack that detects if the annotation processing runs inside Eclipse APT
        boolean insideEclipse = env.getClass().getCanonicalName()
                .startsWith("org.eclipse.jdt.");
        if (insideEclipse) {
            logger.debug("Detected Eclipse, the appropriate work-arounds will be activated...");
        }

        if (!env.processingOver()) {
            logger.info("Processing annotations...");
            try {
                processAnnotations(annotations, env, insideEclipse);
                logger.info("Successfully finished processing.");
            } catch (Exception e) {
                String info = e.getMessage() != null ? "(" + e.getMessage() + ")" : "";
                String msg = e.getClass().getCanonicalName() + " " + info + "\n\n" + StringUtils.join(e.getStackTrace(), "\n");

                Throwable cause = e.getCause();
                while (cause != null) {
                    info = cause.getMessage() != null ? cause.getMessage() : "";
                    msg += "\n\nCause: " + info + "\n" + StringUtils.join(cause.getStackTrace(), "\n");
                    cause = cause.getCause();
                }

                logger.error(msg);
            }
        } else {
            logger.info("Last round, processing is done.");
        }
        return true;
    }

