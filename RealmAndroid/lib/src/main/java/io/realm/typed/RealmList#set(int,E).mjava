    /**
     *
     * @param rowIndex      The index position where the object should be inserted
     * @param element       The object to insert
     * @return              The inserted object
     */
    @Override
    public E set(int rowIndex, E element) {

        Field[] fields = element.getClass().getDeclaredFields();

        TableOrView dataStore = getTable();

        // Inspect fields and add them
        for (int i = 0; i < fields.length; i++) {

            Field f = fields[i];

            Class<?> fieldType = f.getType();

            System.out.println(f.getName());
            long columnIndex = dataStore.getColumnIndex(f.getName());

            f.setAccessible(true);

            try {

                if (fieldType.equals(String.class)) {
                    dataStore.setString(columnIndex, rowIndex, (String) f.get(element));
                } else if (fieldType.equals(int.class) || fieldType.equals(long.class) || fieldType.equals(Integer.class) || fieldType.equals(Long.class)) {
                    dataStore.setLong(columnIndex, rowIndex, f.getLong(element));
                } else if (fieldType.equals(double.class) || fieldType.equals(Double.class)) {
                    dataStore.setDouble(columnIndex, rowIndex, f.getDouble(element));
                } else if (fieldType.equals(float.class) || fieldType.equals(Float.class)) {
                    dataStore.setFloat(columnIndex, rowIndex, f.getFloat(element));
                } else if (fieldType.equals(boolean.class) || fieldType.equals(Boolean.class)) {
                    dataStore.setBoolean(columnIndex, rowIndex, f.getBoolean(element));
                } else if (fieldType.equals(Date.class)) {
                    dataStore.setDate(columnIndex, rowIndex, (Date) f.get(element));
                } else {
                    System.err.println("Type not supported: " + fieldType.getName());
                }

            } catch (IllegalAccessException e) {
                e.printStackTrace();
            }

        }


        return this.get(rowIndex);

    }

