    private <E> void initTable(Class<E> classSpec) {
        // Check for table existence
        if(!this.transaction.hasTable(classSpec.getSimpleName())) {
            // Create the table
            Table table = this.transaction.getTable(classSpec.getSimpleName());

            System.out.println(classSpec.getSimpleName());

            Field[] fields = classSpec.getDeclaredFields();

            for (int i = 0; i < fields.length; i++) {

                Field f = fields[i];

                Class<?> fieldType = f.getType();

                System.out.println(f.getName() + " - " + fieldType.getName());


                if (fieldType.equals(String.class)) {
                    table.addColumn(ColumnType.STRING, f.getName().toLowerCase());
                } else if (fieldType.equals(int.class) || fieldType.equals(long.class) || fieldType.equals(Integer.class) || fieldType.equals(Long.class)) {
                    table.addColumn(ColumnType.INTEGER, f.getName().toLowerCase());
                } else if (fieldType.equals(double.class) || fieldType.equals(Double.class)) {
                    table.addColumn(ColumnType.DOUBLE, f.getName().toLowerCase());
                } else if (fieldType.equals(float.class) || fieldType.equals(Float.class)) {
                    table.addColumn(ColumnType.FLOAT, f.getName().toLowerCase());
                } else if (fieldType.equals(boolean.class) || fieldType.equals(Boolean.class)) {
                    table.addColumn(ColumnType.BOOLEAN, f.getName().toLowerCase());
                } else if (fieldType.equals(Date.class)) {
                    table.addColumn(ColumnType.DATE, f.getName().toLowerCase());
                } else if (fieldType.equals(byte[].class)) {
                    table.addColumn(ColumnType.BINARY, f.getName().toLowerCase());
                } else if (RealmObject.class.equals(fieldType.getSuperclass())) {
                    // Link
                    // Check if the table representing the object which is linked to exists
                    System.out.println("Creating linked objects table");
                    initTable(fieldType);
                } else {
                    System.err.println("Type not supported: " + fieldType.getName());
                }

            }

            System.out.println("Tables in realm: ");
            for(int i = 0; i < transaction.size(); i++) {
                System.out.println(transaction.getTableName(i));
            }

        }

    }

