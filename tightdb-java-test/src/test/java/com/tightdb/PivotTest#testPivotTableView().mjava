    @Test
    public void testPivotTableView(){

        // Smallest value is 0
        TableView dataView = data.where().lessThan(INTEGER_COL_INDEX, 20).findAll();
        Table res = dataView.pivot(STRING_COL_INDEX, INTEGER_COL_INDEX, PivotType.MIN);
        assertEquals(0, res.minimumInt(1));
        
        // Largest value is 19
        dataView = data.where().lessThan(INTEGER_COL_INDEX, 20).findAll();
        res = dataView.pivot(STRING_COL_INDEX, INTEGER_COL_INDEX, PivotType.MAX);
        assertEquals(19, res.maximumInt(1));
        
        // Largest and smallest value is 20
        dataView = data.where().equalTo(INTEGER_COL_INDEX, 20).findAll();
        res = dataView.pivot(STRING_COL_INDEX, INTEGER_COL_INDEX, PivotType.MAX);
        assertEquals(20, res.minimumInt(1));
        assertEquals(20, res.maximumInt(1));
        res = dataView.pivot(STRING_COL_INDEX, INTEGER_COL_INDEX, PivotType.MIN);
        assertEquals(20, res.minimumInt(1));
        assertEquals(20, res.maximumInt(1));
        

    }

