    @Test
    public void searchValuesOnView() {
        assertEquals(2 , view.doubleNum.findAll(10000.1d).size() );
        assertEquals(2 , view.floatNum.findAll(10000.1f).size() );

        assertEquals(1 , view.doubleNum.findFirst(30000.6d).getPosition());
        assertEquals(1 , view.floatNum.findFirst(30000.6f).getPosition() );

        // Double get and set all
        { 
            Double[] excpected = new Double[(int) 3];
            excpected[0] = 10000.1d;
            excpected[1] = 30000.6d;
            excpected[2] = 10000.1d;

            Double[] actual = view.doubleNum.getAll(); // Get all return a Double

            for (int i=0;i<actual.length;i++){
                assertEquals(excpected[i], actual[i]);
            }

            view.doubleNum.setAll(999d);
            for (long row = 0;row<view.size();row++){
                assertEquals(999d, view.get(row).getDoubleNum());
            }
        }
        
        // Float get and set all
        { 
            Float[] excpected = new Float[(int) 3];
            excpected[0] = 10000.1f;
            excpected[1] = 30000.6f;
            excpected[2] = 10000.1f;

            Float[] actual = view.floatNum.getAll(); // Get all return a Float

            for (int i=0;i<actual.length;i++){
                assertEquals(excpected[i], actual[i]);
            }

            view.floatNum.setAll(999f);
            for (long row = 0;row<view.size();row++){
                assertEquals(999f, view.get(row).getFloatNum());
            }
        }
    }

