    @Test()
    public void shouldCalculateStatistics() {
        
        TestEmployeeQuery results = employees.firstName.eq("John").or().firstName.eq("Nikolche");
        assertEquals(2, results.count());

        assertEquals(10000, results.salary.minimum());
        assertEquals(10000, results.salary.minimum(0, 1)); // first
        assertEquals(30000, results.salary.minimum(1, 2)); // second
        assertEquals(10000, results.salary.minimum(0, Table.INFINITE)); // both
        // TODO: Check invalid parameters
        
        assertEquals(30000, results.salary.maximum());
        assertEquals(10000, results.salary.maximum(0, 1)); // first
        assertEquals(30000, results.salary.maximum(1, 2)); // second
        assertEquals(30000, results.salary.maximum(0, Table.INFINITE)); // both

        assertEquals(40000, results.salary.sum());
        assertEquals(10000, results.salary.sum(0, 1)); // first
        assertEquals(30000, results.salary.sum(1, 2)); // second
        assertEquals(40000, results.salary.sum(0, Table.INFINITE)); // both

        assertEquals(20000.0, results.salary.average());
        assertEquals(30000.0, results.salary.average(1, 2)); // second
        assertEquals(20000.0, results.salary.average(0, Table.INFINITE)); // both
        assertEquals(10000.0, results.salary.average(0, 1)); // first
    }

