	@Test
	public void shouldAggregateFloats() {
		assertEquals(10000.0f, numbers.floatNum.minimum());
		assertEquals(10000.0f, numbers.floatNum.minimum(0, 1)); // first
		assertEquals(30000.0f, numbers.floatNum.minimum(1, 2)); // second
		assertEquals(10000.0f, numbers.floatNum.minimum(0, 2)); // 1st & 2nd

		assertEquals(30000.0f, numbers.floatNum.maximum());
		assertEquals(10000.0f, numbers.floatNum.maximum(0, 1)); // first
		assertEquals(30000.0f, numbers.floatNum.maximum(1, 2)); // second
		assertEquals(30000.0f, numbers.floatNum.maximum(0, 2)); // 1st & 2nd

		assertEquals(50000.0, numbers.floatNum.sum());
		assertEquals(10000.0, numbers.floatNum.sum(0, 1)); // first
		assertEquals(30000.0, numbers.floatNum.sum(1, 2)); // second
		assertEquals(40000.0, numbers.floatNum.sum(0, 2)); // 1st & 2nd

		assertEquals(16666.66, numbers.floatNum.average(), 0.01);
		assertEquals(30000.0, numbers.floatNum.average(1, 2)); // second
		assertEquals(20000.0, numbers.floatNum.average(0, 2)); // 1st & 2nd
		assertEquals(10000.0, numbers.floatNum.average(0, 1)); // first
	}

