    @Test
    public void tableBinaryTest() {
        Table t = new Table();
        t.addColumn(ColumnType.ColumnTypeBinary, "binary");
        
        byte[] row0 = new byte[] { 1, 2, 3 };
        byte[] row1 = new byte[] { 10, 20, 30 };
        
        t.insertBinary(0, 0, row0);
        t.insertDone();
        t.insertBinary(0, 1, row1);
        t.insertDone();
        
        byte[] nullByte = null;
        
        try { t.insertBinary(0, 2, nullByte); fail("Inserting null array"); } catch(NullPointerException e) { }
        
        ByteBuffer nullBuffer = null;
        
        try { t.insertBinary(0, 2, nullBuffer); fail("Inserting null array"); } catch(NullPointerException e) { }
        
        assertEquals(new byte[] { 1, 2, 3 }, t.getBinaryByteArray(0, 0));
        assertEquals(false, t.getBinaryByteArray(0, 0) == new byte[]{1, 2, 3});
        
        byte[] newRow0 = new byte[] { 7, 77, 77 };
        t.setBinaryByteArray(0, 0, newRow0);
        
        assertEquals(new byte[] { 7, 77, 77 }, t.getBinaryByteArray(0, 0));
        assertEquals(false, t.getBinaryByteArray(0, 0) == new byte[] { 1, 2, 3 });
        
        try { t.setBinaryByteArray(0, 2, nullByte); fail("Inserting null array"); } catch(NullPointerException e) { }
        try { t.setBinaryByteBuffer(0, 2, nullBuffer); fail("Inserting null array"); } catch(NullPointerException e) { }
    }

