    private void emitInsertOrUpdateMethod(JavaWriter writer) throws IOException {
        writer.beginMethod(
                "long", // Return type
                "insertOrUpdate", // Method name
                EnumSet.of(Modifier.PUBLIC, Modifier.STATIC), // Modifiers
                "Realm", "realm", qualifiedJavaClassName, "object", "Map<RealmModel,Long>", "cache" // Argument type & argument name
        );

        // If object is already in the Realm there is nothing to update
        writer
                .beginControlFlow("if (object instanceof RealmObjectProxy && ((RealmObjectProxy) object).realmGet$proxyState().getRealm$realm() != null && ((RealmObjectProxy) object).realmGet$proxyState().getRealm$realm().getPath().equals(realm.getPath()))")
                .emitStatement("return ((RealmObjectProxy) object).realmGet$proxyState().getRow$realm().getIndex()")
                .endControlFlow();

        writer.emitStatement("Table table = realm.getTable(%s.class)", qualifiedJavaClassName);
        writer.emitStatement("long tableNativePtr = table.getNativePtr()");
        writer.emitStatement("%s columnInfo = (%s) realm.getSchema().getColumnInfo(%s.class)",
                columnInfoClassName(), columnInfoClassName(), qualifiedJavaClassName);

        if (metadata.hasPrimaryKey()) {
            writer.emitStatement("long pkColumnIndex = %s", fieldIndexVariableReference(metadata.getPrimaryKey()));
        }
        addPrimaryKeyCheckIfNeeded(metadata, false, writer);

        for (VariableElement field : metadata.getFields()) {
            String fieldName = field.getSimpleName().toString();
            String fieldType = field.asType().toString();
            String getter = metadata.getInternalGetter(fieldName);

            //@formatter:off
            if (Utils.isRealmModel(field)) {
                writer
                        .emitEmptyLine()
                        .emitStatement("%s %sObj = ((%s) object).%s()", fieldType, fieldName, interfaceName, getter)
                        .beginControlFlow("if (%sObj != null)", fieldName)
                        .emitStatement("Long cache%1$s = cache.get(%1$sObj)", fieldName)
                        .beginControlFlow("if (cache%s == null)", fieldName)
                        .emitStatement("cache%1$s = %2$s.insertOrUpdate(realm, %1$sObj, cache)",
                                fieldName,
                                Utils.getProxyClassSimpleName(field))
                        .endControlFlow()
                        .emitStatement("Table.nativeSetLink(tableNativePtr, columnInfo.%1$sIndex, rowIndex, cache%1$s, false)", fieldName)
                        .nextControlFlow("else")
                        // No need to throw exception here if the field is not nullable. A exception will be thrown in setter.
                        .emitStatement("Table.nativeNullifyLink(tableNativePtr, columnInfo.%sIndex, rowIndex)", fieldName)
                        .endControlFlow();
            } else if (Utils.isRealmModelList(field)) {
                final String genericType = Utils.getGenericTypeQualifiedName(field);
                writer
                    .emitEmptyLine()
                    .emitStatement("OsList %1$sOsList = new OsList(table.getUncheckedRow(rowIndex), columnInfo.%1$sIndex)", fieldName)
                    .emitStatement("RealmList<%s> %sList = ((%s) object).%s()", genericType, fieldName, interfaceName, getter)
                    .beginControlFlow("if (%1$sList != null && %1$sList.size() == %1$sOsList.size())", fieldName)
                        .emitSingleLineComment("For lists of equal lengths, we need to set each element directly as clearing the receiver list can be wrong if the input and target list are the same.")
                        .emitStatement("int objects = %1$sList.size()", fieldName)
                        .beginControlFlow("for (int i = 0; i < objects; i++)")
                            .emitStatement("%1$s %2$sItem = %2$sList.get(i)", genericType, fieldName)
                            .emitStatement("Long cacheItemIndex%1$s = cache.get(%1$sItem)", fieldName)
                            .beginControlFlow("if (cacheItemIndex%s == null)", fieldName)
                                .emitStatement("cacheItemIndex%1$s = %2$s.insertOrUpdate(realm, %1$sItem, cache)", fieldName, Utils.getProxyClassSimpleName(field))
                            .endControlFlow()
                            .emitStatement("%1$sOsList.setRow(i, cacheItemIndex%1$s)", fieldName)
                    .endControlFlow()
                    .nextControlFlow("else")
                        .emitStatement("%1$sOsList.removeAll()", fieldName)
                        .beginControlFlow("if (%sList != null)", fieldName)
                            .beginControlFlow("for (%1$s %2$sItem : %2$sList)", genericType, fieldName)
                                .emitStatement("Long cacheItemIndex%1$s = cache.get(%1$sItem)", fieldName)
                                .beginControlFlow("if (cacheItemIndex%s == null)", fieldName)
                                    .emitStatement("cacheItemIndex%1$s = %2$s.insertOrUpdate(realm, %1$sItem, cache)", fieldName, Utils.getProxyClassSimpleName(field))
                                .endControlFlow()
                                .emitStatement("%1$sOsList.addRow(cacheItemIndex%1$s)", fieldName)
                            .endControlFlow()
                        .endControlFlow()
                    .endControlFlow()
                    .emitEmptyLine();

            } else if (Utils.isRealmValueList(field)) {
                final String genericType = Utils.getGenericTypeQualifiedName(field);
                final TypeMirror elementTypeMirror = TypeMirrors.getRealmListElementTypeMirror(field);
                writer
                        .emitEmptyLine()
                        .emitStatement("OsList %1$sOsList = new OsList(table.getUncheckedRow(rowIndex), columnInfo.%1$sIndex)", fieldName)
                        .emitStatement("%1$sOsList.removeAll()", fieldName)
                        .emitStatement("RealmList<%s> %sList = ((%s) object).%s()",
                                genericType, fieldName, interfaceName, getter)
                        .beginControlFlow("if (%sList != null)", fieldName)
                        .beginControlFlow("for (%1$s %2$sItem : %2$sList)", genericType, fieldName)
                        .beginControlFlow("if (%1$sItem == null)", fieldName)
                        .emitStatement("%1$sOsList.addNull()", fieldName)
                        .nextControlFlow("else")
                        .emitStatement(getStatementForAppendingValueToOsList(fieldName + "OsList", fieldName + "Item", elementTypeMirror))
                        .endControlFlow()
                        .endControlFlow()
                        .endControlFlow()
                        .emitEmptyLine();
            } else {
                if (metadata.getPrimaryKey() != field) {
                    setTableValues(writer, fieldType, fieldName, interfaceName, getter, true);
                }
            }
            //@formatter:on
        }

        writer.emitStatement("return rowIndex");

        writer.endMethod()
                .emitEmptyLine();
    }

