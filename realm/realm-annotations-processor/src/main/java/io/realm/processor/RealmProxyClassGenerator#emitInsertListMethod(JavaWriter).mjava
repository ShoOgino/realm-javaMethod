    private void emitInsertListMethod(JavaWriter writer) throws IOException {
        writer.beginMethod(
                "void", // Return type
                "insert", // Method name
                EnumSet.of(Modifier.PUBLIC, Modifier.STATIC), // Modifiers
                "Realm", "realm", "Iterator<? extends RealmModel>", "objects", "Map<RealmModel,Long>", "cache" // Argument type & argument name
        );

        writer.emitStatement("Table table = realm.getTable(%s.class)", className);
        writer.emitStatement("long tableNativePtr = table.getNativeTablePointer()");
        writer.emitStatement("%s columnInfo = (%s) realm.schema.getColumnInfo(%s.class)",
                columnInfoClassName(), columnInfoClassName(), className);
        writer.emitStatement("%s object = null", className);

        writer.beginControlFlow("while (objects.hasNext())");
        writer.emitStatement("object = (%s) objects.next()", className);
        writer.beginControlFlow("if(!cache.containsKey(object))");

        writer.emitStatement("long rowIndex = Table.nativeAddEmptyRow(tableNativePtr, 1)");
        writer.emitStatement("cache.put(object, rowIndex)");

        for (VariableElement field : metadata.getFields()) {
            String fieldName = field.getSimpleName().toString();
            String fieldType = field.asType().toString();
            String getter = metadata.getGetter(fieldName);

            if (Utils.isRealmModel(field)) {
                writer
                        .emitEmptyLine()
                        .emitStatement("%s %sObj = ((%s) object).%s()", fieldType, fieldName, interfaceName, getter)
                        .beginControlFlow("if (%sObj != null)", fieldName)
                            .emitStatement("Long cache%1$s = cache.get(%1$sObj)", fieldName)
                         .beginControlFlow("if (cache%s == null)", fieldName)
                                .emitStatement("cache%s = %s.insert(realm, %sObj, cache)",
                                        fieldName,
                                        Utils.getProxyClassSimpleName(field),
                                        fieldName)
                                .endControlFlow()
                        .emitStatement("table.setLink(columnInfo.%1$sIndex, rowIndex, cache%1$s)", fieldName)
                        .endControlFlow();
            } else if (Utils.isRealmList(field)) {
                writer
                        .emitEmptyLine()
                        .emitStatement("RealmList<%s> %sList = ((%s) object).%s()",
                                Utils.getGenericType(field), fieldName, interfaceName, getter)
                        .beginControlFlow("if (%sList != null)", fieldName)
                            .emitStatement("long %1$sNativeLinkViewPtr = Table.nativeGetLinkView(tableNativePtr, columnInfo.%1$sIndex, rowIndex)", fieldName)
                          .beginControlFlow("for (%1$s %2$sItem : %2$sList)", Utils.getGenericType(field), fieldName)
                                .emitStatement("Long cacheItemIndex%1$s = cache.get(%1$sItem)", fieldName)
                             .beginControlFlow("if (cacheItemIndex%s == null)", fieldName)
                                    .emitStatement("cacheItemIndex%1$s = %2$s.insert(realm, %1$sItem, cache)", fieldName, Utils.getProxyClassSimpleName(field))
                             .endControlFlow()
                                .emitStatement("LinkView.nativeAdd(%1$sNativeLinkViewPtr, cacheItemIndex%1$s)", fieldName)
                          .endControlFlow()
                        .emitStatement("LinkView.nativeClose(%sNativeLinkViewPtr)", fieldName)
                        .endControlFlow()
                        .emitEmptyLine();

            } else {
                setTableValues(writer, fieldType, fieldName, interfaceName, getter, false);
            }
        }

            writer.endControlFlow();
        writer.endControlFlow();
        writer.endMethod();
        writer.emitEmptyLine();
    }

