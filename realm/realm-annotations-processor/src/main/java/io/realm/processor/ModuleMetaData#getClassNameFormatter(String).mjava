    /**
     * Only available after {@link #preProcess(Set)} has run.
     * Returns the module name policy the given name.
     */
    public NameConverter getClassNameFormatter(String qualifiedClassName) {
        // We already validated that module definitions all agree on the same name policy
        // so just find first match
        if (!globalModules.isEmpty()) {
            return Utils.getNameFormatter(classNamingPolicy.get(globalModules.iterator().next()));
        }

        // No global modules found, so find match in modules specifically listing the class.
        // We already validated that all modules agree on the converter, so just find first match.
        for (Map.Entry<String, Set<String>> moduleInfo : specificClassesModules.entrySet()) {
            if (moduleInfo.getValue().contains(qualifiedClassName)) {
                return Utils.getNameFormatter(classNamingPolicy.get(moduleInfo.getKey()));
            }
        }

        // No policy was provided anywhere for this class
        return Utils.getNameFormatter(RealmNamingPolicy.NO_POLICY);
    }

