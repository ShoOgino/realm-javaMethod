    private void emitValidateBacklink(JavaWriter writer, Backlink backlink) throws IOException {
        String targetField = backlink.getTargetField();
        String targetClass = backlink.getTargetClass();

        // Preceding code has already verified that the backlink field is not in the table.
        // If it were, either the column count would be wrong, or some field would be missing.

        // verify that the source class exists
        String sourceClass = backlink.getSimpleSourceClass();
        String fullyQualifiedSourceClass = backlink.getSourceClass();
        writer.beginControlFlow("if (!sharedRealm.hasTable(\"%s%s\"))", Constants.TABLE_PREFIX, sourceClass);
        emitMigrationNeededException(writer, "\"Cannot find source class '%s' for @LinkingObjects field '%s.%s'\")",
                fullyQualifiedSourceClass, targetClass, targetField);
        writer.endControlFlow();

        // verify that the source class contains the source field
        String sourceField = backlink.getSourceField();
        writer.emitStatement("backlinkSourceTable = sharedRealm.getTable(\"%s%s\")", Constants.TABLE_PREFIX, sourceClass);
        writer.emitStatement("backlinkFieldIndex = backlinkSourceTable.getColumnIndex(\"%s\")", sourceField);
        writer.beginControlFlow("if (backlinkFieldIndex == Table.NO_MATCH)");
        emitMigrationNeededException(writer, "\"Cannot find source field '%s.%s' for @LinkingObjects field '%s.%s'\")",
                fullyQualifiedSourceClass, sourceField, targetClass, targetField);
        writer.endControlFlow();

        // verify that the source field type is target class
        writer.emitStatement("backlinkFieldType = backlinkSourceTable.getColumnType(backlinkFieldIndex)");
        writer.beginControlFlow("if ((backlinkFieldType != RealmFieldType.OBJECT) && (backlinkFieldType != RealmFieldType.LIST))");
        emitMigrationNeededException(writer, "\"Source field '%s.%s' for @LinkingObjects field '%s.%s' is not a RealmObject type\")",
                fullyQualifiedSourceClass, sourceField, targetClass, targetField);
        writer.endControlFlow();
        writer.emitStatement("backlinkTargetTable = backlinkSourceTable.getLinkTarget(backlinkFieldIndex)");
        writer.beginControlFlow("if (!table.hasSameSchema(backlinkTargetTable))");
        emitMigrationNeededException(writer, "\"Source field '%s.%s' for @LinkingObjects field '%s.%s' has wrong type '\" + backlinkTargetTable.getName() + \"'\")",
                fullyQualifiedSourceClass, sourceField, targetClass, targetField);
        writer.endControlFlow();
    }

