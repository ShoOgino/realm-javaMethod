    private boolean checkListTypes() {
        for (VariableElement field : fields) {
            if (Utils.isRealmList(field)) {
                // Check for missing generic (default back to Object)
                if (Utils.getGenericType(field) == null) {
                    Utils.error("No generic type supplied for field", field);
                    return false;
                }

                // Check that the referenced type is a concrete class and not an interface
                TypeMirror fieldType = field.asType();
                List<? extends TypeMirror> typeArguments = ((DeclaredType) fieldType).getTypeArguments();
                String genericCanonicalType = typeArguments.get(0).toString();
                TypeElement typeElement = elements.getTypeElement(genericCanonicalType);
                if (typeElement.getSuperclass().getKind() == TypeKind.NONE) {
                    Utils.error("Only concrete Realm classes are allowed in RealmLists. Neither " +
                            "interfaces nor abstract classes can be used.", field);
                    return false;
                }
            }
        }

        return true;
    }

