    private void emitInsertMethod(JavaWriter writer) throws IOException {
        writer.beginMethod(
                "long", // Return type
                "insert", // Method name
                EnumSet.of(Modifier.PUBLIC, Modifier.STATIC), // Modifiers
                "Realm", "realm", qualifiedClassName, "object", "Map<RealmModel,Long>", "cache" // Argument type & argument name
        );

        // If object is already in the Realm there is nothing to update
        writer
                .beginControlFlow("if (object instanceof RealmObjectProxy && ((RealmObjectProxy) object).realmGet$proxyState().getRealm$realm() != null && ((RealmObjectProxy) object).realmGet$proxyState().getRealm$realm().getPath().equals(realm.getPath()))")
                .emitStatement("return ((RealmObjectProxy) object).realmGet$proxyState().getRow$realm().getIndex()")
                .endControlFlow();

        writer.emitStatement("Table table = realm.getTable(%s.class)", qualifiedClassName);
        writer.emitStatement("long tableNativePtr = table.getNativePtr()");
        writer.emitStatement("%s columnInfo = (%s) realm.getSchema().getColumnInfo(%s.class)",
                columnInfoClassName(), columnInfoClassName(), qualifiedClassName);

        if (metadata.hasPrimaryKey()) {
            writer.emitStatement("long pkColumnIndex = %s", fieldIndexVariableReference(metadata.getPrimaryKey()));
        }
        addPrimaryKeyCheckIfNeeded(metadata, true, writer);

        for (VariableElement field : metadata.getFields()) {
            String fieldName = field.getSimpleName().toString();
            String fieldType = field.asType().toString();
            String getter = metadata.getInternalGetter(fieldName);

            //@formatter:off
            if (Utils.isRealmModel(field)) {
                writer
                        .emitEmptyLine()
                        .emitStatement("%s %sObj = ((%s) object).%s()", fieldType, fieldName, interfaceName, getter)
                        .beginControlFlow("if (%sObj != null)", fieldName)
                        .emitStatement("Long cache%1$s = cache.get(%1$sObj)", fieldName)
                        .beginControlFlow("if (cache%s == null)", fieldName)
                        .emitStatement("cache%s = %s.insert(realm, %sObj, cache)",
                                fieldName,
                                Utils.getProxyClassSimpleName(field),
                                fieldName)
                        .endControlFlow()
                        .emitStatement("Table.nativeSetLink(tableNativePtr, columnInfo.%1$sIndex, rowIndex, cache%1$s, false)", fieldName)
                        .endControlFlow();
            } else if (Utils.isRealmModelList(field)) {
                final String genericType = Utils.getGenericTypeQualifiedName(field);
                writer
                        .emitEmptyLine()
                        .emitStatement("RealmList<%s> %sList = ((%s) object).%s()",
                                genericType, fieldName, interfaceName, getter)
                        .beginControlFlow("if (%sList != null)", fieldName)
                        .emitStatement("OsList %1$sOsList = new OsList(table.getUncheckedRow(rowIndex), columnInfo.%1$sIndex)", fieldName)
                        .beginControlFlow("for (%1$s %2$sItem : %2$sList)", genericType, fieldName)
                        .emitStatement("Long cacheItemIndex%1$s = cache.get(%1$sItem)", fieldName)
                        .beginControlFlow("if (cacheItemIndex%s == null)", fieldName)
                        .emitStatement("cacheItemIndex%1$s = %2$s.insert(realm, %1$sItem, cache)", fieldName, Utils.getProxyClassSimpleName(field))
                        .endControlFlow()
                        .emitStatement("%1$sOsList.addRow(cacheItemIndex%1$s)", fieldName)
                        .endControlFlow()
                        .endControlFlow();
            } else if (Utils.isRealmValueList(field)) {
                final String genericType = Utils.getGenericTypeQualifiedName(field);
                final TypeMirror elementTypeMirror = TypeMirrors.getRealmListElementTypeMirror(field);
                writer
                        .emitEmptyLine()
                        .emitStatement("RealmList<%s> %sList = ((%s) object).%s()",
                                genericType, fieldName, interfaceName, getter)
                        .beginControlFlow("if (%sList != null)", fieldName)
                        .emitStatement("OsList %1$sOsList = new OsList(table.getUncheckedRow(rowIndex), columnInfo.%1$sIndex)", fieldName)
                        .beginControlFlow("for (%1$s %2$sItem : %2$sList)", genericType, fieldName)
                        .beginControlFlow("if (%1$sItem == null)", fieldName)
                        .emitStatement(fieldName + "OsList.addNull()")
                        .nextControlFlow("else")
                        .emitStatement(getStatementForAppendingValueToOsList(fieldName + "OsList", fieldName + "Item", elementTypeMirror))
                        .endControlFlow()
                        .endControlFlow()
                        .endControlFlow();
            } else {
                if (metadata.getPrimaryKey() != field) {
                    setTableValues(writer, fieldType, fieldName, interfaceName, getter, false);
                }
            }
            //@formatter:on
        }

        writer.emitStatement("return rowIndex");
        writer.endMethod()
                .emitEmptyLine();
    }

