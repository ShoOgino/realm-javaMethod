    // The field has the @Index annotation. It's only valid for column types:
    // STRING, DATE, INTEGER, BOOLEAN, and RealmMutableInteger
    private boolean categorizeIndexField(Element element, VariableElement variableElement) {
        boolean indexable = false;

        if (Utils.isMutableRealmInteger(variableElement)) {
            indexable = true;
        } else {
            Constants.RealmFieldType realmType = Constants.JAVA_TO_REALM_TYPES.get(variableElement.asType().toString());
            if (realmType != null) {
                switch (realmType) {
                    case STRING:
                    case DATE:
                    case INTEGER:
                    case BOOLEAN:
                        indexable = true;
                }
            }
        }

        if (indexable) {
            indexedFields.add(variableElement);
            return true;
        }

        Utils.error(String.format(Locale.US, "Field \"%s\" of type \"%s\" cannot be an @Index.", element, element.asType()));
        return false;
    }

