    // The anonymous subclass of MutableRealmInteger.Managed holds a reference to this proxy.
    // Even if all other references to the proxy are dropped, the proxy will not be GCed until
    // the MutableInteger that it owns, also becomes unreachable.
    //@formatter:off
    private void emitMutableRealmIntegerField(JavaWriter writer, VariableElement variableElement) throws IOException{
        writer.emitField("MutableRealmInteger.Managed",
                mutableRealmIntegerFieldName(variableElement),
                EnumSet.of(Modifier.PRIVATE, Modifier.FINAL),
                String.format(
                        "new MutableRealmInteger.Managed<%1$s>() {\n"
                                + "    @Override protected ProxyState<%1$s> getProxyState() { return proxyState; }\n"
                                + "    @Override protected long getColumnIndex() { return columnInfo.%2$s; }\n"
                                + "}",
                        qualifiedJavaClassName, columnIndexVarName(variableElement)));
    }
    //@formatter:on

