    /**
     * LinkLists
     */
    //@formatter:off
    private void emitRealmList(
        JavaWriter writer,
        final VariableElement field,
        String fieldName,
        String fieldTypeCanonicalName) throws IOException
    {
        String genericType = Utils.getGenericTypeQualifiedName(field);

        // Getter
        writer.emitAnnotation("Override");
        writer.beginMethod(fieldTypeCanonicalName, metadata.getInternalGetter(fieldName), EnumSet.of(Modifier.PUBLIC))
            .emitStatement("proxyState.getRealm$realm().checkIfValid()")
            .emitSingleLineComment("use the cached value if available")
            .beginControlFlow("if (" + fieldName + "RealmList != null)")
                .emitStatement("return " + fieldName + "RealmList")
            .nextControlFlow("else")
                .emitStatement("LinkView linkView = proxyState.getRow$realm().getLinkList(%s)", fieldIndexVariableReference(field))
                .emitStatement(fieldName + "RealmList = new RealmList<%s>(%s.class, linkView, proxyState.getRealm$realm())",
                    genericType, genericType)
                .emitStatement("return " + fieldName + "RealmList")
            .endControlFlow()
            .endMethod()
            .emitEmptyLine();

        // Setter
        writer.emitAnnotation("Override");
        writer.beginMethod("void", metadata.getInternalSetter(fieldName), EnumSet.of(Modifier.PUBLIC), fieldTypeCanonicalName, "value");
        emitCodeForUnderConstruction(writer, metadata.isPrimaryKey(field), new CodeEmitter() {
            @Override
            public void emit(JavaWriter writer) throws IOException {
                // check excludeFields
                writer.beginControlFlow("if (proxyState.getExcludeFields$realm().contains(\"%1$s\"))",
                        field.getSimpleName().toString())
                        .emitStatement("return")
                        .endControlFlow();
                final String modelFqcn = Utils.getGenericTypeQualifiedName(field);
                writer.beginControlFlow("if (value != null && !value.isManaged())")
                        .emitStatement("final Realm realm = (Realm) proxyState.getRealm$realm()")
                        .emitStatement("final RealmList<%1$s> original = value", modelFqcn)
                        .emitStatement("value = new RealmList<%1$s>()", modelFqcn)
                        .beginControlFlow("for (%1$s item : original)", modelFqcn)
                            .beginControlFlow("if (item == null || RealmObject.isManaged(item))")
                                .emitStatement("value.add(item)")
                            .nextControlFlow("else")
                                .emitStatement("value.add(realm.copyToRealm(item))")
                            .endControlFlow()
                        .endControlFlow()
                    .endControlFlow();

                // LinkView currently does not support default value feature. Just fallback to normal code.
            }
        });
        writer.emitStatement("proxyState.getRealm$realm().checkIfValid()")
            .emitStatement("LinkView links = proxyState.getRow$realm().getLinkList(%s)", fieldIndexVariableReference(field))
            .emitStatement("links.clear()")
            .beginControlFlow("if (value == null)")
                .emitStatement("return")
            .endControlFlow()
            .beginControlFlow("for (RealmModel linkedObject : (RealmList<? extends RealmModel>) value)")
                .beginControlFlow("if (!(RealmObject.isManaged(linkedObject) && RealmObject.isValid(linkedObject)))")
                    .emitStatement("throw new IllegalArgumentException(\"Each element of 'value' must be a valid managed object.\")")
                .endControlFlow()
                .beginControlFlow("if (((RealmObjectProxy)linkedObject).realmGet$proxyState().getRealm$realm() != proxyState.getRealm$realm())")
                    .emitStatement("throw new IllegalArgumentException(\"Each element of 'value' must belong to the same Realm.\")")
                .endControlFlow()
                .emitStatement("links.add(((RealmObjectProxy)linkedObject).realmGet$proxyState().getRow$realm().getIndex())")
            .endControlFlow()
            .endMethod();
    }
    //@formatter:on

