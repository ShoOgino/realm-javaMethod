    // Note that because of bytecode hackery, this method may run before the constructor!
    // It may even run before fields have been initialized.
    //@formatter:off
    private void emitInjectContextMethod(JavaWriter writer) throws IOException {
        writer.emitAnnotation("Override");
        writer.beginMethod(
                "void", // Return type
                "realm$injectObjectContext", // Method name
                EnumSet.of(Modifier.PUBLIC) // Modifiers
        ); // Argument type & argument name

        writer.beginControlFlow("if (this.proxyState != null)")
                .emitStatement("return")
                .endControlFlow()
                .emitStatement("final BaseRealm.RealmObjectContext context = BaseRealm.objectContext.get()")
                .emitStatement("this.columnInfo = (%1$s) context.getColumnInfo()", columnInfoClassName())
                .emitStatement("this.proxyState = new ProxyState<%1$s>(this)", qualifiedJavaClassName)
                .emitStatement("proxyState.setRealm$realm(context.getRealm())")
                .emitStatement("proxyState.setRow$realm(context.getRow())")
                .emitStatement("proxyState.setAcceptDefaultValue$realm(context.getAcceptDefaultValue())")
                .emitStatement("proxyState.setExcludeFields$realm(context.getExcludeFields())")
                .endMethod()
                .emitEmptyLine();
    }
    //@formatter:on

