    private void emitUpdateMethod(JavaWriter writer) throws IOException {
        if (!metadata.hasPrimaryKey()) {
            return;
        }

        writer.beginMethod(
                qualifiedClassName, // Return type
                "update", // Method name
                EnumSet.of(Modifier.STATIC), // Modifiers
                "Realm", "realm", qualifiedClassName, "realmObject", qualifiedClassName, "newObject", "Map<RealmModel, RealmObjectProxy>", "cache"); // Argument type & argument name

        writer
                .emitStatement("%1$s realmObjectTarget = (%1$s) realmObject", interfaceName)
                .emitStatement("%1$s realmObjectSource = (%1$s) newObject", interfaceName);

        for (VariableElement field : metadata.getFields()) {
            String fieldName = field.getSimpleName().toString();
            String setter = metadata.getInternalSetter(fieldName);
            String getter = metadata.getInternalGetter(fieldName);
            //@formatter:off
            if (Utils.isRealmModel(field)) {
                writer
                        .emitStatement("%s %sObj = realmObjectSource.%s()",
                                Utils.getFieldTypeQualifiedName(field), fieldName, getter)
                        .beginControlFlow("if (%sObj == null)", fieldName)
                        .emitStatement("realmObjectTarget.%s(null)", setter)
                        .nextControlFlow("else")
                        .emitStatement("%1$s cache%2$s = (%1$s) cache.get(%2$sObj)",
                                Utils.getFieldTypeQualifiedName(field), fieldName)
                        .beginControlFlow("if (cache%s != null)", fieldName)
                        .emitStatement("realmObjectTarget.%s(cache%s)", setter, fieldName)
                        .nextControlFlow("else")
                        .emitStatement("realmObjectTarget.%s(%s.copyOrUpdate(realm, %sObj, true, cache))",
                                setter, Utils.getProxyClassSimpleName(field), fieldName)
                        .endControlFlow()
                        // No need to throw exception here if the field is not nullable. A exception will be thrown in setter.
                        .endControlFlow();
            } else if (Utils.isRealmModelList(field)) {
                final String genericType = Utils.getGenericTypeQualifiedName(field);
                writer
                    .emitStatement("RealmList<%s> %sList = realmObjectSource.%s()", genericType, fieldName, getter)
                    .emitStatement("RealmList<%s> %sRealmList = realmObjectTarget.%s()", genericType, fieldName, getter)
                    .beginControlFlow("if (%1$sList != null && %1$sList.size() == %1$sRealmList.size())", fieldName)
                        .emitSingleLineComment("For lists of equal lengths, we need to set each element directly as clearing the receiver list can be wrong if the input and target list are the same.")
                        .emitStatement("int objects = %sList.size()", fieldName)
                        .beginControlFlow("for (int i = 0; i < objects; i++)")
                            .emitStatement("%1$s %2$sItem = %2$sList.get(i)", genericType, fieldName)
                            .emitStatement("%1$s cache%2$s = (%1$s) cache.get(%2$sItem)", genericType, fieldName)
                            .beginControlFlow("if (cache%s != null)", fieldName)
                                .emitStatement("%1$sRealmList.set(i, cache%1$s)", fieldName)
                            .nextControlFlow("else")
                                .emitStatement("%1$sRealmList.set(i, %2$s.copyOrUpdate(realm, %1$sItem, true, cache))", fieldName, Utils.getProxyClassSimpleName(field))
                            .endControlFlow()
                        .endControlFlow()
                    .nextControlFlow("else")
                        .emitStatement("%sRealmList.clear()", fieldName)
                        .beginControlFlow("if (%sList != null)", fieldName)
                            .beginControlFlow("for (int i = 0; i < %sList.size(); i++)", fieldName)
                                .emitStatement("%1$s %2$sItem = %2$sList.get(i)", genericType, fieldName)
                                .emitStatement("%1$s cache%2$s = (%1$s) cache.get(%2$sItem)", genericType, fieldName)
                                .beginControlFlow("if (cache%s != null)", fieldName)
                                    .emitStatement("%1$sRealmList.add(cache%1$s)", fieldName)
                                .nextControlFlow("else")
                                    .emitStatement("%1$sRealmList.add(%2$s.copyOrUpdate(realm, %1$sItem, true, cache))", fieldName, Utils.getProxyClassSimpleName(field))
                                .endControlFlow()
                            .endControlFlow()
                        .endControlFlow()
                    .endControlFlow();
            } else if (Utils.isRealmValueList(field)) {
                writer.emitStatement("realmObjectTarget.%s(realmObjectSource.%s())", setter, getter);
            } else if (Utils.isMutableRealmInteger(field)) {
                writer.emitStatement("realmObjectTarget.%s().set(realmObjectSource.%s().get())", getter, getter);
            } else {
                if (field != metadata.getPrimaryKey()) {
                    writer.emitStatement("realmObjectTarget.%s(realmObjectSource.%s())", setter, getter);
                }
            }
            //@formatter:on
        }

        writer.emitStatement("return realmObject");
        writer.endMethod();
        writer.emitEmptyLine();
    }

