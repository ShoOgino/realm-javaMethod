    //@formatter:off
    private void emitCreateDetachedCopyMethod(JavaWriter writer) throws IOException {
        writer.beginMethod(
                qualifiedClassName, // Return type
                "createDetachedCopy", // Method name
                EnumSet.of(Modifier.PUBLIC, Modifier.STATIC), // Modifiers
                qualifiedClassName, "realmObject", "int", "currentDepth", "int", "maxDepth", "Map<RealmModel, CacheData<RealmModel>>", "cache");
        writer
                .beginControlFlow("if (currentDepth > maxDepth || realmObject == null)")
                .emitStatement("return null")
                .endControlFlow()
                .emitStatement("CacheData<RealmModel> cachedObject = cache.get(realmObject)")
                .emitStatement("%s unmanagedObject", qualifiedClassName)
                .beginControlFlow("if (cachedObject == null)")
                .emitStatement("unmanagedObject = new %s()", qualifiedClassName)
                .emitStatement("cache.put(realmObject, new RealmObjectProxy.CacheData<RealmModel>(currentDepth, unmanagedObject))")
                .nextControlFlow("else")
                .emitSingleLineComment("Reuse cached object or recreate it because it was encountered at a lower depth.")
                .beginControlFlow("if (currentDepth >= cachedObject.minDepth)")
                .emitStatement("return (%s) cachedObject.object", qualifiedClassName)
                .endControlFlow()
                .emitStatement("unmanagedObject = (%s) cachedObject.object", qualifiedClassName)
                .emitStatement("cachedObject.minDepth = currentDepth")
                .endControlFlow();

        // may cause an unused variable warning if the object contains only null lists
        writer.emitStatement("%1$s unmanagedCopy = (%1$s) unmanagedObject", interfaceName)
            .emitStatement("%1$s realmSource = (%1$s) realmObject", interfaceName);

        for (VariableElement field : metadata.getFields()) {
            String fieldName = field.getSimpleName().toString();
            String setter = metadata.getInternalSetter(fieldName);
            String getter = metadata.getInternalGetter(fieldName);

            if (Utils.isRealmModel(field)) {
                writer
                        .emitEmptyLine()
                        .emitSingleLineComment("Deep copy of %s", fieldName)
                        .emitStatement("unmanagedCopy.%s(%s.createDetachedCopy(realmSource.%s(), currentDepth + 1, maxDepth, cache))",
                                setter, Utils.getProxyClassSimpleName(field), getter);
            } else if (Utils.isRealmModelList(field)) {
                writer
                        .emitEmptyLine()
                        .emitSingleLineComment("Deep copy of %s", fieldName)
                        .beginControlFlow("if (currentDepth == maxDepth)")
                        .emitStatement("unmanagedCopy.%s(null)", setter)
                        .nextControlFlow("else")
                        .emitStatement("RealmList<%s> managed%sList = realmSource.%s()",
                                Utils.getGenericTypeQualifiedName(field), fieldName, getter)
                        .emitStatement("RealmList<%1$s> unmanaged%2$sList = new RealmList<%1$s>()", Utils.getGenericTypeQualifiedName(field), fieldName)
                        .emitStatement("unmanagedCopy.%s(unmanaged%sList)", setter, fieldName)
                        .emitStatement("int nextDepth = currentDepth + 1")
                        .emitStatement("int size = managed%sList.size()", fieldName)
                        .beginControlFlow("for (int i = 0; i < size; i++)")
                        .emitStatement("%s item = %s.createDetachedCopy(managed%sList.get(i), nextDepth, maxDepth, cache)",
                                Utils.getGenericTypeQualifiedName(field), Utils.getProxyClassSimpleName(field), fieldName)
                        .emitStatement("unmanaged%sList.add(item)", fieldName)
                        .endControlFlow()
                        .endControlFlow();
            } else if (Utils.isRealmValueList(field)) {
                writer
                        .emitEmptyLine()
                        .emitStatement("unmanagedCopy.%1$s(new RealmList<%2$s>())", setter, Utils.getGenericTypeQualifiedName(field))
                        .emitStatement("unmanagedCopy.%1$s().addAll(realmSource.%1$s())", getter);
            } else if (Utils.isMutableRealmInteger(field)) {
                // If the user initializes the unmanaged MutableRealmInteger to null, this will fail mysteriously.
                writer.emitStatement("unmanagedCopy.%s().set(realmSource.%s().get())", getter, getter);
            } else {
                writer.emitStatement("unmanagedCopy.%s(realmSource.%s())", setter, getter);
            }
        }

        writer.emitEmptyLine();
        writer.emitStatement("return unmanagedObject");
        writer.endMethod();
        writer.emitEmptyLine();
    }
    //@formatter:on

