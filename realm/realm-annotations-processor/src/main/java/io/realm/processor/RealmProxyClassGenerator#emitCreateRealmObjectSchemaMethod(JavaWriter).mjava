    private void emitCreateRealmObjectSchemaMethod(JavaWriter writer) throws IOException {
        writer.beginMethod(
                "RealmObjectSchema", // Return type
                "createRealmObjectSchema", // Method name
                EnumSet.of(Modifier.PUBLIC, Modifier.STATIC), // Modifiers
                "RealmSchema", "realmSchema"); // Argument type & argument name

        writer.beginControlFlow("if (realmSchema.contains(\"%s\"))", this.simpleClassName)
            .emitStatement("return realmSchema.get(\"%s\")", this.simpleClassName)
            .endControlFlow();

        writer.emitStatement("RealmObjectSchema realmObjectSchema = realmSchema.create(\"%s\")", this.simpleClassName);

        // For each field generate corresponding table index constant
        for (VariableElement field : metadata.getFields()) {
            String fieldName = field.getSimpleName().toString();
            String fieldTypeSimpleName = Utils.getFieldTypeSimpleName(field);

            Constants.RealmFieldType fieldType = getRealmType(field);
            switch (fieldType) {
                case NOTYPE:
                    // Perhaps this should fail quickly?
                    break;

                case OBJECT:
                    writer.beginControlFlow("if (!realmSchema.contains(\"" + fieldTypeSimpleName + "\"))")
                            .emitStatement("%s%s.createRealmObjectSchema(realmSchema)", fieldTypeSimpleName, Constants.PROXY_SUFFIX)
                            .endControlFlow()
                            .emitStatement("realmObjectSchema.add(\"%s\", RealmFieldType.OBJECT, realmSchema.get(\"%s\"))",
                                    fieldName, fieldTypeSimpleName);
                    break;

                case LIST:
                    String genericTypeSimpleName = Utils.getGenericTypeSimpleName(field);
                    writer.beginControlFlow("if (!realmSchema.contains(\"" + genericTypeSimpleName + "\"))")
                            .emitStatement("%s%s.createRealmObjectSchema(realmSchema)", genericTypeSimpleName, Constants.PROXY_SUFFIX)
                            .endControlFlow()
                            .emitStatement("realmObjectSchema.add(\"%s\", RealmFieldType.LIST, realmSchema.get(\"%s\"))",
                                    fieldName, genericTypeSimpleName);
                    break;

                default:
                    String nullableFlag = (metadata.isNullable(field) ? "!" : "") + "Property.REQUIRED";
                    String indexedFlag = (metadata.isIndexed(field) ? "" : "!") + "Property.INDEXED";
                    String primaryKeyFlag = (metadata.isPrimaryKey(field) ? "" : "!") + "Property.PRIMARY_KEY";
                    writer.emitStatement("realmObjectSchema.add(\"%s\", %s, %s, %s, %s)",
                            fieldName,
                            fieldType.getRealmType(),
                            primaryKeyFlag,
                            indexedFlag,
                            nullableFlag);
            }
        }
        writer.emitStatement("return realmObjectSchema");
        writer.endMethod()
                .emitEmptyLine();
    }

