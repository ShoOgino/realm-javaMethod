    private void emitCopyMethod(JavaWriter writer) throws IOException {
        writer.beginMethod(
                qualifiedClassName, // Return type
                "copy", // Method name
                EnumSet.of(Modifier.PUBLIC, Modifier.STATIC), // Modifiers
                "Realm", "realm", qualifiedClassName, "newObject", "boolean", "update", "Map<RealmModel,RealmObjectProxy>", "cache"); // Argument type & argument name

        writer.emitStatement("RealmObjectProxy cachedRealmObject = cache.get(newObject)");
        writer.beginControlFlow("if (cachedRealmObject != null)")
                .emitStatement("return (%s) cachedRealmObject", qualifiedClassName)
                .endControlFlow();


        writer.emitEmptyLine()
                .emitSingleLineComment("rejecting default values to avoid creating unexpected objects from RealmModel/RealmList fields.");
        if (metadata.hasPrimaryKey()) {
            writer.emitStatement("%s realmObject = realm.createObjectInternal(%s.class, ((%s) newObject).%s(), false, Collections.<String>emptyList())",
                    qualifiedClassName, qualifiedClassName, interfaceName, metadata.getPrimaryKeyGetter());
        } else {
            writer.emitStatement("%s realmObject = realm.createObjectInternal(%s.class, false, Collections.<String>emptyList())",
                    qualifiedClassName, qualifiedClassName);
        }
        writer.emitStatement("cache.put(newObject, (RealmObjectProxy) realmObject)");

        writer.emitEmptyLine()
                .emitStatement("%1$s realmObjectSource = (%1$s) newObject", interfaceName)
                .emitStatement("%1$s realmObjectCopy = (%1$s) realmObject", interfaceName);

        writer.emitEmptyLine();
        for (VariableElement field : metadata.getFields()) {
            String fieldName = field.getSimpleName().toString();
            String fieldType = field.asType().toString();
            String setter = metadata.getInternalSetter(fieldName);
            String getter = metadata.getInternalGetter(fieldName);

            if (metadata.isPrimaryKey(field)) {
                // PK has been set when creating object.
                continue;
            }

            //@formatter:off
            if (Utils.isRealmModel(field)) {
                writer.emitEmptyLine()
                        .emitStatement("%s %sObj = realmObjectSource.%s()", fieldType, fieldName, getter)
                        .beginControlFlow("if (%sObj == null)", fieldName)
                            .emitStatement("realmObjectCopy.%s(null)", setter)
                        .nextControlFlow("else")
                            .emitStatement("%s cache%s = (%s) cache.get(%sObj)", fieldType, fieldName, fieldType, fieldName)
                            .beginControlFlow("if (cache%s != null)", fieldName)
                                .emitStatement("realmObjectCopy.%s(cache%s)", setter, fieldName)
                            .nextControlFlow("else")
                                .emitStatement("realmObjectCopy.%s(%s.copyOrUpdate(realm, %sObj, update, cache))",
                                    setter, Utils.getProxyClassSimpleName(field), fieldName)
                            .endControlFlow()
                        // No need to throw exception here if the field is not nullable. A exception will be thrown in setter.
                        .endControlFlow();
            } else if (Utils.isRealmList(field)) {
                final String genericType = Utils.getGenericTypeQualifiedName(field);
                writer.emitEmptyLine()
                        .emitStatement("RealmList<%s> %sList = realmObjectSource.%s()", genericType, fieldName, getter)
                        .beginControlFlow("if (%sList != null)", fieldName)
                            .emitStatement("RealmList<%s> %sRealmList = realmObjectCopy.%s()",
                                genericType, fieldName, getter)
                            .beginControlFlow("for (int i = 0; i < %sList.size(); i++)", fieldName)
                                .emitStatement("%1$s %2$sItem = %2$sList.get(i)", genericType, fieldName)
                                .emitStatement("%1$s cache%2$s = (%1$s) cache.get(%2$sItem)", genericType, fieldName)
                                .beginControlFlow("if (cache%s != null)", fieldName)
                                    .emitStatement("%1$sRealmList.add(cache%1$s)", fieldName)
                                .nextControlFlow("else")
                                    .emitStatement("%1$sRealmList.add(%2$s.copyOrUpdate(realm, %1$sItem, update, cache))",
                                        fieldName, Utils.getProxyClassSimpleName(field))
                                .endControlFlow()
                            .endControlFlow()
                        .endControlFlow()
                        .emitEmptyLine();

            } else if (Utils.isMutableRealmInteger(field)) {
                writer.emitEmptyLine()
                        .emitStatement("realmObjectCopy.%1$s().set(realmObjectSource.%1$s().get())", getter);
            } else {
                writer.emitStatement("realmObjectCopy.%s(realmObjectSource.%s())", setter, getter);
            }
            //@formatter:on
        }

        writer.emitStatement("return realmObject");
        writer.endMethod();
        writer.emitEmptyLine();
    }

