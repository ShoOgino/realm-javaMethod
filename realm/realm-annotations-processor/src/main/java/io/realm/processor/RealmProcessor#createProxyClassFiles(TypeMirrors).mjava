    private boolean createProxyClassFiles(TypeMirrors typeMirrors) {
        for (ClassMetaData metadata : classCollection.getClasses()) {
            RealmProxyInterfaceGenerator interfaceGenerator = new RealmProxyInterfaceGenerator(processingEnv, metadata);
            try {
                interfaceGenerator.generate();
            } catch (IOException e) {
                Utils.error(e.getMessage(), metadata.getClassElement());
                return false;
            }

            RealmProxyClassGenerator sourceCodeGenerator = new RealmProxyClassGenerator(processingEnv, typeMirrors, metadata, classCollection);
            try {
                sourceCodeGenerator.generate();
            } catch (IOException | UnsupportedOperationException e) {
                Utils.error(e.getMessage(), metadata.getClassElement());
                return false;
            }
        }
        return true;
    }

