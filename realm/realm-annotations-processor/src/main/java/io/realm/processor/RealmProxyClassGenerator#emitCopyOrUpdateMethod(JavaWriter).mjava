    private void emitCopyOrUpdateMethod(JavaWriter writer) throws IOException {
        writer.beginMethod(
                className, // Return type
                "copyOrUpdate", // Method name
                EnumSet.of(Modifier.PUBLIC, Modifier.STATIC), // Modifiers
                "Realm", "realm", className, "object", "boolean", "update", "Map<RealmObject,RealmObjectProxy>", "cache" // Argument type & argument name
        );

        // If object is already in the Realm there is nothing to update
        writer
            .beginControlFlow("if (object.realm != null && object.realm.getPath().equals(realm.getPath()))")
                .emitStatement("return object")
            .endControlFlow();

        if (!metadata.hasPrimaryKey()) {
            writer.emitStatement("return copy(realm, object, update, cache)");
        } else {
            writer
                .emitStatement("%s realmObject = null", className)
                .emitStatement("boolean canUpdate = update")
                .beginControlFlow("if (canUpdate)")
                    .emitStatement("Table table = realm.getTable(%s.class)", className)
                    .emitStatement("long pkColumnIndex = table.getPrimaryKey()");
            if (Utils.isString(metadata.getPrimaryKey())) {
                writer.emitStatement("String primaryKey");
            } else {
                writer.emitStatement("long primaryKey");
            }

            if (Utils.isString(metadata.getPrimaryKey())) {
                writer
                    .beginControlFlow("if (object.realm != null)")
                        .emitStatement("primaryKey = ((%sRealmProxy)object).%s()", className, metadata.getPrimaryKeyGetter())
                    .nextControlFlow("else")
                        .emitStatement("Field field = null;")
                        .emitStatement("Class<? extends %s> clazz = object.getClass()", className)
                        .beginControlFlow("try")
                            .emitStatement("field = clazz.getDeclaredField(\"%s\")", metadata.getPrimaryKey())
                        .nextControlFlow("catch (NoSuchFieldException e)")
                            .emitStatement("throw new RealmException(e.getMessage())")
                        .endControlFlow()
                        .emitStatement("field.setAccessible(true)")
                        .beginControlFlow("try")
                            .emitStatement("primaryKey = (String) field.get(object)")
                        .nextControlFlow("catch (IllegalAccessException e)")
                            .emitStatement("throw new RealmException(e.getMessage())")
                        .endControlFlow()
                    .endControlFlow()
                    .beginControlFlow("if (primaryKey == null)")
                        .emitStatement("throw new IllegalArgumentException(\"Primary key value must not be null.\")")
                    .endControlFlow()
                    .emitStatement("long rowIndex = table.findFirstString(pkColumnIndex, primaryKey)", metadata.getPrimaryKeyGetter());
            } else {
                writer
                    .beginControlFlow("if (object.realm != null)")
                        .emitStatement("primaryKey = ((%sRealmProxy)object).%s()", className, metadata.getPrimaryKeyGetter())
                    .nextControlFlow("else")
                        .emitStatement("Field field = null;")
                        .emitStatement("Class<? extends %s> clazz = object.getClass()", className)
                        .beginControlFlow("try")
                            .emitStatement("field = clazz.getDeclaredField(\"%s\")", metadata.getPrimaryKey())
                        .nextControlFlow("catch (NoSuchFieldException e)")
                            .emitStatement("throw new RealmException(e.getMessage())")
                        .endControlFlow()
                        .emitStatement("field.setAccessible(true)")
                        .beginControlFlow("try")
                            .emitStatement("primaryKey = (Long) field.get(object)")
                        .nextControlFlow("catch (IllegalAccessException e)")
                            .emitStatement("throw new RealmException(e.getMessage())")
                        .endControlFlow()
                    .endControlFlow()
                    .emitStatement("long rowIndex = table.findFirstLong(pkColumnIndex, primaryKey)");
            }

            writer
                .beginControlFlow("if (rowIndex != TableOrView.NO_MATCH)")
                    .emitStatement("realmObject = new %s(realm.schema.getColumnInfo(%s.class))",
                            Utils.getProxyClassName(className),
                            className)
                    .emitStatement("realmObject.realm = realm")
                    .emitStatement("realmObject.row = table.getUncheckedRow(rowIndex)")
                    .emitStatement("cache.put(object, (RealmObjectProxy) realmObject)")
                .nextControlFlow("else")
                    .emitStatement("canUpdate = false")
                .endControlFlow();

            writer.endControlFlow();

            writer
                .emitEmptyLine()
                .beginControlFlow("if (canUpdate)")
                    .emitStatement("return update(realm, realmObject, object, cache)")
                .nextControlFlow("else")
                    .emitStatement("return copy(realm, object, update, cache)")
                .endControlFlow();
        }

        writer.endMethod();
        writer.emitEmptyLine();
    }

