    private void emitCopyOrUpdateMethod(JavaWriter writer) throws IOException {
        writer.beginMethod(
                className, // Return type
                "copyOrUpdate", // Method name
                EnumSet.of(Modifier.PUBLIC, Modifier.STATIC), // Modifiers
                "Realm", "realm", className, "object", "boolean", "update", "Map<RealmModel,RealmObjectProxy>", "cache" // Argument type & argument name
        );

        writer
            .beginControlFlow("if (object instanceof RealmObjectProxy && ((RealmObjectProxy) object).realmGet$proxyState().getRealm$realm() != null && ((RealmObjectProxy) object).realmGet$proxyState().getRealm$realm().threadId != realm.threadId)")
                .emitStatement("throw new IllegalArgumentException(\"Objects which belong to Realm instances in other" +
                        " threads cannot be copied into this Realm instance.\")")
            .endControlFlow();

        // If object is already in the Realm there is nothing to update
        writer
            .beginControlFlow("if (object instanceof RealmObjectProxy && ((RealmObjectProxy)object).realmGet$proxyState().getRealm$realm() != null && ((RealmObjectProxy)object).realmGet$proxyState().getRealm$realm().getPath().equals(realm.getPath()))")
                .emitStatement("return object")
            .endControlFlow();

        if (!metadata.hasPrimaryKey()) {
            writer.emitStatement("return copy(realm, object, update, cache)");
        } else {
            writer
                .emitStatement("%s realmObject = null", className)
                .emitStatement("boolean canUpdate = update")
                .beginControlFlow("if (canUpdate)")
                    .emitStatement("Table table = realm.getTable(%s.class)", className)
                    .emitStatement("long pkColumnIndex = table.getPrimaryKey()");

            String primaryKeyGetter = metadata.getPrimaryKeyGetter();
            VariableElement primaryKeyElement = metadata.getPrimaryKey();
            if (metadata.isNullable(primaryKeyElement)) {
                if (Utils.isString(primaryKeyElement)) {
                    writer
                        .emitStatement("String value = ((%s) object).%s()", interfaceName, primaryKeyGetter)
                        .emitStatement("long rowIndex = TableOrView.NO_MATCH")
                        .beginControlFlow("if (value == null)")
                            .emitStatement("rowIndex = table.findFirstNull(pkColumnIndex)")
                        .nextControlFlow("else")
                            .emitStatement("rowIndex = table.findFirstString(pkColumnIndex, value)")
                        .endControlFlow();
                } else {
                    writer
                        .emitStatement("Number value = ((%s) object).%s()", interfaceName, primaryKeyGetter)
                        .emitStatement("long rowIndex = TableOrView.NO_MATCH")
                        .beginControlFlow("if (value == null)")
                            .emitStatement("rowIndex = table.findFirstNull(pkColumnIndex)")
                        .nextControlFlow("else")
                            .emitStatement("rowIndex = table.findFirstLong(pkColumnIndex, value.longValue())")
                        .endControlFlow();
                }
            } else {
                writer.emitStatement("long rowIndex = table.findFirstLong(pkColumnIndex, ((%s) object).%s())",
                        interfaceName, primaryKeyGetter);
            }

            writer
                .beginControlFlow("if (rowIndex != TableOrView.NO_MATCH)")
                    .emitStatement("realmObject = new %s(realm.schema.getColumnInfo(%s.class))",
                            Utils.getProxyClassName(className),
                            className)
                    .emitStatement("((RealmObjectProxy)realmObject).realmGet$proxyState().setRealm$realm(realm)")
                    .emitStatement("((RealmObjectProxy)realmObject).realmGet$proxyState().setRow$realm(table.getUncheckedRow(rowIndex))")
                    .emitStatement("cache.put(object, (RealmObjectProxy) realmObject)")
                .nextControlFlow("else")
                    .emitStatement("canUpdate = false")
                .endControlFlow();

            writer.endControlFlow();

            writer
                .emitEmptyLine()
                .beginControlFlow("if (canUpdate)")
                    .emitStatement("return update(realm, realmObject, object, cache)")
                .nextControlFlow("else")
                    .emitStatement("return copy(realm, object, update, cache)")
                .endControlFlow();
        }

        writer.endMethod();
        writer.emitEmptyLine();
    }

