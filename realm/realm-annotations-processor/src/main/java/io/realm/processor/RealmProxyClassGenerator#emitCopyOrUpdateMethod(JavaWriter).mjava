    //@formatter:off
    private void emitCopyOrUpdateMethod(JavaWriter writer) throws IOException {
        writer.beginMethod(
                qualifiedJavaClassName, // Return type
                "copyOrUpdate", // Method name
                EnumSet.of(Modifier.PUBLIC, Modifier.STATIC), // Modifiers
                "Realm", "realm", // Argument type & argument name
                columnInfoClassName(), "columnInfo",
                qualifiedJavaClassName, "object",
                "boolean", "update",
                "Map<RealmModel,RealmObjectProxy>", "cache",
                "Set<ImportFlag>", "flags"
        );

        writer
                .beginControlFlow("if (object instanceof RealmObjectProxy && ((RealmObjectProxy) object).realmGet$proxyState().getRealm$realm() != null)")
                    .emitStatement("final BaseRealm otherRealm = ((RealmObjectProxy) object).realmGet$proxyState().getRealm$realm()")
                    .beginControlFlow("if (otherRealm.threadId != realm.threadId)")
                        .emitStatement("throw new IllegalArgumentException(\"Objects which belong to Realm instances in other threads cannot be copied into this Realm instance.\")")
                    .endControlFlow()

                    // If object is already in the Realm there is nothing to update
                    .beginControlFlow("if (otherRealm.getPath().equals(realm.getPath()))")
                        .emitStatement("return object")
                    .endControlFlow()
                .endControlFlow();


        writer.emitStatement("final BaseRealm.RealmObjectContext objectContext = BaseRealm.objectContext.get()");

        writer.emitStatement("RealmObjectProxy cachedRealmObject = cache.get(object)")
                .beginControlFlow("if (cachedRealmObject != null)")
                    .emitStatement("return (%s) cachedRealmObject", qualifiedJavaClassName)
                .endControlFlow()
                .emitEmptyLine();

        if (!metadata.hasPrimaryKey()) {
            writer.emitStatement("return copy(realm, columnInfo, object, update, cache, flags)");
        } else {
            writer
                    .emitStatement("%s realmObject = null", qualifiedJavaClassName)
                    .emitStatement("boolean canUpdate = update")
                    .beginControlFlow("if (canUpdate)")
                    .emitStatement("Table table = realm.getTable(%s.class)", qualifiedJavaClassName)
                    .emitStatement("long pkColumnIndex = %s", fieldIndexVariableReference(metadata.getPrimaryKey()));

            String primaryKeyGetter = metadata.getPrimaryKeyGetter();
            VariableElement primaryKeyElement = metadata.getPrimaryKey();
            if (metadata.isNullable(primaryKeyElement)) {
                if (Utils.isString(primaryKeyElement)) {
                    writer
                            .emitStatement("String value = ((%s) object).%s()", interfaceName, primaryKeyGetter)
                            .emitStatement("long rowIndex = Table.NO_MATCH")
                            .beginControlFlow("if (value == null)")
                                .emitStatement("rowIndex = table.findFirstNull(pkColumnIndex)")
                            .nextControlFlow("else")
                                .emitStatement("rowIndex = table.findFirstString(pkColumnIndex, value)")
                            .endControlFlow();
                } else {
                    writer
                            .emitStatement("Number value = ((%s) object).%s()", interfaceName, primaryKeyGetter)
                            .emitStatement("long rowIndex = Table.NO_MATCH")
                            .beginControlFlow("if (value == null)")
                                .emitStatement("rowIndex = table.findFirstNull(pkColumnIndex)")
                            .nextControlFlow("else")
                                .emitStatement("rowIndex = table.findFirstLong(pkColumnIndex, value.longValue())")
                            .endControlFlow();
                }
            } else {
                String pkType = Utils.isString(metadata.getPrimaryKey()) ? "String" : "Long";
                writer.emitStatement("long rowIndex = table.findFirst%s(pkColumnIndex, ((%s) object).%s())",
                        pkType, interfaceName, primaryKeyGetter);
            }

            writer
                    .beginControlFlow("if (rowIndex == Table.NO_MATCH)")
                        .emitStatement("canUpdate = false")
                    .nextControlFlow("else")
                        .beginControlFlow("try")
                            .emitStatement("objectContext.set(realm, table.getUncheckedRow(rowIndex), columnInfo, false, Collections.<String> emptyList())")
                            .emitStatement("realmObject = new %s()", qualifiedGeneratedClassName)
                            .emitStatement("cache.put(object, (RealmObjectProxy) realmObject)")
                        .nextControlFlow("finally")
                            .emitStatement("objectContext.clear()")
                        .endControlFlow()
                    .endControlFlow();

            writer.endControlFlow();

            writer
                    .emitEmptyLine()
                       .emitStatement("return (canUpdate) ? update(realm, columnInfo, realmObject, object, cache, flags) : copy(realm, columnInfo, object, update, cache, flags)");
        }

        writer.endMethod()
                .emitEmptyLine();
    }
    //@formatter:on

