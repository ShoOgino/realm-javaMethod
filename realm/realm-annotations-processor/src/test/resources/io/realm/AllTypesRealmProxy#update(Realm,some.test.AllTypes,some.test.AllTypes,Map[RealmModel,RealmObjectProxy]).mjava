    static some.test.AllTypes update(Realm realm, some.test.AllTypes realmObject, some.test.AllTypes newObject, Map<RealmModel, RealmObjectProxy> cache) {
        AllTypesRealmProxyInterface realmObjectTarget = (AllTypesRealmProxyInterface) realmObject;
        AllTypesRealmProxyInterface realmObjectSource = (AllTypesRealmProxyInterface) newObject;
        realmObjectTarget.realmSet$columnLong(realmObjectSource.realmGet$columnLong());
        realmObjectTarget.realmSet$columnFloat(realmObjectSource.realmGet$columnFloat());
        realmObjectTarget.realmSet$columnDouble(realmObjectSource.realmGet$columnDouble());
        realmObjectTarget.realmSet$columnBoolean(realmObjectSource.realmGet$columnBoolean());
        realmObjectTarget.realmSet$columnDate(realmObjectSource.realmGet$columnDate());
        realmObjectTarget.realmSet$columnBinary(realmObjectSource.realmGet$columnBinary());
        realmObjectTarget.realmGet$columnMutableRealmInteger().set(realmObjectSource.realmGet$columnMutableRealmInteger().get());
        some.test.AllTypes columnObjectObj = realmObjectSource.realmGet$columnObject();
        if (columnObjectObj == null) {
            realmObjectTarget.realmSet$columnObject(null);
        } else {
            some.test.AllTypes cachecolumnObject = (some.test.AllTypes) cache.get(columnObjectObj);
            if (cachecolumnObject != null) {
                realmObjectTarget.realmSet$columnObject(cachecolumnObject);
            } else {
                realmObjectTarget.realmSet$columnObject(AllTypesRealmProxy.copyOrUpdate(realm, columnObjectObj, true, cache));
            }
        }
        RealmList<some.test.AllTypes> columnRealmListList = realmObjectSource.realmGet$columnRealmList();
        RealmList<some.test.AllTypes> columnRealmListRealmList = realmObjectTarget.realmGet$columnRealmList();
        if (columnRealmListList != null && columnRealmListList.size() == columnRealmListRealmList.size()) {
            // For lists of equal lengths, we need to set each element directly as clearing the receiver list can be wrong if the input and target list are the same.
            int objects = columnRealmListList.size();
            for (int i = 0; i < objects; i++) {
                some.test.AllTypes columnRealmListItem = columnRealmListList.get(i);
                some.test.AllTypes cachecolumnRealmList = (some.test.AllTypes) cache.get(columnRealmListItem);
                if (cachecolumnRealmList != null) {
                    columnRealmListRealmList.set(i, cachecolumnRealmList);
                } else {
                    columnRealmListRealmList.set(i, AllTypesRealmProxy.copyOrUpdate(realm, columnRealmListItem, true, cache));
                }
            }
        } else {
            columnRealmListRealmList.clear();
            if (columnRealmListList != null) {
                for (int i = 0; i < columnRealmListList.size(); i++) {
                    some.test.AllTypes columnRealmListItem = columnRealmListList.get(i);
                    some.test.AllTypes cachecolumnRealmList = (some.test.AllTypes) cache.get(columnRealmListItem);
                    if (cachecolumnRealmList != null) {
                        columnRealmListRealmList.add(cachecolumnRealmList);
                    } else {
                        columnRealmListRealmList.add(AllTypesRealmProxy.copyOrUpdate(realm, columnRealmListItem, true, cache));
                    }
                }
            }
        }
        realmObjectTarget.realmSet$columnStringList(realmObjectSource.realmGet$columnStringList());
        realmObjectTarget.realmSet$columnBinaryList(realmObjectSource.realmGet$columnBinaryList());
        realmObjectTarget.realmSet$columnBooleanList(realmObjectSource.realmGet$columnBooleanList());
        realmObjectTarget.realmSet$columnLongList(realmObjectSource.realmGet$columnLongList());
        realmObjectTarget.realmSet$columnIntegerList(realmObjectSource.realmGet$columnIntegerList());
        realmObjectTarget.realmSet$columnShortList(realmObjectSource.realmGet$columnShortList());
        realmObjectTarget.realmSet$columnByteList(realmObjectSource.realmGet$columnByteList());
        realmObjectTarget.realmSet$columnDoubleList(realmObjectSource.realmGet$columnDoubleList());
        realmObjectTarget.realmSet$columnFloatList(realmObjectSource.realmGet$columnFloatList());
        realmObjectTarget.realmSet$columnDateList(realmObjectSource.realmGet$columnDateList());
        return realmObject;
    }

