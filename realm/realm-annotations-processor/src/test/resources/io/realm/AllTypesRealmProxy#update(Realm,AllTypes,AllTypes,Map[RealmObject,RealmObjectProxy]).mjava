    static AllTypes update(Realm realm, AllTypes realmObject, AllTypes newObject, Map<RealmObject, RealmObjectProxy> cache) {
        realmObject.realmSetter$columnLong(newObject.realmGetter$columnLong());
        realmObject.realmSetter$columnFloat(newObject.realmGetter$columnFloat());
        realmObject.realmSetter$columnDouble(newObject.realmGetter$columnDouble());
        realmObject.realmSetter$columnBoolean(newObject.realmGetter$columnBoolean());
        realmObject.realmSetter$columnDate(newObject.realmGetter$columnDate());
        realmObject.realmSetter$columnBinary(newObject.realmGetter$columnBinary());
        AllTypes columnObjectObj = newObject.realmGetter$columnObject();
        if (columnObjectObj != null) {
            AllTypes cachecolumnObject = (AllTypes) cache.get(columnObjectObj);
            if (cachecolumnObject != null) {
                realmObject.realmSetter$columnObject(cachecolumnObject);
            } else {
                realmObject.realmSetter$columnObject(AllTypesRealmProxy.copyOrUpdate(realm, columnObjectObj, true, cache));
            }
        } else {
            realmObject.realmSetter$columnObject(null);
        }
        RealmList<AllTypes> columnRealmListList = newObject.realmGetter$columnRealmList();
        RealmList<AllTypes> columnRealmListRealmList = realmObject.realmGetter$columnRealmList();
        columnRealmListRealmList.clear();
        if (columnRealmListList != null) {
            for (int i = 0; i < columnRealmListList.size(); i++) {
                AllTypes columnRealmListItem = columnRealmListList.get(i);
                AllTypes cachecolumnRealmList = (AllTypes) cache.get(columnRealmListItem);
                if (cachecolumnRealmList != null) {
                    columnRealmListRealmList.add(cachecolumnRealmList);
                } else {
                    columnRealmListRealmList.add(AllTypesRealmProxy.copyOrUpdate(realm, columnRealmListList.get(i), true, cache));
                }
            }
        }
        return realmObject;
    }

