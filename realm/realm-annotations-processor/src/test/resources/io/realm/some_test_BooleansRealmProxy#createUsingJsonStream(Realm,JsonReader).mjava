    @SuppressWarnings("cast")
    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
    public static some.test.Booleans createUsingJsonStream(Realm realm, JsonReader reader)
            throws IOException {
        final some.test.Booleans obj = new some.test.Booleans();
        final some_test_BooleansRealmProxyInterface objProxy = (some_test_BooleansRealmProxyInterface) obj;
        reader.beginObject();
        while (reader.hasNext()) {
            String name = reader.nextName();
            if (false) {
            } else if (name.equals("done")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$done((boolean) reader.nextBoolean());
                } else {
                    reader.skipValue();
                    throw new IllegalArgumentException("Trying to set non-nullable field 'done' to null.");
                }
            } else if (name.equals("isReady")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$isReady((boolean) reader.nextBoolean());
                } else {
                    reader.skipValue();
                    throw new IllegalArgumentException("Trying to set non-nullable field 'isReady' to null.");
                }
            } else if (name.equals("mCompleted")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$mCompleted((boolean) reader.nextBoolean());
                } else {
                    reader.skipValue();
                    throw new IllegalArgumentException("Trying to set non-nullable field 'mCompleted' to null.");
                }
            } else if (name.equals("anotherBoolean")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$anotherBoolean((boolean) reader.nextBoolean());
                } else {
                    reader.skipValue();
                    throw new IllegalArgumentException("Trying to set non-nullable field 'anotherBoolean' to null.");
                }
            } else {
                reader.skipValue();
            }
        }
        reader.endObject();
        return realm.copyToRealm(obj);
    }

