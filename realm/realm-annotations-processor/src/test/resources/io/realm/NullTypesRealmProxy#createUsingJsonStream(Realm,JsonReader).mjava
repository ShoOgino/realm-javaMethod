    @SuppressWarnings("cast")
    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
    public static some.test.NullTypes createUsingJsonStream(Realm realm, JsonReader reader)
            throws IOException {
        final some.test.NullTypes obj = new some.test.NullTypes();
        final NullTypesRealmProxyInterface objProxy = (NullTypesRealmProxyInterface) obj;
        reader.beginObject();
        while (reader.hasNext()) {
            String name = reader.nextName();
            if (false) {
            } else if (name.equals("fieldStringNotNull")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$fieldStringNotNull((String) reader.nextString());
                } else {
                    reader.skipValue();
                    objProxy.realmSet$fieldStringNotNull(null);
                }
            } else if (name.equals("fieldStringNull")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$fieldStringNull((String) reader.nextString());
                } else {
                    reader.skipValue();
                    objProxy.realmSet$fieldStringNull(null);
                }
            } else if (name.equals("fieldBooleanNotNull")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$fieldBooleanNotNull((boolean) reader.nextBoolean());
                } else {
                    reader.skipValue();
                    objProxy.realmSet$fieldBooleanNotNull(null);
                }
            } else if (name.equals("fieldBooleanNull")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$fieldBooleanNull((boolean) reader.nextBoolean());
                } else {
                    reader.skipValue();
                    objProxy.realmSet$fieldBooleanNull(null);
                }
            } else if (name.equals("fieldBytesNotNull")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$fieldBytesNotNull(JsonUtils.stringToBytes(reader.nextString()));
                } else {
                    reader.skipValue();
                    objProxy.realmSet$fieldBytesNotNull(null);
                }
            } else if (name.equals("fieldBytesNull")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$fieldBytesNull(JsonUtils.stringToBytes(reader.nextString()));
                } else {
                    reader.skipValue();
                    objProxy.realmSet$fieldBytesNull(null);
                }
            } else if (name.equals("fieldByteNotNull")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$fieldByteNotNull((byte) reader.nextInt());
                } else {
                    reader.skipValue();
                    objProxy.realmSet$fieldByteNotNull(null);
                }
            } else if (name.equals("fieldByteNull")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$fieldByteNull((byte) reader.nextInt());
                } else {
                    reader.skipValue();
                    objProxy.realmSet$fieldByteNull(null);
                }
            } else if (name.equals("fieldShortNotNull")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$fieldShortNotNull((short) reader.nextInt());
                } else {
                    reader.skipValue();
                    objProxy.realmSet$fieldShortNotNull(null);
                }
            } else if (name.equals("fieldShortNull")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$fieldShortNull((short) reader.nextInt());
                } else {
                    reader.skipValue();
                    objProxy.realmSet$fieldShortNull(null);
                }
            } else if (name.equals("fieldIntegerNotNull")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$fieldIntegerNotNull((int) reader.nextInt());
                } else {
                    reader.skipValue();
                    objProxy.realmSet$fieldIntegerNotNull(null);
                }
            } else if (name.equals("fieldIntegerNull")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$fieldIntegerNull((int) reader.nextInt());
                } else {
                    reader.skipValue();
                    objProxy.realmSet$fieldIntegerNull(null);
                }
            } else if (name.equals("fieldLongNotNull")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$fieldLongNotNull((long) reader.nextLong());
                } else {
                    reader.skipValue();
                    objProxy.realmSet$fieldLongNotNull(null);
                }
            } else if (name.equals("fieldLongNull")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$fieldLongNull((long) reader.nextLong());
                } else {
                    reader.skipValue();
                    objProxy.realmSet$fieldLongNull(null);
                }
            } else if (name.equals("fieldFloatNotNull")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$fieldFloatNotNull((float) reader.nextDouble());
                } else {
                    reader.skipValue();
                    objProxy.realmSet$fieldFloatNotNull(null);
                }
            } else if (name.equals("fieldFloatNull")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$fieldFloatNull((float) reader.nextDouble());
                } else {
                    reader.skipValue();
                    objProxy.realmSet$fieldFloatNull(null);
                }
            } else if (name.equals("fieldDoubleNotNull")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$fieldDoubleNotNull((double) reader.nextDouble());
                } else {
                    reader.skipValue();
                    objProxy.realmSet$fieldDoubleNotNull(null);
                }
            } else if (name.equals("fieldDoubleNull")) {
                if (reader.peek() != JsonToken.NULL) {
                    objProxy.realmSet$fieldDoubleNull((double) reader.nextDouble());
                } else {
                    reader.skipValue();
                    objProxy.realmSet$fieldDoubleNull(null);
                }
            } else if (name.equals("fieldDateNotNull")) {
                if (reader.peek() == JsonToken.NULL) {
                    reader.skipValue();
                    objProxy.realmSet$fieldDateNotNull(null);
                } else if (reader.peek() == JsonToken.NUMBER) {
                    long timestamp = reader.nextLong();
                    if (timestamp > -1) {
                        objProxy.realmSet$fieldDateNotNull(new Date(timestamp));
                    }
                } else {
                    objProxy.realmSet$fieldDateNotNull(JsonUtils.stringToDate(reader.nextString()));
                }
            } else if (name.equals("fieldDateNull")) {
                if (reader.peek() == JsonToken.NULL) {
                    reader.skipValue();
                    objProxy.realmSet$fieldDateNull(null);
                } else if (reader.peek() == JsonToken.NUMBER) {
                    long timestamp = reader.nextLong();
                    if (timestamp > -1) {
                        objProxy.realmSet$fieldDateNull(new Date(timestamp));
                    }
                } else {
                    objProxy.realmSet$fieldDateNull(JsonUtils.stringToDate(reader.nextString()));
                }
            } else if (name.equals("fieldObjectNull")) {
                if (reader.peek() == JsonToken.NULL) {
                    reader.skipValue();
                    objProxy.realmSet$fieldObjectNull(null);
                } else {
                    some.test.NullTypes fieldObjectNullObj = NullTypesRealmProxy.createUsingJsonStream(realm, reader);
                    objProxy.realmSet$fieldObjectNull(fieldObjectNullObj);
                }
            } else if (name.equals("fieldStringListNotNull")) {
                objProxy.realmSet$fieldStringListNotNull(ProxyUtils.createRealmListWithJsonStream(java.lang.String.class, reader));
            } else if (name.equals("fieldStringListNull")) {
                objProxy.realmSet$fieldStringListNull(ProxyUtils.createRealmListWithJsonStream(java.lang.String.class, reader));
            } else if (name.equals("fieldBinaryListNotNull")) {
                objProxy.realmSet$fieldBinaryListNotNull(ProxyUtils.createRealmListWithJsonStream(byte[].class, reader));
            } else if (name.equals("fieldBinaryListNull")) {
                objProxy.realmSet$fieldBinaryListNull(ProxyUtils.createRealmListWithJsonStream(byte[].class, reader));
            } else if (name.equals("fieldBooleanListNotNull")) {
                objProxy.realmSet$fieldBooleanListNotNull(ProxyUtils.createRealmListWithJsonStream(java.lang.Boolean.class, reader));
            } else if (name.equals("fieldBooleanListNull")) {
                objProxy.realmSet$fieldBooleanListNull(ProxyUtils.createRealmListWithJsonStream(java.lang.Boolean.class, reader));
            } else if (name.equals("fieldLongListNotNull")) {
                objProxy.realmSet$fieldLongListNotNull(ProxyUtils.createRealmListWithJsonStream(java.lang.Long.class, reader));
            } else if (name.equals("fieldLongListNull")) {
                objProxy.realmSet$fieldLongListNull(ProxyUtils.createRealmListWithJsonStream(java.lang.Long.class, reader));
            } else if (name.equals("fieldIntegerListNotNull")) {
                objProxy.realmSet$fieldIntegerListNotNull(ProxyUtils.createRealmListWithJsonStream(java.lang.Integer.class, reader));
            } else if (name.equals("fieldIntegerListNull")) {
                objProxy.realmSet$fieldIntegerListNull(ProxyUtils.createRealmListWithJsonStream(java.lang.Integer.class, reader));
            } else if (name.equals("fieldShortListNotNull")) {
                objProxy.realmSet$fieldShortListNotNull(ProxyUtils.createRealmListWithJsonStream(java.lang.Short.class, reader));
            } else if (name.equals("fieldShortListNull")) {
                objProxy.realmSet$fieldShortListNull(ProxyUtils.createRealmListWithJsonStream(java.lang.Short.class, reader));
            } else if (name.equals("fieldByteListNotNull")) {
                objProxy.realmSet$fieldByteListNotNull(ProxyUtils.createRealmListWithJsonStream(java.lang.Byte.class, reader));
            } else if (name.equals("fieldByteListNull")) {
                objProxy.realmSet$fieldByteListNull(ProxyUtils.createRealmListWithJsonStream(java.lang.Byte.class, reader));
            } else if (name.equals("fieldDoubleListNotNull")) {
                objProxy.realmSet$fieldDoubleListNotNull(ProxyUtils.createRealmListWithJsonStream(java.lang.Double.class, reader));
            } else if (name.equals("fieldDoubleListNull")) {
                objProxy.realmSet$fieldDoubleListNull(ProxyUtils.createRealmListWithJsonStream(java.lang.Double.class, reader));
            } else if (name.equals("fieldFloatListNotNull")) {
                objProxy.realmSet$fieldFloatListNotNull(ProxyUtils.createRealmListWithJsonStream(java.lang.Float.class, reader));
            } else if (name.equals("fieldFloatListNull")) {
                objProxy.realmSet$fieldFloatListNull(ProxyUtils.createRealmListWithJsonStream(java.lang.Float.class, reader));
            } else if (name.equals("fieldDateListNotNull")) {
                objProxy.realmSet$fieldDateListNotNull(ProxyUtils.createRealmListWithJsonStream(java.util.Date.class, reader));
            } else if (name.equals("fieldDateListNull")) {
                objProxy.realmSet$fieldDateListNull(ProxyUtils.createRealmListWithJsonStream(java.util.Date.class, reader));
            } else {
                reader.skipValue();
            }
        }
        reader.endObject();
        return realm.copyToRealm(obj);
    }

