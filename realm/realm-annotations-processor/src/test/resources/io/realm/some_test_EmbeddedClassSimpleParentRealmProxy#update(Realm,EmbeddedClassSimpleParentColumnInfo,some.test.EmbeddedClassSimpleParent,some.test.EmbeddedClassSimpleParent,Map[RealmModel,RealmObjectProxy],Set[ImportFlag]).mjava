    static some.test.EmbeddedClassSimpleParent update(Realm realm, EmbeddedClassSimpleParentColumnInfo columnInfo, some.test.EmbeddedClassSimpleParent realmObject, some.test.EmbeddedClassSimpleParent newObject, Map<RealmModel, RealmObjectProxy> cache, Set<ImportFlag> flags) {
        some_test_EmbeddedClassSimpleParentRealmProxyInterface realmObjectTarget = (some_test_EmbeddedClassSimpleParentRealmProxyInterface) realmObject;
        some_test_EmbeddedClassSimpleParentRealmProxyInterface realmObjectSource = (some_test_EmbeddedClassSimpleParentRealmProxyInterface) newObject;
        Table table = realm.getTable(some.test.EmbeddedClassSimpleParent.class);
        OsObjectBuilder builder = new OsObjectBuilder(table, flags);
        builder.addString(columnInfo.idColKey, realmObjectSource.realmGet$id());

        some.test.EmbeddedClass childObj = realmObjectSource.realmGet$child();
        if (childObj == null) {
            builder.addNull(columnInfo.childColKey);
        } else {
            // Embedded objects are created directly instead of using the builder.
            some.test.EmbeddedClass cachechild = (some.test.EmbeddedClass) cache.get(childObj);
            if (cachechild != null) {
                throw new IllegalArgumentException("Embedded objects can only have one parent pointing to them. This object was already copied, so another object is pointing to it: cachechild.toString()");
            }

            long objKey = ((RealmObjectProxy) realmObject).realmGet$proxyState().getRow$realm().createEmbeddedObject(columnInfo.childColKey);
            Row row = realm.getTable(some.test.EmbeddedClass.class).getUncheckedRow(objKey);
            some.test.EmbeddedClass proxyObject = some_test_EmbeddedClassRealmProxy.newProxyInstance(realm, row);
            cache.put(childObj, (RealmObjectProxy) proxyObject);
            some_test_EmbeddedClassRealmProxy.updateEmbeddedObject(realm, childObj, proxyObject, cache, flags);
        }

        RealmList<some.test.EmbeddedClass> childrenUnmanagedList = realmObjectSource.realmGet$children();
        if (childrenUnmanagedList != null) {
            RealmList<some.test.EmbeddedClass> childrenManagedCopy = new RealmList<some.test.EmbeddedClass>();
            for (int i = 0; i < childrenUnmanagedList.size(); i++) {
                some.test.EmbeddedClass childrenUnmanagedItem = childrenUnmanagedList.get(i);
                some.test.EmbeddedClass cachechildren = (some.test.EmbeddedClass) cache.get(childrenUnmanagedItem);
                if (cachechildren != null) {
                    throw new IllegalArgumentException("Embedded objects can only have one parent pointing to them. This object was already copied, so another object is pointing to it: cachechildren.toString()");
                } else {
                    long objKey = realmObjectTarget.realmGet$children().getOsList().createAndAddEmbeddedObject();
                    Row row = realm.getTable(some.test.EmbeddedClass.class).getUncheckedRow(objKey);
                    some.test.EmbeddedClass proxyObject = some_test_EmbeddedClassRealmProxy.newProxyInstance(realm, row);
                    cache.put(childrenUnmanagedItem, (RealmObjectProxy) proxyObject);
                    childrenManagedCopy.add(proxyObject);
                    some_test_EmbeddedClassRealmProxy.updateEmbeddedObject(realm, childrenUnmanagedItem, proxyObject, new HashMap<RealmModel, RealmObjectProxy>(), Collections.EMPTY_SET);
                }
            }
        } else {
            builder.addObjectList(columnInfo.childrenColKey, new RealmList<some.test.EmbeddedClass>());
        }

        builder.updateExistingTopLevelObject();
        return realmObject;
    }

