    /**
     * Get all objects of a specific Class sorted by multiple fields.
     *
     * @param clazz the Class to get objects of.
     * @param sortAscending sort ascending if SORT_ORDER_ASCENDING, sort descending if SORT_ORDER_DESCENDING.
     * @param fieldNames an array of fieldnames to sort objects by.
     *        The objects are first sorted by fieldNames[0], then by fieldNames[1] and so forth.
     * @return A sorted RealmResults containing the objects.
     * @throws java.lang.IllegalArgumentException if a field name does not exist.
     */
    public <E extends RealmObject> RealmResults<E> allObjectsSorted(Class<E> clazz, String fieldNames[],
                                                               boolean sortAscending[]) {
        // FIXME: This is not an optimal implementation. When core's Table::get_sorted_view() supports
        // FIXME: multi-column sorting, we can rewrite this method to a far better implementation.
        RealmResults<E> results = this.allObjects(clazz);
        results.sort(fieldNames, sortAscending);
        return results;
    }

