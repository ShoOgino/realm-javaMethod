        /**
         * Attempts to cancel execution of this query (if it hasn't already completed or previously cancelled)
         */
        public void cancel() {
            pendingQuery.cancel(true);
            isCancelled = true;
            Realm.asyncQueryExecutor.getQueue().remove(pendingQuery);
            // Cancelled tasks are never executed, but may
            // accumulate in work queues, which may causes a memory leak
            // if the task hold references (to an enclosing class for example)
            //TODO call explicitly purge from the ThreadPoolExecutor
            /*
            One caveat applies: if a second thread attempts to add something to the pool (suing the execute() method) at the same time the first thread is attempting to purge the queue the attempt to purge the queue fails and the canceled objects remain in the queue.
A better way to cancel objects with thread pools os to use the remove() method of the thread pool, which immediatelt removes the task
from the thread pool queue. The remove() method can be used with runnable objects

             */
//            Realm.asyncQueryExecutor.purge(); remove

        }

