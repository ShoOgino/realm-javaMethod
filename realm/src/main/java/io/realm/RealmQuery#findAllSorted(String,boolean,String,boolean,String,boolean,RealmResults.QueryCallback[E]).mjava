    /**
     * Similar to {@link #findAllSorted(String, boolean, String, boolean, String, boolean)} but runs asynchronously from a worker thread
     *
     * @param fieldName1     first field name
     * @param sortAscending1 sort order for first field
     * @param fieldName2     second field name
     * @param sortAscending2 sort order for second field
     * @param fieldName3     third field name
     * @param sortAscending3 sort order for third field
     * @param callback       to receive the result of this query
     * @return A {@link io.realm.RealmResults} containing objects. If no objects match the condition,
     * a list with zero objects is returned.
     * @throws java.lang.IllegalArgumentException if a field name does not exist.
     */
    public Request findAllSorted(String fieldName1, boolean sortAscending1,
                                 String fieldName2, boolean sortAscending2,
                                 String fieldName3, boolean sortAscending3,
                                 RealmResults.QueryCallback<E> callback) {
        return findAllSorted(new String[]{fieldName1, fieldName2, fieldName3},
                new boolean[]{sortAscending1, sortAscending2, sortAscending3}, callback);
    }

