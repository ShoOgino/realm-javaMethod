        private void handleSuccess (Message message) {
            Bundle bundle = message.getData();
            switch (message.arg1) {
                case FIND_FIRST_QUERY:
                    try {
                        E realmObject = realm.getByPointer(clazz,
                                query.importHandoverRow(bundle.getLong(QUERY_RESULT_POINTER_ARG),
                                        bundle.getLong(CALLER_SHARED_GROUP_POINTER_ARG)));

                        callbackRealmObject.onSuccess(realmObject);

                    } catch (BadVersionException e) {
                        if (retryPolicy.shouldRetry()) {
                            findFirst(callbackRealmObject);
                        } else {
                            callbackRealmObject.onError(e);
                        }
                    }
                    break;
                case FIND_ALL_QUERY:
                    try {
                        RealmResults<E> resultList = new RealmResults<E>(realm,
                                query.importHandoverTableView(bundle.getLong(QUERY_RESULT_POINTER_ARG),
                                        bundle.getLong(CALLER_SHARED_GROUP_POINTER_ARG)),
                                clazz);

                        callbackRealmResults.onSuccess(resultList);

                    } catch (BadVersionException e) {
                        if (retryPolicy.shouldRetry()) {
                            findAll(callbackRealmResults);
                        } else {
                            callbackRealmResults.onError(e);
                        }
                    }
                    break;
                case FIND_ALL_SORTED_QUERY:
                    try {
                        RealmResults<E> resultList = new RealmResults<E>(realm,
                                query.importHandoverTableView(bundle.getLong(QUERY_RESULT_POINTER_ARG),
                                        bundle.getLong(CALLER_SHARED_GROUP_POINTER_ARG)),
                                clazz);

                        callbackRealmResults.onSuccess(resultList);

                    } catch (BadVersionException e) {
                        if (retryPolicy.shouldRetry()) {
                            findAllSorted(fieldName, sortAscending, callbackRealmResults);
                        } else {
                            callbackRealmResults.onError(e);
                        }
                    }
                    break;
                case FIND_ALL_SORTED_MULTI_QUERY:
                    try {
                        RealmResults<E> resultList = new RealmResults<E>(realm,
                                query.importHandoverTableView(bundle.getLong(QUERY_RESULT_POINTER_ARG),
                                        bundle.getLong(CALLER_SHARED_GROUP_POINTER_ARG)),
                                clazz);

                        callbackRealmResults.onSuccess(resultList);

                    } catch (BadVersionException e) {
                        if (retryPolicy.shouldRetry()) {
                            findAllSorted(fieldNames, sortAscendings, callbackRealmResults);
                        } else {
                            callbackRealmResults.onError(e);
                        }
                    }
                    break;
            }
        }

