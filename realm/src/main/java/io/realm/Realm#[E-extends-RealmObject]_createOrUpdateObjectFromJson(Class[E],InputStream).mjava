    /**
     * Tries to update an existing object defined by its primary key with new JSON data. If no existing object could be
     * found a new object will be saved in the Realm. This must happen within a transaction.
     *
     * @param clazz Type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.
     * @param in    Inputstream with object data in JSON format.
     * @return Created or updated {@link io.realm.RealmObject}.
     * @throws {@link java.lang.IllegalArgumentException} if trying to update a class without a
     * {@link io.realm.annotations.PrimaryKey}.
     * @see {@link #createObjectFromJson(Class, java.io.InputStream)}
     */
    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
    public <E extends RealmObject> E createOrUpdateObjectFromJson(Class<E> clazz, InputStream in) throws IOException {
        if (clazz == null || in == null) {
            return null;
        }
        checkHasPrimaryKey(clazz);

        E obj = createStandaloneRealmObjectInstance(clazz);
        JsonReader reader = new JsonReader(new InputStreamReader(in, "UTF-8"));
        try {
            realmJson.populateUsingJsonStream(obj, reader);
            copyToRealmOrUpdate(obj);
        } catch (RuntimeException e) {
            throw new RealmException("Could not create Json object from string", e);
        }

        return obj;
    }

