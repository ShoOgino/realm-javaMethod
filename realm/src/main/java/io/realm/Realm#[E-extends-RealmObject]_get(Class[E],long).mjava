    public <E extends RealmObject> E get(Class<E> clazz, long rowIndex) {
        E result;

        String generatedClassName = null;
        Table table = tables.get(clazz);
        if (table == null) {
            if (generatedClassNames.containsKey(clazz)) {
                generatedClassName = generatedClassNames.get(clazz);
            } else {
                generatedClassName = clazz.getName() + "RealmProxy";
                generatedClassNames.put(clazz, generatedClassName);
            }

            String simpleClassName;
            if (simpleClassNames.containsKey(clazz)) {
                simpleClassName = simpleClassNames.get(clazz);
            } else {
                simpleClassName = clazz.getSimpleName();
                simpleClassNames.put(clazz, simpleClassName);
            }
            table = transaction.getTable(simpleClassName);
            tables.put(clazz, table);
        }

        Row row = table.getRow(rowIndex);

        Constructor constructor;
        constructor = generatedConstructors.get(clazz);
        if (constructor == null) {
            if (generatedClassName == null) {
                generatedClassName = generatedClassNames.get(clazz);
                if (generatedClassName == null) {
                    generatedClassName = clazz.getName() + "RealmProxy";
                    generatedClassNames.put(clazz, generatedClassName);
                }
            }

            Class<?> generatedClass;
            try {
                if (generatedClasses.containsKey(generatedClassName)) {
                    generatedClass = generatedClasses.get(generatedClassName);
                } else {
                    generatedClass = Class.forName(generatedClassName);
                    generatedClasses.put(generatedClassName, generatedClass);
                }
            } catch (ClassNotFoundException e) {
                e.printStackTrace();
                return null; // TODO: throw RealmException
            }

            try {
                if (constructors.containsKey(generatedClass)) {
                    constructor = constructors.get(generatedClass);
                } else {
                    constructor = generatedClass.getConstructor();
                    constructors.put(generatedClass, constructor);
                    generatedConstructors.put(clazz, constructor);
                }
            } catch (NoSuchMethodException e) {
                e.printStackTrace();
                return null; // TODO: throw RealmException
            }
        }

        try {
            // We are know the casted type since we generated the class
            //noinspection unchecked
            result = (E) constructor.newInstance();
        } catch (InstantiationException e) {
            e.printStackTrace();
            return null; // TODO: throw RealmException
        } catch (IllegalAccessException e) {
            e.printStackTrace();
            return null; // TODO: throw RealmException
        } catch (InvocationTargetException e) {
            e.printStackTrace();
            return null; // TODO: throw RealmException
        }
        result.realmSetRow(row);
        return result;
    }

