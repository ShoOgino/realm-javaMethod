    /**
     * Tries to update a list of existing objects identified by their primary key with new JSON data. If an existing
     * object could not be found in the Realm, a new object will be created. This must happen within a transaction.
     *
     * @param clazz Type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.
     * @param in    InputStream with a list of object data in JSON format.
     *
     * @throws {@link java.lang.IllegalArgumentException} if trying to update a class without a
     * {@link io.realm.annotations.PrimaryKey}.
     * @see {@link #createOrUpdateAllFromJson(Class, java.io.InputStream)}
     */
    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
    public <E extends RealmObject> void createOrUpdateAllFromJson(Class<E> clazz, InputStream in) throws IOException {
        if (clazz == null || in == null) {
            return;
        }
        checkHasPrimaryKey(clazz);

        JsonReader reader = new JsonReader(new InputStreamReader(in, "UTF-8"));
        try {
            reader.beginArray();
            while (reader.hasNext()) {
                E obj = createStandaloneRealmObjectInstance(clazz);
                realmJson.populateUsingJsonStream(obj, reader);
                copyToRealmOrUpdate(obj);
            }
            reader.endArray();
        } finally {
            reader.close();
        }
    }

