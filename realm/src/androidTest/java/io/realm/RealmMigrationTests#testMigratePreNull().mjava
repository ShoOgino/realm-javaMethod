    // Pre-null Realms will leave columns not-nullable after the underlying storage engine has
    // migrated the file format. An explicit migration step to convert to nullable, and the
    // old class (without @Required) can be used,
    public void testMigratePreNull() throws IOException {
        TestHelper.copyRealmFromAssets(getContext(), "default-before-migration.realm", Realm.DEFAULT_REALM_NAME);
        RealmMigration migration = new RealmMigration() {
            @Override
            public long execute(Realm realm, long version) {
                Table table = realm.getTable(StringOnly.class);
                table.convertColumnToNullable(table.getColumnIndex("chars"));
                return 1;
            }
        };

        RealmConfiguration realmConfig = new RealmConfiguration.Builder(getContext())
                .schemaVersion(1)
                .schema(StringOnly.class)
                .migration(migration)
                .build();
        Realm realm = Realm.getInstance(realmConfig);
        realm.beginTransaction();
        StringOnly stringOnly = realm.createObject(StringOnly.class);
        stringOnly.setChars(null);
        realm.commitTransaction();
        realm.close();
    }

