    public void testLargeRealmMultipleThreads() {
        final AtomicInteger finished;
        final int nObjects = 500000;
        final int nThreads = 3;

        finished = new AtomicInteger();
        finished.set(0);

        testRealm.beginTransaction();
        testRealm.clear(StringOnly.class);
        for (int i = 0; i < nObjects; i++) {
            StringOnly stringOnly = testRealm.createObject(StringOnly.class);
            stringOnly.setChars(String.format("string %d", i));
        }
        testRealm.commitTransaction();


        for (int i = 0; i < nThreads; i++) {
            Thread thread = new Thread(
                    new Runnable() {
                        @Override
                        public void run() {
                            RealmConfiguration realmConfig = TestHelper.createConfiguration(getContext());
                            Realm realm = Realm.getInstance(realmConfig);
                            RealmResults<StringOnly> realmResults = realm.allObjects(StringOnly.class);
                            int n = 0;
                            for (StringOnly stringOnly : realmResults) {
                                n = n + 1;
                            }
                            assertEquals(nObjects, n);
                            realm.close();
                            finished.incrementAndGet();
                        }
                    }
                );
            thread.start();
        }

        while (true) {
            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            if (finished.get() == nThreads) {
                break;
            }
        }
    }

