    public void testRealmQueryEqualToNonLatinCharacters() {
        RealmResults<NonLatinFieldNames> resultList = testRealm.where(NonLatinFieldNames.class).equalTo(FIELD_LONG_KOREAN_CHAR, 13).findAll();
        assertEquals("Not the expected number records " + resultList.size(), 1, resultList.size());
        resultList = testRealm.where(NonLatinFieldNames.class).greaterThan(FIELD_FLOAT_KOREAN_CHAR, 11.0f).equalTo(FIELD_LONG_KOREAN_CHAR, 10).findAll();
        assertEquals("Not the expected number records " + resultList.size(), 1, resultList.size());
        resultList = testRealm.where(NonLatinFieldNames.class).greaterThan(FIELD_FLOAT_KOREAN_CHAR, 11.0f).equalTo(FIELD_LONG_KOREAN_CHAR, 1).findAll();
        assertEquals("Not the expected number records " + resultList.size(), 0, resultList.size());

        resultList = testRealm.where(NonLatinFieldNames.class).equalTo(FIELD_LONG_GREEK_CHAR, 13).findAll();
        assertEquals("Not the expected number records " + resultList.size(), 1, resultList.size());
        resultList = testRealm.where(NonLatinFieldNames.class).greaterThan(FIELD_FLOAT_GREEK_CHAR, 11.0f).equalTo(FIELD_LONG_GREEK_CHAR, 10).findAll();
        assertEquals("Not the expected number records " + resultList.size(), 1, resultList.size());
        resultList = testRealm.where(NonLatinFieldNames.class).greaterThan(FIELD_FLOAT_GREEK_CHAR, 11.0f).equalTo(FIELD_LONG_GREEK_CHAR, 1).findAll();
        assertEquals("Not the expected number records " + resultList.size(), 0, resultList.size());

    }

