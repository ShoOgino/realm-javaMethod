    public void testShouldFailOnWrongTypeRetrieval() {
        for(int i = 0; i < mixedDataList.size();i++){
        Object value = mixedDataList.get(i).type != ColumnType.STRING ? "abc" : 123;
        Mixed mixed = Mixed.mixedValue(value);

        switch (mixedDataList.get(i).type) {
        case BINARY:
            try { 
                mixed.getBinaryByteArray();
                fail("Wrong mixed type"); 
            } catch (IllegalMixedTypeException e) { }
            break;
        case DATE:
            try { 
                mixed.getDateValue();         
                fail("Wrong mixed type"); 
            } catch (IllegalMixedTypeException e) { }
            break;
        case BOOLEAN:
            try { 
                mixed.getBooleanValue();      
                fail("Wrong mixed type"); 
            } catch (IllegalMixedTypeException e) { }
            break;
        case INTEGER:
            try { 
                mixed.getLongValue();         
                fail("Wrong mixed type"); 
            } catch (IllegalMixedTypeException e) { }
            break;
        case FLOAT:
            try { 
                mixed.getFloatValue();        
                fail("Wrong mixed type"); 
            } catch (IllegalMixedTypeException e) { }
            break;
        case DOUBLE:
            try { 
                mixed.getDoubleValue();       
                fail("Wrong mixed type"); 
            } catch (IllegalMixedTypeException e) { }
            break;
        case STRING:
            try { 
                mixed.getStringValue();       
                fail("Wrong mixed type"); 
            } catch (IllegalMixedTypeException e) { }
            break;
        default:
            fail("wrong type");
            break;
          }
        }
    }

