    public void testNotifications() throws InterruptedException, ExecutionException {
        Realm.deleteRealmFile(getContext());

        ExecutorService executorService = Executors.newFixedThreadPool(2);

        final AtomicInteger changed = new AtomicInteger(0);

        List<Callable<Void>> callables = new ArrayList<Callable<Void>>();
        callables.add(new Callable<Void>() {
            @Override
            public Void call() throws Exception {
                Looper.prepare();
                Realm realm = Realm.getInstance(getContext()); // This does not sent a message to itself [0]
                realm.addChangeListener(new RealmChangeListener() {
                    @Override
                    public void onChange() {
                        changed.incrementAndGet();
                    }
                });
                Looper.loop();
                return null;
            }
        });
        callables.add(new Callable<Void>() {
            @Override
            public Void call() throws Exception {
                Realm realm = Realm.getInstance(getContext(), false); // This will notify the other thread [1]
                realm.beginTransaction();
                Dog dog = realm.createObject(Dog.class);
                dog.setName("Rex");
                realm.commitTransaction(); // This will notify the other thread[2]
                return null;
            }
        });

        executorService.invokeAll(callables, 2, TimeUnit.SECONDS);

        assertEquals(2, changed.get());
    }

