    public void testNotifications() {
        final AtomicBoolean changed = new AtomicBoolean(false);

        Thread listenerThread = new Thread() {
            @Override
            public void run() {
                Looper.prepare();
                Realm realm = Realm.getInstance(getContext());
                realm.addChangeListener(new RealmChangeListener() {
                    @Override
                    public void onChange() {
                        changed.set(true);
                        Looper.myLooper().quit();
                    }
                });
                Looper.loop();
            }
        };
        listenerThread.start();

        Thread writerThread = new Thread() {
            @Override
            public void run() {
                Realm realm = Realm.getInstance(getContext(), false);
                realm.beginTransaction();
                Dog dog = realm.createObject(Dog.class);
                dog.setName("Rex");
                realm.commitTransaction();
            }
        };
        writerThread.start();

        try {
            writerThread.join();
            listenerThread.join(2000);
        } catch (InterruptedException e) {
            fail();
        }

        assertEquals(true, changed.get());
    }

