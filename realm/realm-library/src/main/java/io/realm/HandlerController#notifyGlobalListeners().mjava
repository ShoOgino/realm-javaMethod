    /**
     * NOTE: Should only be called from {@link #notifyAllListeners(List)}.
     */
    private void notifyGlobalListeners() {
        // Notifies strong reference listener.
        Iterator<RealmChangeListener<? extends BaseRealm>> iteratorStrongListeners = changeListeners.iterator();
        while (!realm.isClosed() && iteratorStrongListeners.hasNext()) { // Every callback could close the realm.
            RealmChangeListener listener = iteratorStrongListeners.next();
            listener.onChange(realm);
        }
        // Notifies weak reference listener (internals).
        Iterator<WeakReference<RealmChangeListener<? extends BaseRealm>>> iteratorWeakListeners = weakChangeListeners.iterator();
        List<WeakReference<RealmChangeListener<? extends BaseRealm>>> toRemoveList = null;
        while (!realm.isClosed() && iteratorWeakListeners.hasNext()) {
            WeakReference<RealmChangeListener<? extends BaseRealm>> weakRef = iteratorWeakListeners.next();
            RealmChangeListener listener = weakRef.get();
            if (listener == null) {
                if (toRemoveList == null) {
                    toRemoveList = new ArrayList<WeakReference<RealmChangeListener<? extends BaseRealm>>>(weakChangeListeners.size());
                }
                toRemoveList.add(weakRef);
            } else {
                listener.onChange(realm);
            }
        }
        if (toRemoveList != null) {
            weakChangeListeners.removeAll(toRemoveList);
        }
    }

