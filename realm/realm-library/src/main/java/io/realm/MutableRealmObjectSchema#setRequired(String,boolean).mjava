    @Override
    public RealmObjectSchema setRequired(String fieldName, boolean required) {
        long columnKey = table.getColumnKey(fieldName);
        boolean currentColumnRequired = isRequired(fieldName);
        RealmFieldType type = table.getColumnType(columnKey);

        if (type == RealmFieldType.OBJECT) {
            throw new IllegalArgumentException("Cannot modify the required state for RealmObject references: " + fieldName);
        }
        if (type == RealmFieldType.LIST) {
            throw new IllegalArgumentException("Cannot modify the required state for RealmList references: " + fieldName);
        }
        if (required && currentColumnRequired) {
            throw new IllegalStateException("Field is already required: " + fieldName);
        }
        if (!required && !currentColumnRequired) {
            throw new IllegalStateException("Field is already nullable: " + fieldName);
        }

        if (required) {
            try {
                table.convertColumnToNotNullable(columnKey);
            } catch (IllegalArgumentException e) {
                // Preserve old behaviour instead of throwing the rather non-descript Core error
                if (e.getMessage().contains("Attempted to insert null into non-nullable column")) {
                    throw new IllegalStateException(String.format("The primary key field '%s' has 'null' values stored.", fieldName));
                } else {
                    throw e;
                }
            }
        } else {
            table.convertColumnToNullable(columnKey);
        }
        return this;
    }

