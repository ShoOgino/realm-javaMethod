    @ObjectServer
    private Subscription subscribe(String name, long timeToLive, TimeUnit timeUnit, boolean update) {
        realm.checkIfValid();
        if (realm instanceof DynamicRealm) {
            throw new IllegalStateException("'subscribe' is not supported for queries on Dynamic Realms.");
        }
        if (osList != null) {
            throw new IllegalStateException("Cannot create subscriptions for queries based on a 'RealmList. Subscribe to the object holding the list instead.'");
        }
        if (TextUtils.isEmpty(name)) {
            throw new IllegalArgumentException("Non-empty 'name' required.");
        }
        //noinspection ConstantConditions
        if (timeUnit == null) {
            throw new IllegalArgumentException("Non-null 'timeUnit' is required.");
        }

        // Convert timestamp to milliseconds and clamp at max
        long timeToLiveMs = TimeUnit.MILLISECONDS.convert(timeToLive, timeUnit);

        long rowIndex = nativeSubscribe(realm.getSharedRealm().getNativePtr(), name, query.getNativePtr(),
                queryDescriptors.getNativePtr(), timeToLiveMs, update);
        CheckedRow row = ((Realm) realm).getTable(Subscription.class).getCheckedRow(rowIndex);
        return realm.get(Subscription.class, null, row);
    }

