    @Override
    public String toString() {
        if (row == null || !row.isAttached()) {
            return "Invalid object";
        }
        StringBuilder sb = new StringBuilder(row.getTable().getName() + " = [");
        String[] fields = getFieldNames();
        for (String field : fields) {
            long columnIndex = row.getColumnIndex(field);
            RealmFieldType type = row.getColumnType(columnIndex);
            sb.append("{");
            switch (type) {
                case BOOLEAN: sb.append(field).append(": ").append(row.getBoolean(columnIndex)); break;
                case INTEGER: sb.append(field).append(": ").append(row.getLong(columnIndex)); break;
                case FLOAT: sb.append(field).append(": ").append(row.getFloat(columnIndex)); break;
                case DOUBLE: sb.append(field).append(": ").append(row.getDouble(columnIndex)); break;
                case STRING: sb.append(field).append(": ").append(row.getString(columnIndex)); break;
                case BINARY: sb.append(field).append(": ").append(Arrays.toString(row.getBinaryByteArray(columnIndex))); break;
                case DATE: sb.append(field).append(": ").append(row.getDate(columnIndex)); break;
                case OBJECT:
                    if (row.isNullLink(columnIndex)) {
                        sb.append("null");
                    } else {
                        sb.append(field).append(": ").append(row.getTable().getLinkTarget(columnIndex).getName());
                    }
                    break;
                case LIST:
                    String targetType = row.getTable().getLinkTarget(columnIndex).getName();
                    sb.append(String.format("%s: RealmList<%s>[%s]", field, targetType, row.getLinkList(columnIndex).size()));
                    break;
                case UNSUPPORTED_TABLE:
                case UNSUPPORTED_MIXED:
                default:
                    sb.append(field).append(": ?");
            }
            sb.append("}, ");
        }
        sb.replace(sb.length() - 2, sb.length(), "");
        sb.append("]");
        return sb.toString();
    }

