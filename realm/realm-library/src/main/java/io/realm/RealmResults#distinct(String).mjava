    /**
     * Returns a distinct set of objects of a specific class. If the result is sorted, the first
     * object will be returned in case of multiple occurrences, otherwise it is undefined which
     * object is returned.
     *
     * @param fieldName the field name.
     * @return a non-null {@link RealmResults} containing the distinct objects.
     * @throws IllegalArgumentException if a field is null, does not exist, is an unsupported type,
     * is not indexed, or points to linked fields.
     */
    public RealmResults<E> distinct(String fieldName) {
        realm.checkIfValid();
        long columnIndex = RealmQuery.getAndValidateDistinctColumnIndex(fieldName, this.table.getTable());

        TableOrView tableOrView = getTable();
        if (tableOrView instanceof Table) {
            this.table = ((Table) tableOrView).getDistinctView(columnIndex);
        } else {
            ((TableView) tableOrView).distinct(columnIndex);
        }
        return this;
    }

