    /**
     * Returns a distinct set of objects of a specific class. If the result is sorted, the first
     * object will be returned in case of multiple occurrences, otherwise it is undefined which
     * object is returned.
     *
     * @param fieldName the field name.
     * @return a new non-null {@link RealmResults} containing the distinct objects.
     * @throws IllegalArgumentException if a field is null, does not exist, is an unsupported type,
     * is not indexed, or points to linked fields.
     */
    public RealmResults<E> distinct(String fieldName) {
        SortDescriptor distinctDescriptor = SortDescriptor.getInstanceForDistinct(collection.getTable(), fieldName);
        Collection distinctCollection = collection.distinct(distinctDescriptor);
        if (className != null) {
            return new RealmResults<E>(realm, distinctCollection, className);
        } else {
            return new RealmResults<E>(realm, distinctCollection, classSpec);
        }
    }

