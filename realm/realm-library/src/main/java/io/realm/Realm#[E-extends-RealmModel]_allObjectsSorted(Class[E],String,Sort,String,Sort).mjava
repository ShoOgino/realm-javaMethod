    /**
     * Gets all objects of a specific class sorted by two specific field names.  If no objects exist, the returned
     * {@link RealmResults} will not be {@code null}. The RealmResults.size() to check the number of objects instead.
     *
     * @param clazz the class ti get objects of.
     * @param fieldName1 first field name to sort by.
     * @param sortOrder1 sort order for first field.
     * @param fieldName2 second field name to sort by.
     * @param sortOrder2 sort order for second field.
     * @return a sorted RealmResults containing the objects.
     * @throws java.lang.IllegalArgumentException if a field name does not exist.
     */
    public <E extends RealmModel> RealmResults<E> allObjectsSorted(Class<E> clazz, String fieldName1,
                                                                    Sort sortOrder1, String fieldName2,
                                                                    Sort sortOrder2) {
        return allObjectsSorted(clazz, new String[]{fieldName1, fieldName2}, new Sort[]{sortOrder1,
                sortOrder2});
    }

