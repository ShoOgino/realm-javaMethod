    private <E extends BaseRealm> void createInstance(Class<E> realmClass,
                                                      ReferenceCounter referenceCounter,
                                                      boolean realmFileIsBeingCreated,
                                                      OsSharedRealm.VersionID version) {
        // Creates a new local Realm instance
        BaseRealm realm;

        if (realmClass == Realm.class) {
            // RealmMigrationNeededException might be thrown here.
            realm = Realm.createInstance(this, version);

            // If `waitForInitialRemoteData` data is set, we also want to ensure that all subscriptions
            // are fully ACTIVE before proceeding. Most of the Realm is initialized during a write
            // transaction. So we cannot download subscription data until all other initializers have run.
            // At this point we also have access to all normal APIs as the schema is fully initialized.
            synchronizeInitialSubscriptionsIfNeeded((Realm) realm, realmFileIsBeingCreated);

        } else if (realmClass == DynamicRealm.class) {
            realm = DynamicRealm.createInstance(this, version);
        } else {
            throw new IllegalArgumentException(WRONG_REALM_CLASS_MESSAGE);
        }


        referenceCounter.onRealmCreated(realm);
    }

