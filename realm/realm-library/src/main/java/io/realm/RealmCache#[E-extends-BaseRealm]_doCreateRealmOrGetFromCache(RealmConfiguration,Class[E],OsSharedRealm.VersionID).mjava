    private synchronized <E extends BaseRealm> E doCreateRealmOrGetFromCache(RealmConfiguration configuration, Class<E> realmClass, OsSharedRealm.VersionID version) {
        ReferenceCounter referenceCounter = getRefCounter(realmClass, version);
        boolean firstRealmInstanceInProcess = (getTotalGlobalRefCount() == 0);
        boolean realmFileIsBeingCreated = !configuration.realmExists();

        if (firstRealmInstanceInProcess) {
            copyAssetFileIfNeeded(configuration);
            OsSharedRealm sharedRealm = null;
            try {
                // If waitForInitialRemoteData() was enabled, we need to make sure that all data is downloaded
                // before proceeding. We need to open the Realm instance first to start any potential underlying
                // SyncSession so this will work.
                if (configuration.isSyncConfiguration() && realmFileIsBeingCreated) {
                    // Manually create the Java session wrapper session as this might otherwise
                    // not be created
                    OsRealmConfig osConfig = new OsRealmConfig.Builder(configuration).build();
                    ObjectServerFacade.getSyncFacadeIfPossible().wrapObjectStoreSessionIfRequired(osConfig);

                    if (ObjectServerFacade.getSyncFacadeIfPossible().isPartialRealm(configuration)) {
                        // Partial Realms are not supported by async open yet, so continue to
                        // use the old way of opening those Realms.
                        sharedRealm = OsSharedRealm.getInstance(configuration, OsSharedRealm.VersionID.LIVE);
                        try {
                            ObjectServerFacade.getSyncFacadeIfPossible().downloadInitialRemoteChanges(configuration);
                        } catch (Throwable t) {
                            // If an error happened while downloading initial data, we need to reset the file so we can
                            // download it again on the next attempt.
                            sharedRealm.close();
                            sharedRealm = null;
                            deleteRealmFileOnDisk(configuration);
                            throw t;
                        }
                    } else {
                        // Fully synchronized Realms are supported by AsyncOpen
                        ObjectServerFacade.getSyncFacadeIfPossible().downloadInitialRemoteChanges(configuration);
                    }
                }
            } finally {
                if (sharedRealm != null) {
                    sharedRealm.close();
                }
            }

            // We are holding the lock, and we can set the valid configuration since there is no global ref to it.
            this.configuration = configuration;
        } else {
            // Throws exception if validation failed.
            validateConfiguration(configuration);
        }

        if (!referenceCounter.hasInstanceAvailableForThread()) {
            createInstance(realmClass, referenceCounter, realmFileIsBeingCreated, version);
        }

        referenceCounter.incrementThreadCount(1);

        //noinspection unchecked
        return (E) referenceCounter.getRealmInstance();
    }

