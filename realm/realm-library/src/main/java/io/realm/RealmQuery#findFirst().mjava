    /**
     * Finds the first object that fulfills the query conditions.
     * <p>
     * Launching heavy queries from the UI thread may result in a drop of frames or even ANRs. <b>We do not recommend
     * doing so, but it is allowed by default.</b> If you want to prevent these behaviors you can obtain a Realm using
     * a {@link RealmConfiguration} that explicitly sets
     * {@link RealmConfiguration.Builder#allowQueriesOnUiThread(boolean)} to {@code false}. This way you will be forced
     * to launch your queries from a non-UI thread, otherwise calls to this method will throw a {@link RealmException}.
     * Alternatively, you can use {@link #findFirstAsync()}.
     *
     * @return the object found or {@code null} if no object matches the query conditions.
     * @throws RealmException if called from the UI thread after opting out via {@link RealmConfiguration.Builder#allowQueriesOnUiThread(boolean)}.
     * @see io.realm.RealmObject
     */
    @Nullable
    public E findFirst() {
        realm.checkIfValid();
        realm.checkAllowQueriesOnUiThread();

        if (forValues) {
            // TODO implement this;
            return null;
        }

        long tableRowIndex = getSourceRowIndexForFirstObject();
        //noinspection unchecked
        return (tableRowIndex < 0) ? null : (E) realm.get((Class<? extends RealmModel>) clazz, className, tableRowIndex);
    }

