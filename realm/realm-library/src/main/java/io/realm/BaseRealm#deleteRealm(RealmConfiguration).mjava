    /**
     * Deletes the Realm file defined by the given configuration.
     */
    protected static boolean deleteRealm(final RealmConfiguration configuration) {
        final AtomicBoolean realmDeleted = new AtomicBoolean(true);

        RealmCache.invokeWithGlobalRefCount(configuration, new RealmCache.Callback() {
            @Override
            public void onResult(int count) {
                if (count != 0) {
                    throw new IllegalStateException("It's not allowed to delete the file associated with an open Realm. " +
                            "Remember to close() all the instances of the Realm before deleting its file.");
                }

                String canonicalPath = configuration.getPath();
                File realmFolder = configuration.getRealmFolder();
                String realmFileName = configuration.getRealmFileName();
                List<File> filesToDelete = Arrays.asList(new File(canonicalPath),
                        new File(realmFolder, realmFileName + ".lock"),
                        new File(realmFolder, realmFileName + ".lock_a"),
                        new File(realmFolder, realmFileName + ".lock_b"),
                        new File(realmFolder, realmFileName + ".log"));
                for (File fileToDelete : filesToDelete) {
                    if (fileToDelete.exists()) {
                        boolean deleteResult = fileToDelete.delete();
                        if (!deleteResult) {
                            realmDeleted.set(false);
                            RealmLog.w("Could not delete the file " + fileToDelete);
                        }
                    }
                }
            }
        });

        return realmDeleted.get();
    }

