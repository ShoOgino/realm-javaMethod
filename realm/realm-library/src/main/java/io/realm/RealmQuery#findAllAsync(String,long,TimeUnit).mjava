    /**
     * Finds all objects that fulfil the query condition(s). This method is only available from a Looper thread.
     * <p>
     * This method is only available on query-based synchronized Realms and will also create a named subscription
     * that will synchronize all server data matching the query. Named subscriptions can be removed again by
     * calling {@code Realm.unsubscribe(subscriptionName}.
     *
     * @param subscriptionName name of the underlying subscription being created.
     * @param timeToLive the amount of time the Subscription must be kept alive after last being used. After this
     *                   period Realm will automatically remove it.
     * @param timeUnit the unit for {@code timeToLive}.
     * @return immediately an empty {@link RealmResults}. Users need to register a listener
     * {@link io.realm.RealmResults#addChangeListener(RealmChangeListener)} to be notified when the query completes.
     * @see io.realm.RealmResults
     * @throws IllegalStateException If the Realm is a not a query-based synchronized Realm or the query is on a {@link RealmList}.
     */
    @ObjectServer
    @Beta
    public RealmResults<E> findAllAsync(String subscriptionName, long timeToLive, TimeUnit timeUnit) {
        return findAllAsync(subscriptionName, timeToLive, timeUnit, false);
    }

