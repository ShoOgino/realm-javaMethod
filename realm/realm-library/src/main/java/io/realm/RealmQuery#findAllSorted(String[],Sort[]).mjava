    /**
     * Finds all objects that fulfill the query conditions and sorted by specific field names.
     * <p>
     * Sorting is currently limited to character sets in 'Latin Basic', 'Latin Supplement', 'Latin Extended A',
     * 'Latin Extended B' (UTF-8 range 0-591). For other character sets, sorting will have no effect.
     *
     * @param fieldNames an array of field names to sort by.
     * @param sortOrders how to sort the field names.
     * @return a {@link io.realm.RealmResults} containing objects. If no objects match the condition, a list with zero
     *         objects is returned.
     * @throws java.lang.IllegalArgumentException if one of the field names does not exist or it belongs to a child
     * {@link RealmObject} or a child {@link RealmList}.
     */
    @SuppressWarnings("unchecked")
    public RealmResults<E> findAllSorted(String fieldNames[], Sort sortOrders[]) {
        realm.checkIfValid();

        checkSortParameters(fieldNames, sortOrders);

        if (fieldNames.length == 1 && sortOrders.length == 1) {
            return findAllSorted(fieldNames[0], sortOrders[0]);
        } else {
            TableView tableView = query.findAll();
            List<Long> columnIndices = new ArrayList<Long>();
            //noinspection ForLoopReplaceableByForEach
            for (int i = 0; i < fieldNames.length; i++) {
                String fieldName = fieldNames[i];
                long columnIndex = getColumnIndexForSort(fieldName);
                columnIndices.add(columnIndex);
            }
            tableView.sort(columnIndices, sortOrders);

            RealmResults<E> realmResults;
            if (isDynamicQuery()) {
                realmResults = (RealmResults<E>) RealmResults.createFromDynamicTableOrView(realm, tableView, className);
            } else {
                realmResults = RealmResults.createFromTableOrView(realm, tableView, clazz);
            }
            return realmResults;
        }
    }

