    protected void sendNotifications() {
        // notify strong reference listener
        Iterator<RealmChangeListener> iteratorStrongListeners = changeListeners.iterator();
        while (iteratorStrongListeners.hasNext()) {
            RealmChangeListener listener = iteratorStrongListeners.next();
            listener.onChange();
        }
        // notify weak reference listener (internals)
        Iterator<WeakReference<RealmChangeListener>> iteratorWeakListeners = weakChangeListeners.iterator();
        List<WeakReference<RealmChangeListener>> toRemoveList = null;
        while (iteratorWeakListeners.hasNext()) {
            WeakReference<RealmChangeListener> weakRef = iteratorWeakListeners.next();
            RealmChangeListener listener = weakRef.get();
            if (listener == null) {
                if (toRemoveList == null) {
                    toRemoveList = new ArrayList<WeakReference<RealmChangeListener>>(weakChangeListeners.size());
                }
                toRemoveList.add(weakRef);
            } else {
                listener.onChange();
            }
        }
        if (toRemoveList != null) {
            weakChangeListeners.removeAll(toRemoveList);
        }
    }

