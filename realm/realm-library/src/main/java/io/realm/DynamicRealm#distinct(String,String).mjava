    /**
     * Return a distinct set of objects of a specific class. As a Realm is unordered, it is undefined which objects are
     * returned in case of multiple occurrences.
     *
     * @param className the Class to get objects of.
     * @param fieldName the field name.
     * @return A non-null {@link RealmResults} containing the distinct objects.
     * @throws IllegalArgumentException if a field name does not exist or the field is not indexed.
     */
    public RealmResults<DynamicRealmObject> distinct(String className, String fieldName) {
        checkNotNullFieldName(fieldName);
        checkIfValid();
        Table table = schema.getTable(className);
        long columnIndex = table.getColumnIndex(fieldName);
        if (columnIndex == -1) {
            throw new IllegalArgumentException(String.format("Field name '%s' does not exist.", fieldName));
        }

        TableView tableView = table.getDistinctView(columnIndex);
        RealmResults<DynamicRealmObject> realmResults = RealmResults.createFromDynamicTableOrView(this, tableView, className);
        if (handlerController != null) {
            handlerController.addToRealmResults(realmResults);
        }
        return realmResults;
    }

