    /**
     * Returns all permissions associated with the given class. Attach a change listener
     * using {@link ClassPermissions#addChangeListener(RealmChangeListener)} to be notified about
     * any future changes.
     *
     * @param clazz class to receive permissions for.
     * @return the permissions for the given class or {@code null} if no permissions where found.
     * @throws RealmException if the class is not part of this Realms schema.
     */
    @Beta
    @ObjectServer
    public ClassPermissions getPermissions(Class<? extends RealmModel> clazz) {
        checkIfValid();
        //noinspection ConstantConditions
        if (clazz == null) {
            throw new IllegalArgumentException("Non-null 'clazz' required.");
        }
        return where(ClassPermissions.class)
                .equalTo("name", configuration.getSchemaMediator().getSimpleClassName(clazz))
                .findFirst();
    }

