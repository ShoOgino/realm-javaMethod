    /**
     * Checks if the given Java object can be converted to the underlying Realm type.
     *
     * @param obj object to test compatibility on.
     * @return {@code true} if object can be converted to the Realm type, {@code false} otherwise.
     */
    public boolean isValid(Object obj) {
        switch (nativeValue) {
            case CORE_TYPE_VALUE_INTEGER:
                return (obj instanceof Long || obj instanceof Integer || obj instanceof Short || obj instanceof Byte);
            case CORE_TYPE_VALUE_BOOLEAN:
                return (obj instanceof Boolean);
            case CORE_TYPE_VALUE_STRING:
                return (obj instanceof String);
            case CORE_TYPE_VALUE_BINARY:
                return (obj instanceof byte[] || obj instanceof ByteBuffer);
            case CORE_TYPE_VALUE_DATE:
                return (obj instanceof java.util.Date);
            case CORE_TYPE_VALUE_FLOAT:
                return (obj instanceof Float);
            case CORE_TYPE_VALUE_DOUBLE:
                return (obj instanceof Double);
            case CORE_TYPE_VALUE_OBJECT:
                return false;
            case CORE_TYPE_VALUE_LIST:
                return false;
            case CORE_TYPE_VALUE_LINKING_OBJECTS:
                return false;
            case CORE_TYPE_VALUE_INTEGER + LIST_OFFSET:
                return false;
            case CORE_TYPE_VALUE_BOOLEAN + LIST_OFFSET:
                return false;
            case CORE_TYPE_VALUE_STRING + LIST_OFFSET:
                return false;
            case CORE_TYPE_VALUE_BINARY + LIST_OFFSET:
                return false;
            case CORE_TYPE_VALUE_DATE + LIST_OFFSET:
                return false;
            case CORE_TYPE_VALUE_FLOAT + LIST_OFFSET:
                return false;
            case CORE_TYPE_VALUE_DOUBLE + LIST_OFFSET:
                return false;
            default:
                throw new RuntimeException("Unsupported Realm type:  " + this);
        }
    }

