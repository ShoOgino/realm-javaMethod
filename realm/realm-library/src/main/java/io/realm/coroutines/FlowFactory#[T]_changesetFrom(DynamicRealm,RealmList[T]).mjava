    /**
     * Creates a {@link Flow} for a {@link RealmList}. It should emit the initial list when subscribed to and on each
     * subsequent update of the list it should emit the list plus the {@link io.realm.rx.CollectionChange} that describes
     * the update.
     * <p>
     * Changeset observables do not support backpressure as a changeset depends on the state of the previous
     * changeset. Handling backpressure should therefore be left to the user.
     *
     * @param dynamicRealm {@link DynamicRealm} instance from where the object is coming.
     * @param list         {@link RealmList} instance being observed for changes to be emitted by the flow.
     * @return {@link Flow} that emits all updates to the RealmList.
     */
    @Beta
    <T> Flow<CollectionChange<RealmList<T>>> changesetFrom(@Nonnull DynamicRealm dynamicRealm, @Nonnull RealmList<T> list);

