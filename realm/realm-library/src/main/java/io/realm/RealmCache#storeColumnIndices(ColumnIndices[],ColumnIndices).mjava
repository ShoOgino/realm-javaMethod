    /**
     * Stores the schema cache to the array.
     * <p>
     * If the {@code array} has an empty slot ({@code == null}), this method stores
     * the {@code columnIndices} to it. Otherwise, the entry of the oldest schema version is
     * replaced.
     *
     * @param array target array.
     * @param columnIndices the item to be stored into the {@code array}.
     * @return the index in the {@code array} where the {@code columnIndices} was stored.
     */
    private static int storeColumnIndices(ColumnIndices[] array, ColumnIndices columnIndices) {
        long oldestSchemaVersion = Long.MAX_VALUE;
        int candidateIndex = -1;
        for (int i = array.length - 1; 0 <= i; i--) {
            if (array[i] == null) {
                array[i] = columnIndices;
                return i;
            }

            ColumnIndices target = array[i];
            if (target.getSchemaVersion() <= oldestSchemaVersion) {
                oldestSchemaVersion = target.getSchemaVersion();
                candidateIndex = i;
            }
        }
        array[candidateIndex] = columnIndices;
        return candidateIndex;
    }

