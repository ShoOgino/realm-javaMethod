    /**
     * NOTE: Should only be called from {@link #notifyAllListeners(List)}.
     */
    private void notifyRealmObjectCallbacks() {
        List<RealmObjectProxy> objectsToBeNotified = new ArrayList<RealmObjectProxy>();
        Iterator<WeakReference<RealmObjectProxy>> iterator = realmObjects.keySet().iterator();
        while (iterator.hasNext()) {
            WeakReference<RealmObjectProxy> weakRealmObject = iterator.next();
            RealmObjectProxy realmObject = weakRealmObject.get();
            if (realmObject == null) {
                iterator.remove();

            } else {
                if (realmObject.realmGet$proxyState().getRow$realm().isAttached()) {
                    // It should be legal to modify realmObjects in the listener
                    objectsToBeNotified.add(realmObject);
                } else if (realmObject.realmGet$proxyState().getRow$realm() != Row.EMPTY_ROW) {
                    iterator.remove();
                }
            }
        }

        for (Iterator<RealmObjectProxy> it = objectsToBeNotified.iterator(); !realm.isClosed() && it.hasNext(); ) {
            RealmObjectProxy realmObject = it.next();
            realmObject.realmGet$proxyState().notifyChangeListeners$realm();
        }
    }

