    /**
     * All changes since {@link io.realm.Realm#beginTransaction()} are persisted to disk and the Realm reverts back to
     * being read-only. An event is sent to notify all other Realm instances that a change has occurred. When the event
     * is received, the other Realms will update their objects and {@link io.realm.RealmResults} to reflect the
     * changes from this commit.
     */
    public void commitTransaction() {
        checkIfValid();
        sharedRealm.commitTransaction();
        if (!isClosed()) {
            // The checking is because of the global listener is being called in commitTransaction from object store.
            // The Realm could be closed inside the listener. In this case, we have no way to handle it. Moving
            // SyncManger to Object Store will solve this.
            ObjectServerFacade.getFacade(configuration.isSyncConfiguration())
                    .notifyCommit(configuration, sharedRealm.getLastSnapshotVersion());
        }
    }

