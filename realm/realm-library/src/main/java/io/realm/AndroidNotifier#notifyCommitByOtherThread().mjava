    // This is called by OS when other thread/process changes the Realm.
    // This is getting called on the same thread which created the Realm.
    // |---------------------------------------------------------------+--------------+------------------------------------------------|
    // | Thread A                                                      | Thread B     | Daemon Thread                                  |
    // |---------------------------------------------------------------+--------------+------------------------------------------------|
    // |                                                               | Make changes |                                                |
    // |                                                               |              | Detect and notify thread A through JNI ALooper |
    // | Call OS's Realm::notify() from OS's ALooper callback          |              |                                                |
    // | Realm::notify() calls JavaBindingContext:change_available()   |              |                                                |
    // | change_available calls into this method to send REALM_CHANGED |              |                                                |
    // |---------------------------------------------------------------+--------------+------------------------------------------------|
    @Override
    public void notifyCommitByOtherThread() {
        /*
        if (handler == null) {
            return;
        }

        // Note there is a race condition with handler.hasMessages() and handler.sendEmptyMessage()
        // as the target thread consumes messages at the same time. In this case it is not a problem as worst
        // case we end up with two REALM_CHANGED messages in the queue.
        boolean messageHandled = true;
        if (!handler.hasMessages(HandlerControllerConstants.REALM_CHANGED) &&
                !handler.hasMessages(HandlerControllerConstants.LOCAL_COMMIT)) {
            messageHandled = handler.sendEmptyMessage(HandlerControllerConstants.REALM_CHANGED);
        }
        if (!messageHandled) {
            RealmLog.warn("Cannot update Looper threads when the Looper has quit. Use realm.setAutoRefresh(false) " +
                    "to prevent this.");
        }
        */
    }

