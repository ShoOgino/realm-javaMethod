    /**
     * Releases a given {@link Realm} or {@link DynamicRealm} from cache. The instance will be closed by this method
     * if there is no more local reference to this Realm instance in current Thread.
     *
     * @param realm Realm instance to be released from cache.
     */
    synchronized void release(BaseRealm realm) {
        String canonicalPath = realm.getPath();
        ReferenceCounter referenceCounter = getRefCounter(realm.getClass(), (realm.isFrozen()) ? realm.sharedRealm.getVersionID() : OsSharedRealm.VersionID.LIVE);
        int refCount = referenceCounter.getThreadLocalCount();

        if (refCount <= 0) {
            RealmLog.warn("%s has been closed already. refCount is %s", canonicalPath, refCount);
            return;
        }

        // Decreases the local counter.
        refCount -= 1;

        if (refCount == 0) {
            referenceCounter.clearThreadLocalCache();

            // No more local reference to this Realm in current thread, close the instance.
            realm.doClose();

            // No more instance of typed Realm and dynamic Realm.
            if (getTotalLiveRealmGlobalRefCount() == 0) {
                // We keep the cache in the caches list even when its global counter reaches 0. It will be reused when
                // next time a Realm instance with the same path is opened. By not removing it, the lock on
                // cachesList is not needed here.
                configuration = null;

                // Close all frozen Realms. This can introduce race conditions on other
                // threads if the lifecyle of using Realm data is not correctly controlled.
                for (ReferenceCounter counter : refAndCountMap.values()) {
                    if (counter instanceof GlobalReferenceCounter) {
                        BaseRealm cachedRealm = counter.getRealmInstance();
                        // Since we don't remove ReferenceCounters, we need to check if the Realm is still open
                        if (cachedRealm != null) {
                            // Gracefully close frozen Realms in a similar way to what a user would normally do.
                            while (!cachedRealm.isClosed()) {
                                cachedRealm.close();
                            }
                        }
                    }
                }
                ObjectServerFacade.getFacade(realm.getConfiguration().isSyncConfiguration()).realmClosed(realm.getConfiguration());
            }

        } else {
            referenceCounter.setThreadCount(refCount);
        }
    }

