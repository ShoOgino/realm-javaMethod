    /**
     * Similar to {@link #findAllSorted(String[], Sort[])} but runs asynchronously.
     * from a worker thread.
     * This method is only available from a Looper thread.
     *
     * @return immediately an empty {@link RealmResults}. Users need to register a listener
     * {@link io.realm.RealmResults#addChangeListener(RealmChangeListener)} to be notified when the query completes.
     * @throws java.lang.IllegalArgumentException if one of the field names does not exist or it belongs to a child
     * {@link RealmObject} or a child {@link RealmList}.
     * @see io.realm.RealmResults
     */
    public RealmResults<E> findAllSortedAsync(String[] fieldNames, final Sort[] sortOrders) {
        realm.checkIfValid();

        realm.sharedRealm.capabilities.checkCanDeliverNotification(ASYNC_QUERY_WRONG_THREAD_MESSAGE);
        SortDescriptor sortDescriptor = SortDescriptor.getInstanceForSort(getSchemaConnector(), query.getTable(), fieldNames, sortOrders);
        return createRealmResults(query, sortDescriptor, null, false);
    }

