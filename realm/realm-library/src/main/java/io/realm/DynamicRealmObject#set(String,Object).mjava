    /**
     * Sets the value for the given field. This method will automatically try to convert numbers and
     * booleans that are given as {@code String} to their appropriate type. For example {@code "10"}
     * will be converted to {@code 10} if the field type is {@code int}.
     * <p>
     * Using the typed setters will be faster than using this method.
     *
     * @throws IllegalArgumentException if field name doesn't exist or if the input value cannot be converted
     * to the appropriate input type.
     * @throws NumberFormatException if a String based number cannot be converted properly.
     * @throws RealmException if the field is a {@link io.realm.annotations.PrimaryKey} field.
     */
    @SuppressWarnings("unchecked")
    public void set(String fieldName, Object value) {
        proxyState.getRealm$realm().checkIfValid();

        boolean isString = (value instanceof String);
        String strValue = isString ? (String) value : null;

        // Does implicit conversion if needed.
        long columnIndex = proxyState.getRow$realm().getColumnIndex(fieldName);
        RealmFieldType type = proxyState.getRow$realm().getColumnType(columnIndex);
        if (isString && type != RealmFieldType.STRING) {
            switch (type) {
                case BOOLEAN:
                    value = Boolean.parseBoolean(strValue);
                    break;
                case INTEGER:
                    value = Long.parseLong(strValue);
                    break;
                case FLOAT:
                    value = Float.parseFloat(strValue);
                    break;
                case DOUBLE:
                    value = Double.parseDouble(strValue);
                    break;
                case DATE:
                    value = JsonUtils.stringToDate(strValue);
                    break;
                default:
                    throw new IllegalArgumentException(String.format(Locale.US,
                            "Field %s is not a String field, " +
                            "and the provide value could not be automatically converted: %s. Use a typed" +
                            "setter instead", fieldName, value));
            }
        }

        if (value == null) {
            setNull(fieldName);
        } else {
            setValue(fieldName, value);
        }
    }

