    /**
     * Make this instance contain a (non-strict) subset of the data in the passed ColumnIndices.
     * The schemaVersion and every ColumnInfo object held by this instance will be updated to be
     * the same the corresponding data in the passed instance or IllegalStateException will be thrown.
     * It is allowable for the passed ColumnIndices to contain information this instance does not.
     * <p>
     * NOTE: copying does not change this instance's mutability state.
     *
     * @param src the instance to copy.
     * @throws UnsupportedOperationException if this instance is immutable.
     * @throws IllegalStateException if this object contains information for a table that the source does not.
     */
    public void copyFrom(ColumnIndices src) {
        if (!mutable) {
            throw new UnsupportedOperationException("Attempt to modify immutable cache");
        }
        for (Map.Entry<String, ColumnInfo> entry : classesByName.entrySet()) {
            final ColumnInfo otherColumnInfo = src.classesByName.get(entry.getKey());
            if (otherColumnInfo == null) {
                throw new IllegalStateException("Failed to copy ColumnIndices cache for class: " + entry.getKey());
            }
            entry.getValue().copyFrom(otherColumnInfo);
        }
        this.schemaVersion = src.schemaVersion;
    }

