    private long openSharedGroupOrFail(Durability durability, byte[] key) {
        // We have anecdotal evidence that on some versions of Android it is possible for two versions of an app
        // to exist in two processes during an app upgrade. This is problematic since the lock file might not be
        // compatible across two versions of Android. See https://github.com/realm/realm-java/issues/2459. If this
        // happens we assume the overlap is really small so instead of failing outright we retry using incremental
        // backoff.
        int i = 0;
        final long start = System.nanoTime();
        RuntimeException lastError = null;
        while (TimeUnit.MILLISECONDS.convert(System.nanoTime() - start, TimeUnit.NANOSECONDS) < INCREMENTAL_BACKOFF_LIMIT_MS) {
            try {
                long nativePtr = createNativeWithImplicitTransactions(nativeReplicationPtr, durability.value, key);
                if (i > 0) {
                    RealmLog.w("IncompatibleLockFile was detected. Error was resolved after " + i + " retries");
                }
                return nativePtr;
            } catch (IncompatibleLockFileException e) {
                i++;
                lastError = e;
                try {
                    Thread.sleep(getSleepTime(i));
                    RealmLog.d("Waiting for another process to release the Realm file: " + path);
                } catch (InterruptedException ignored) {
                    RealmLog.d("Waiting for Realm to open interrupted: " + path);
                }
            }
        }

        throw new RealmError("Could not open the Realm file: " + lastError.getMessage());
    }

