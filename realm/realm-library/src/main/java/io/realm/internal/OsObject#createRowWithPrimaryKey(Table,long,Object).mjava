    /**
     * Create an object in the given table which has a primary key column defined, and set the primary key with given
     * value.
     * This is used for the fast bulk insertion.
     *
     * @param table the table where the object is created.
     * @param primaryKeyColumnIndex the column index of primary key field.
     * @param primaryKeyValue the primary key value.
     * @return a newly created {@code UncheckedRow}.
     */
    // FIXME: Proxy could just pass the pk index here which is much faster.
    public static long createRowWithPrimaryKey(Table table, long primaryKeyColumnIndex, Object primaryKeyValue) {
        RealmFieldType type = table.getColumnType(primaryKeyColumnIndex);
        final SharedRealm sharedRealm = table.getSharedRealm();

        if (type == RealmFieldType.STRING) {
            if (primaryKeyValue != null && !(primaryKeyValue instanceof String)) {
                throw new IllegalArgumentException("Primary key value is not a String: " + primaryKeyValue);
            }
            return nativeCreateRowWithStringPrimaryKey(sharedRealm.getNativePtr(), table.getNativePtr(),
                    primaryKeyColumnIndex, (String) primaryKeyValue);

        } else if (type == RealmFieldType.INTEGER) {
            long value = primaryKeyValue == null ? 0 : Long.parseLong(primaryKeyValue.toString());
            return nativeCreateRowWithLongPrimaryKey(sharedRealm.getNativePtr(), table.getNativePtr(),
                    primaryKeyColumnIndex, value, primaryKeyValue == null);
        } else {
            throw new RealmException("Cannot check for duplicate rows for unsupported primary key type: " + type);
        }
    }

