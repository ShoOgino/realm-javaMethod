    /**
     * Makes this ColumnInfo an exact copy of {@code src}.
     *
     * @param src The source for the copy.  This instance will be an exact copy of {@code src} after return.
     * {@code src} must not be {@code null}.
     * @throws IllegalArgumentException if {@code other} has different class than this.
     */
    public void copyFrom(ColumnInfo src) {
        if (!mutable) {
            throw new UnsupportedOperationException("Attempt to modify an immutable ColumnInfo");
        }
        if (null == src) {
            throw new NullPointerException("Attempt to copy null ColumnInfo");
        }

        indicesFromJavaFieldNames.clear();
        indicesFromJavaFieldNames.putAll(src.indicesFromJavaFieldNames);
        indicesFromColumnNames.clear();
        indicesFromColumnNames.putAll(src.indicesFromColumnNames);
        javaFieldNameToInternalNames.clear();
        javaFieldNameToInternalNames.putAll(src.javaFieldNameToInternalNames);
        copy(src, this);
    }

