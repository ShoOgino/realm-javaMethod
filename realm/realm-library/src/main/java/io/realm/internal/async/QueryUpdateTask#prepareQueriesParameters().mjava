    private AlignedQueriesParameters prepareQueriesParameters() {
        long[] handoverQueries = new long[realmResultsEntries.size()];
        long[][] queriesParameters = new long[realmResultsEntries.size()][6];
        long[][] multiSortColumnIndices = new long[realmResultsEntries.size()][];
        boolean[][] multiSortOrder = new boolean[realmResultsEntries.size()][];

        int i = 0;
        for (Builder.QueryEntry  queryEntry : realmResultsEntries) {
            switch (queryEntry.queryArguments.type) {
                case ArgumentsHolder.TYPE_FIND_ALL: {
                    handoverQueries[i] = queryEntry.handoverQueryPointer;
                    queriesParameters[i][0] = ArgumentsHolder.TYPE_FIND_ALL;
                    queriesParameters[i][1] = 0;
                    queriesParameters[i][2] = Table.INFINITE;
                    queriesParameters[i][3] = Table.INFINITE;
                    break;
                }
                case ArgumentsHolder.TYPE_DISTINCT: {
                    handoverQueries[i] = queryEntry.handoverQueryPointer;
                    queriesParameters[i][0] = ArgumentsHolder.TYPE_DISTINCT;
                    queriesParameters[i][1] = queryEntry.queryArguments.columnIndex;
                    break;
                }
                case ArgumentsHolder.TYPE_FIND_ALL_SORTED: {
                    handoverQueries[i] = queryEntry.handoverQueryPointer;
                    queriesParameters[i][0] = ArgumentsHolder.TYPE_FIND_ALL_SORTED;
                    queriesParameters[i][1] = 0;
                    queriesParameters[i][2] = Table.INFINITE;
                    queriesParameters[i][3] = Table.INFINITE;
                    queriesParameters[i][4] = queryEntry.queryArguments.columnIndex;
                    queriesParameters[i][5] = (queryEntry.queryArguments.sortOrder.getValue()) ? 1 : 0;
                    break;
                }
                case ArgumentsHolder.TYPE_FIND_ALL_MULTI_SORTED:
                    handoverQueries[i] = queryEntry.handoverQueryPointer;
                    queriesParameters[i][0] = ArgumentsHolder.TYPE_FIND_ALL_MULTI_SORTED;
                    queriesParameters[i][1] = 0;
                    queriesParameters[i][2] = Table.INFINITE;
                    queriesParameters[i][3] = Table.INFINITE;
                    multiSortColumnIndices[i] = queryEntry.queryArguments.columnIndices;
                    multiSortOrder[i] = TableQuery.getNativeSortOrderValues(queryEntry.queryArguments.sortOrders);
                    break;
                default:
                    throw new IllegalArgumentException("Query mode " + queryEntry.queryArguments.type + " not supported");
            }
            i++;
        }
        AlignedQueriesParameters alignedParameters = new AlignedQueriesParameters();

        alignedParameters.handoverQueries = handoverQueries;
        alignedParameters.multiSortColumnIndices = multiSortColumnIndices;
        alignedParameters.multiSortOrder = multiSortOrder;
        alignedParameters.queriesParameters = queriesParameters;

        return alignedParameters;
    }

