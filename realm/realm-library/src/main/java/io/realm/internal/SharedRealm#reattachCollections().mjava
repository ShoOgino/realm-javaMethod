    // Ideally the reattaching should happen at the very end of the event loop, but it is impossible for most event
    // framework. We need to ensure:
    // 1) It happens before any other coming events get handled (eg: UI redraw event).
    // 2) It happens before Object Store async callbacks since the Object Store event_loop_signal might use a different
    //    event queue. This is guaranteed by call this function in the binding_context::before_notify callback.
    void reattachCollections() {
        if (isClosed()) {
            return;
        }
        if (isInTransaction()) {
            // This should never happen.
            throw new IllegalStateException( "Collection cannot be reattached if the Realm is in transaction." +
                    " Please remember to commit or cancel transaction before finishing the current event loop.");
        }
        for (WeakReference<Collection> collectionRef : collections) {
            Collection collection = collectionRef.get();
            if (collection == null) {
                collections.remove(collectionRef);
            } else {
                collection.reattach();
            }
        }
    }

