    /**
     * Add a new column to the indexMap.
     * <p>
     * <b>For use only in subclass constructors!</b>.
     * Must be called from within the subclass constructor, to maintain the effectively-final contract.
     * <p>
     * No validation done here.  Presuming that all necessary validation takes place in {@code Proxy.validateTable}.
     *
     * @param columnName The name of the column whose index is sought.
     * @param objectSchemaInfo the {@link OsObjectSchemaInfo} for the corresponding {@code RealmObject}.
     * @return the index of the column in the table
     */
    protected final long addColumnDetails(String columnName, OsObjectSchemaInfo objectSchemaInfo) {
        Property property = objectSchemaInfo.getProperty(columnName);
        indicesMap.put(columnName, new ColumnDetails(property));
        return property.getColumnIndex();
    }

