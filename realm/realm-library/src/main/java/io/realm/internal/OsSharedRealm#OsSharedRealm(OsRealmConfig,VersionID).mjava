    private OsSharedRealm(OsRealmConfig osRealmConfig, VersionID version) {
        Capabilities capabilities = new AndroidCapabilities();
        RealmNotifier realmNotifier = new AndroidRealmNotifier(this, capabilities);

        // SharedRealms under constructions are identified by the Context.
        this.context = osRealmConfig.getContext();
        sharedRealmsUnderConstruction.add(this);
        try {
            this.nativePtr = nativeGetSharedRealm(osRealmConfig.getNativePtr(), version.version, version.index, realmNotifier);
        } catch (Throwable t) {
            // The SharedRealm instances have to be closed before throw.
            for (OsSharedRealm sharedRealm: tempSharedRealmsForCallback) {
                if (!sharedRealm.isClosed()) {
                    sharedRealm.close();
                }
            }
            throw t;
        } finally {
            tempSharedRealmsForCallback.clear();
            sharedRealmsUnderConstruction.remove(this);
        }
        this.osRealmConfig = osRealmConfig;
        this.schemaInfo = new OsSchemaInfo(nativeGetSchemaInfo(nativePtr), this);
        this.context.addReference(this);

        this.capabilities = capabilities;
        this.realmNotifier = realmNotifier;
        if (version.equals(VersionID.LIVE)) {
            nativeSetAutoRefresh(nativePtr, capabilities.canDeliverNotification());
        }
    }

