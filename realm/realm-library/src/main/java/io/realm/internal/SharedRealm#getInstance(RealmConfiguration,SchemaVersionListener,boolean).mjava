    public static SharedRealm getInstance(RealmConfiguration config, SchemaVersionListener schemaVersionListener,
            boolean autoChangeNotifications) {
        String[] syncUserConf = ObjectServerFacade.getSyncFacadeIfPossible().getUserAndServerUrl(config);
        String syncUserIdentifier = syncUserConf[0];
        String syncRealmUrl = syncUserConf[1];
        String syncRealmAuthUrl = syncUserConf[2];
        String syncRefreshToken = syncUserConf[3];

        final boolean enableCaching = false; // Handled in Java currently
        final boolean enableFormatUpgrade = true;

        long nativeConfigPtr = nativeCreateConfig(
                config.getPath(),
                config.getEncryptionKey(),
                syncRealmUrl != null ? SchemaMode.SCHEMA_MODE_ADDITIVE.getNativeValue() : SchemaMode.SCHEMA_MODE_MANUAL.getNativeValue(),
                config.getDurability() == Durability.MEM_ONLY,
                enableCaching,
                config.getSchemaVersion(),
                enableFormatUpgrade,
                autoChangeNotifications,
                syncRealmUrl,
                syncRealmAuthUrl,
                syncUserIdentifier,
                syncRefreshToken);

        try {
            ObjectServerFacade.getSyncFacadeIfPossible().wrapObjectStoreSessionIfRequired(config);

            return new SharedRealm(nativeConfigPtr, config, schemaVersionListener);
        } finally {
            nativeCloseConfig(nativeConfigPtr);
        }
    }

