    public PendingRow(SharedRealm sharedRealm, TableQuery query, SortDescriptor sortDescriptor,
                      final boolean returnCheckedRow) {
        pendingCollection = new Collection(sharedRealm, query, sortDescriptor);
        listener = new Collection.Listener(new RealmChangeListener<PendingRow>() {
            @Override
            public void onChange(PendingRow pendingRow) {
                if (frontEnd == null) {
                    throw new IllegalStateException(PROXY_NOT_SET_MESSAGE);
                }
                // TODO: PendingRow will always get the first Row of the query since we only support findFirst.
                if (frontEnd.get() == null) {
                    // The front end is GCed.
                    clearPendingCollection();
                    return;
                }
                UncheckedRow uncheckedRow = pendingCollection.firstUncheckedRow();
                // If no rows returned by the query, just wait for the query updates until it returns a valid row.
                if (uncheckedRow != null) {
                    Row row = returnCheckedRow ? CheckedRow.getFromRow(uncheckedRow) : uncheckedRow;
                    // Ask the front end to reset the row and stop async query.
                    frontEnd.get().onQueryFinished(row, true);
                    clearPendingCollection();
                }
            }
        }, this);
        pendingCollection.addListener(listener);
        this.returnCheckedRow = returnCheckedRow;
    }

