    /**
     * If two rows are indentical (for the given set of distinct-columns), then the last row is
     * removed unless sorted, in which case the first object is returned.
     * Each time distinct() gets called, it will first fetch the full original TableView contents
     * and then apply distinct() on that, invalidating previous distinct().
     *
     * @param columnIndexes the column indexes.
     * @throws IllegalArgumentException if a column is unsupported type, or is not indexed.
     */
    public void distinct(List<Long> columnIndexes) {
        long[] indexes = new long[columnIndexes.size()];
        for (int i = 0; i < columnIndexes.size(); i++) {
            indexes[i] = columnIndexes.get(i);
        }
        nativeDistinctMulti(nativePtr, indexes);
    }

