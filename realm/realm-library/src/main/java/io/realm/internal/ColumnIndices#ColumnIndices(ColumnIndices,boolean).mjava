    /**
     * Create a copy of the passed ColumnIndices with the specified mutability.
     *
     * @param other the ColumnIndices object to copy
     * @param mutable if false the object is effectively final.
     */
    public ColumnIndices(ColumnIndices other, boolean mutable) {
        this(other.schemaVersion, new HashMap<Pair<Class<? extends RealmModel>, String>, ColumnInfo>(other.classesToColumnInfo.size()), mutable);
        for (Map.Entry<Pair<Class<? extends RealmModel>, String>, ColumnInfo> entry : other.classesToColumnInfo.entrySet()) {
            ColumnInfo columnInfo = entry.getValue().copy(mutable);
            Pair<Class<? extends RealmModel>, String> key = entry.getKey();
            this.classes.put(key.first, columnInfo);
            this.classesByName.put(key.second, columnInfo);
            this.classesToColumnInfo.put(key, columnInfo);
        }
    }

