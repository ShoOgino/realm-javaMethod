    /**
     * Factory method for field descriptors.
     *
     * @param schema Proxy to schema info
     * @param table the start table
     * @param fieldDescription dot-separated column names
     * @param validFinalColumnTypes legal types for the last column
     * @return the Field descriptor
     * <p>
     * TODO:
     * I suspect that choosing the parsing strategy based on whether there is a ref to a ColumnIndices
     * around or not, is bad architecture.  Almost certainly, there should be a schema that has
     * ColumnIndices and one that does not and the strategies below should belong to the first
     * and second, respectively.  --gbm
     */
    public static FieldDescriptor createFieldDescriptor(
            SchemaProxy schema,
            Table table,
            String fieldDescription,
            Set<RealmFieldType> validInternalColumnTypes,
            Set<RealmFieldType> validFinalColumnTypes) {
        return ((schema == null) || !schema.hasCache())
                ? new DynamicFieldDescriptor(table, fieldDescription, (null != validInternalColumnTypes) ? validInternalColumnTypes : SIMPLE_LINK_FIELD_TYPES, validFinalColumnTypes)
                : new CachedFieldDescriptor(schema, table.getClassName(), fieldDescription, (null != validInternalColumnTypes) ? validInternalColumnTypes : ALL_LINK_FIELD_TYPES, validFinalColumnTypes);
    }

