    /**
     * Get all objects of a specific class name sorted by multiple fields.  If no objects exist, the
     * returned {@link RealmResults} will not be {@code null}. Use {@link RealmResults#size()} to check the number of
     * objects instead.
     *
     * @param className the class to get all objects from.
     * @param sortOrders sort ascending if Sort.ASCENDING, sort descending if Sort.DESCENDING.
     * @param fieldNames an array of field names to sort objects by.
     *        The objects are first sorted by fieldNames[0], then by fieldNames[1] and so forth.
     * @return A sorted {@link RealmResults} containing the objects.
     * @throws java.lang.IllegalArgumentException if a field name does not exist.
     */
    @SuppressWarnings("unchecked")
    public RealmResults<DynamicRealmObject> allObjectsSorted(String className, String fieldNames[], Sort sortOrders[]) {
        checkAllObjectsSortedParameters(fieldNames, sortOrders);
        Table table = schema.getTable(className);

        TableView tableView = doMultiFieldSort(fieldNames, sortOrders, table);
        return RealmResults.createFromDynamicTableOrView(this, tableView, className);
    }

