    /**
     * Checks if this object is managed by Realm. A managed object is just a wrapper around the data in the underlying
     * Realm file. On Looper threads, a managed object will be live-updated so it always points to the latest data. It
     * is possible to register a change listener using {@link #addChangeListener(RealmModel, RealmChangeListener)} to be
     * notified when changes happen. Managed objects are thread confined so that they cannot be accessed from other threads
     * than the one that created them.
     * <p>
     * <p>
     * If this method returns {@code false}, the object is unmanaged. An unmanaged object is just a normal Java object,
     * so it can be parsed freely across threads, but the data in the object is not connected to the underlying Realm,
     * so it will not be live updated.
     * <p>
     * <p>
     * It is possible to create a managed object from an unmanaged object by using
     * {@link Realm#copyToRealm(RealmModel)}. An unmanaged object can be created from a managed object by using
     * {@link Realm#copyFromRealm(RealmModel)}.
     *
     * @return {@code true} if the object is managed, {@code false} if it is unmanaged.
     */
    public static <E extends RealmModel> boolean isManaged(E object) {
        return object instanceof RealmObjectProxy;
    }

