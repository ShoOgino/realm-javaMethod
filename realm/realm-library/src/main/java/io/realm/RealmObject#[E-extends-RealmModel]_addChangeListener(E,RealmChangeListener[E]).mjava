    /**
     * Adds a change listener to a RealmObject.
     *
     * @param object RealmObject to add listener to.
     * @param listener the change listener to be notified.
     * @throws IllegalArgumentException if the {@code object} or the change listener is {@code null}.
     * @throws IllegalArgumentException if object is an un-managed RealmObject.
     * @throws IllegalStateException if you try to add a listener from a non-Looper Thread.
     */
    public static <E extends RealmModel> void addChangeListener(E object, RealmChangeListener<E> listener) {
        if (object == null) {
            throw new IllegalArgumentException("Object should not be null");
        }
        if (listener == null) {
            throw new IllegalArgumentException("Listener should not be null");
        }
        if (object instanceof RealmObjectProxy) {
            RealmObjectProxy proxy = (RealmObjectProxy) object;
            BaseRealm realm = proxy.realmGet$proxyState().getRealm$realm();
            realm.checkIfValid();
            if (realm.handler == null) {
                throw new IllegalStateException("You can't register a listener from a non-Looper thread ");
            }
            List<RealmChangeListener> listeners = proxy.realmGet$proxyState().getListeners$realm();
            if (!listeners.contains(listener)) {
                listeners.add(listener);
            }
            if (isLoaded(proxy)) {
                // Try to add this object to the realmObjects if it has already been loaded.
                // For newly created async objects, it will be handled in RealmQuery.findFirstAsync &
                // HandlerController.completedAsyncRealmObject.
                realm.handlerController.addToRealmObjects(proxy);
            }
        } else {
            throw new IllegalArgumentException("Cannot add listener from this unmanaged RealmObject (created outside of Realm)");
        }
    }

