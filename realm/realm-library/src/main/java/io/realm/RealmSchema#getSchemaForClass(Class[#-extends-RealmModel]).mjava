    RealmObjectSchema getSchemaForClass(Class<? extends RealmModel> clazz) {
        RealmObjectSchema classSchema = classToSchema.get(clazz);
        if (classSchema == null) {
            Class<? extends RealmModel> originalClass = Util.getOriginalModelClass(clazz);
            if (isProxyClass(originalClass, clazz)) {
                // if passed 'clazz' is the proxy, try again with model class
                classSchema = classToSchema.get(originalClass);
            }
            if (classSchema == null) {
                Table table = getTable(clazz);
                classSchema = new RealmObjectSchema(realm, table, columnIndices.getColumnInfo(originalClass).getIndicesMap());
                classToSchema.put(originalClass, classSchema);
            }
            if (isProxyClass(originalClass, clazz)) {
                // 'clazz' is the proxy class for 'originalClass'
                classToSchema.put(clazz, classSchema);
            }
        }
        return classSchema;
    }

