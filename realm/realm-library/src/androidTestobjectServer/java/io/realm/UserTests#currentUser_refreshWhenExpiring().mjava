    // Tests that if a user is loaded from storage, it will still be refreshed when expiring.
    @RunTestInLooperThread
    @Test
    public void currentUser_refreshWhenExpiring() {
        // Setup
        // Expires in 30 seconds and Refresh starts 30 seconds before it expires. This should trigger a refresh
        // immediately.
        long expires = System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(30);
        AuthenticationServer authServer = Mockito.mock(AuthenticationServer.class);
        when(authServer.refreshUser(any(Token.class), any(URL.class))).then(new Answer<AuthenticateResponse>() {
            @Override
            public AuthenticateResponse answer(InvocationOnMock invocation) throws Throwable {
                looperThread.testComplete();
                return SyncTestUtils.createRefreshResponse();
            }
        });

        SyncManager.setUserStore(new SharedPrefsUserStore(InstrumentationRegistry.getContext()));
        SyncManager.setAuthServerImpl(authServer);
        User testUser = SyncTestUtils.createTestUser(expires);
        SyncManager.getUserStore().put(UserStore.CURRENT_USER_KEY, testUser);

        // Load user from storage. This should also trigger a refresh when the user expires
        User user = User.currentUser();
        assertEquals(testUser, user);
    }

