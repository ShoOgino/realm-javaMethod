    @Test
    public void getGlobalInstanceCount() {
        final CountDownLatch bgDone = new CountDownLatch(1);

        final RealmConfiguration config = configFactory.createConfiguration("globalCountTest");
        assertEquals(0, Realm.getGlobalInstanceCount(config));

        // Opens thread local Realm.
        Realm realm = Realm.getInstance(config);
        assertEquals(1, Realm.getGlobalInstanceCount(config));

        Realm realm1 = Realm.getInstance(config);
        assertEquals(1, Realm.getGlobalInstanceCount(config));

        // Even though each Realm type points to the same Realm on disk, we report them as
        // multiple global instances

        // Opens thread local DynamicRealm.
        DynamicRealm dynRealm = DynamicRealm.getInstance(config);
        assertEquals(2, Realm.getGlobalInstanceCount(config));

        // Create frozen Realms.
        Realm frozenRealm = realm.freeze();
        assertTrue(frozenRealm.isFrozen());
        assertEquals(3, Realm.getGlobalInstanceCount(config));

        DynamicRealm frozenDynamicRealm = dynRealm.freeze();
        assertTrue(frozenDynamicRealm.isFrozen());
        assertEquals(4, Realm.getGlobalInstanceCount(config));

        // Opens Realm in another thread.
        new Thread(new Runnable() {
            @Override
            public void run() {
                Realm realm = Realm.getInstance(config);
                assertEquals(5, Realm.getGlobalInstanceCount(config));
                realm.close();
                assertEquals(4, Realm.getGlobalInstanceCount(config));
                bgDone.countDown();
            }
        }).start();

        TestHelper.awaitOrFail(bgDone);
        dynRealm.close();
        assertEquals(3, Realm.getGlobalInstanceCount(config));
        realm.close();
        realm1.close(); // Fully closing the live Realm also closes all frozen Realms
        assertEquals(0, Realm.getGlobalInstanceCount(config));
        assertTrue(frozenRealm.isClosed());
        assertTrue(frozenDynamicRealm.isClosed());
    }

