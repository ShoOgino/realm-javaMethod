    // TODO Remove once waitForChange is introduced
    @Test
    public void iterator_refreshClearsDeletedObjects() {
        if (skipTest(CollectionClass.UNMANAGED_REALMLIST)) {
            return;
        }

        assertEquals(0, collection.iterator().next().getFieldLong());
        realm.beginTransaction();
        Iterator<AllJavaTypes> it = collection.iterator();
        it.next(); // First item is a cyclic reference, avoid deleting that
        AllJavaTypes obj = it.next();
        assertEquals(1, obj.getFieldLong());
        obj.deleteFromRealm();
        realm.commitTransaction();
        realm.refresh(); // Force a refresh of all Collections

        assertEquals(TEST_SIZE - 1, collection.size());

        it = collection.iterator();
        it.next();
        obj = it.next(); // Iterator can no longer access the deleted object
        assertTrue(obj.isValid());
        assertEquals(2, obj.getFieldLong());
    }

