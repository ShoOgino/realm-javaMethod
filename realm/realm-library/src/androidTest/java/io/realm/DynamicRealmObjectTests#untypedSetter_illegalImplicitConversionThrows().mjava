    @Test
    public void untypedSetter_illegalImplicitConversionThrows() {
        realm.beginTransaction();
        AllJavaTypes obj = realm.createObject(AllJavaTypes.class, 0);
        DynamicRealmObject dObj = new DynamicRealmObject(obj);
        try {
            for (SupportedType type : SupportedType.values()) {
                try {
                    switch (type) {
                        case SHORT:
                            dObj.set(AllJavaTypes.FIELD_SHORT, "foo");
                            break;
                        case INT:
                            dObj.set(AllJavaTypes.FIELD_INT, "foo");
                            break;
                        case LONG:
                            dObj.set(AllJavaTypes.FIELD_ID, "foo");
                            break;
                        case FLOAT:
                            dObj.set(AllJavaTypes.FIELD_FLOAT, "foo");
                            break;
                        case DOUBLE:
                            dObj.set(AllJavaTypes.FIELD_DOUBLE, "foo");
                            break;
                        case DATE:
                            dObj.set(AllJavaTypes.FIELD_DATE, "foo");
                            break;
                        case DECIMAL128:
                            dObj.set(AllJavaTypes.FIELD_DECIMAL128, "foo");
                            break;
                        case OBJECT_ID:
                            dObj.set(AllJavaTypes.FIELD_OBJECT_ID, "foo");
                            break;
                        // These types don't have a string representation that can be parsed.
                        case BOOLEAN: // Boolean is special as it returns false for all strings != "true"
                        case BYTE:
                        case OBJECT:
                        case LIST:
                        case LIST_INTEGER:
                        case LIST_STRING:
                        case LIST_BOOLEAN:
                        case LIST_FLOAT:
                        case LIST_DOUBLE:
                        case LIST_BINARY:
                        case LIST_DATE:
                        case LIST_DECIMAL128:
                        case LIST_OBJECT_ID:
                        case STRING:
                        case BINARY:
                            continue;

                        default:
                            fail("Unknown type: " + type);
                    }
                    fail(type + " failed");
                } catch (IllegalArgumentException ignored) {
                } catch (RealmException e) {
                    if (!(e.getCause() instanceof ParseException)) {
                        // Providing "foo" to the date parser will blow up with a RealmException
                        // and the cause will be a ParseException.
                        fail(type + " failed");
                    }
                }
            }
        } finally {
            realm.cancelTransaction();
        }
    }

