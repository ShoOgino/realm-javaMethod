    // try to store null values in non-nullable fields
    public void testStoreNullValuesToNonNullableFields() {
        try {
            testRealm.beginTransaction();
            NullTypes nullTypes = testRealm.createObject(NullTypes.class);
            // 1 String
            try {
                nullTypes.setFieldStringNotNull(null);
                fail();
            } catch (IllegalArgumentException ignored) {
            }
            // 2 Bytes
            try {
                nullTypes.setFieldBytesNotNull(null);
                fail();
            } catch (IllegalArgumentException ignored) {
            }
            // 3 Boolean
            try {
                nullTypes.setFieldBooleanNotNull(null);
                fail();
            } catch (IllegalArgumentException ignored) {
            }
            // 4 Byte
            try {
                nullTypes.setFieldByteNotNull(null);
                fail();
            } catch (IllegalArgumentException ignored) {
            }
            // 5 Short
            try {
                nullTypes.setFieldShortNotNull(null);
                fail();
            } catch (IllegalArgumentException ignored) {
            }
            // 6 Integer
            try {
                nullTypes.setFieldIntegerNotNull(null);
                fail();
            } catch (IllegalArgumentException ignored) {
            }
            // 7 Long
            try {
                nullTypes.setFieldLongNotNull(null);
                fail();
            } catch (IllegalArgumentException ignored) {
            }
            // 8 Float
            try {
                nullTypes.setFieldFloatNotNull(null);
                fail();
            } catch (IllegalArgumentException ignored) {
            }
            // 9 Double
            try {
                nullTypes.setFieldDoubleNotNull(null);
                fail();
            } catch (IllegalArgumentException ignored) {
            }
            // 10 Date
            try {
                nullTypes.setFieldDateNotNull(null);
                fail();
            } catch (IllegalArgumentException ignored) {
            }
        }
        finally {
            testRealm.cancelTransaction();
        }
    }

