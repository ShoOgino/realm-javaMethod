    private RealmConfiguration prepareColumnSwappedRealm() {

        final RealmConfiguration columnSwappedRealmConfigForV0 = configFactory.createConfigurationBuilder()
                .name("columnSwapped.realm")
                .migration(new RealmMigration() {
                    @Override
                    public void migrate(DynamicRealm realm, long oldVersion, long newVersion) {
                        final Table table = realm.schema.getTable(StringAndInt.class);
                        final long strIndex = table.getColumnIndex("str");
                        final long numberIndex = table.getColumnIndex("number");

                        while (0 < table.getColumnCount()) {
                            table.removeColumn(0);
                        }

                        final long newStrIndex;
                        // swap column indices
                        if (strIndex < numberIndex) {
                            table.addColumn(RealmFieldType.INTEGER, "number");
                            newStrIndex = table.addColumn(RealmFieldType.STRING, "str");
                        } else {
                            newStrIndex = table.addColumn(RealmFieldType.STRING, "str");
                            table.addColumn(RealmFieldType.INTEGER, "number");
                        }
                        table.convertColumnToNullable(newStrIndex);
                    }
                })
                .build();

        final RealmConfiguration columnSwappedRealmConfigForV1 = configFactory.createConfigurationBuilder()
                .name("columnSwapped.realm")
                .migration(new RealmMigration() {
                    @Override
                    public void migrate(DynamicRealm realm, long oldVersion, long newVersion) {
                        // Do nothing
                    }
                })
                .schemaVersion(1L)
                .build();

        Realm.deleteRealm(columnSwappedRealmConfigForV0);
        Realm.getInstance(columnSwappedRealmConfigForV0).close();
        Realm.migrateRealm(columnSwappedRealmConfigForV0);
        return columnSwappedRealmConfigForV1;
    }

