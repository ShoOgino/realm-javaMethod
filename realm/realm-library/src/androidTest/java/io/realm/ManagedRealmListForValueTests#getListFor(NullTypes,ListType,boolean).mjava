    static RealmList<?> getListFor(NullTypes object, ListType listType, boolean nullable) {
        switch (listType) {
            case STRING_LIST:
                return nullable ? object.getFieldStringListNull() : object.getFieldStringListNotNull();
            case BOOLEAN_LIST:
                return nullable ? object.getFieldBooleanListNull() : object.getFieldBooleanListNotNull();
            case BINARY_LIST:
                return nullable ? object.getFieldBinaryListNull() : object.getFieldBinaryListNotNull();
            case LONG_LIST:
                return nullable ? object.getFieldLongListNull() : object.getFieldLongListNotNull();
            case INTEGER_LIST:
                return nullable ? object.getFieldIntegerListNull() : object.getFieldIntegerListNotNull();
            case SHORT_LIST:
                return nullable ? object.getFieldShortListNull() : object.getFieldShortListNotNull();
            case BYTE_LIST:
                return nullable ? object.getFieldByteListNull() : object.getFieldByteListNotNull();
            case DOUBLE_LIST:
                return nullable ? object.getFieldDoubleListNull() : object.getFieldDoubleListNotNull();
            case FLOAT_LIST:
                return nullable ? object.getFieldFloatListNull() : object.getFieldFloatListNotNull();
            case DATE_LIST:
                return nullable ? object.getFieldDateListNull() : object.getFieldDateListNotNull();
            default:
                throw new AssertionError("unexpected value type: " + listType.name());
        }
    }

