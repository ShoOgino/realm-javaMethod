    @Test
    @RunTestInLooperThread(before = PopulateOneAllTypes.class)
    public void realmListener_realmResultShouldBeSynced() {
        final Realm realm = looperThread.realm;
        final RealmResults<AllTypes> results = realm.where(AllTypes.class).findAll();
        assertEquals(1, results.size());

        realm.executeTransactionAsync(new Realm.Transaction() {
            @Override
            public void execute(Realm realm) {
                AllTypes allTypes = realm.where(AllTypes.class).findFirst();
                assertNotNull(allTypes);
                allTypes.deleteFromRealm();
                assertEquals(0, realm.where(AllTypes.class).count());
            }
        });

        realm.addChangeListener(new RealmChangeListener<Realm>() {
            @Override
            public void onChange(Realm element) {
                // Changes event triggered by deletion in async transaction.
                assertEquals(0, realm.where(AllTypes.class).count());
                assertEquals(0, results.size());
                looperThread.testComplete();
            }
        });
    }

