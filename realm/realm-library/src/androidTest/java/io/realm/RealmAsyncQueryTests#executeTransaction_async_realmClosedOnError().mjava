    // Test if the background Realm is closed when transaction error returned.
    @Test
    @RunTestInLooperThread
    public void executeTransaction_async_realmClosedOnError() {
        final AtomicInteger counter = new AtomicInteger(100);
        final Realm realm = looperThread.realm;
        final RealmCache.Callback cacheCallback = new RealmCache.Callback() {
            @Override
            public void onResult(int count) {
                assertEquals(1, count);
                if (counter.decrementAndGet() == 0) {
                    realm.close();
                    looperThread.testComplete();
                }
            }
        };
        final Realm.Transaction.OnError transactionCallback = new Realm.Transaction.OnError() {
            @Override
            public void onError(Throwable error) {
                RealmCache.invokeWithGlobalRefCount(realm.getConfiguration(), cacheCallback);
                if (counter.get() == 0) {
                    // Finish testing
                    return;
                }
                realm.executeTransactionAsync(new Realm.Transaction() {
                    @Override
                    public void execute(Realm realm) {
                        throw new RuntimeException("Dummy exception");
                    }
                }, this);
            }
        };

        realm.executeTransactionAsync(new Realm.Transaction() {
            @Override
            public void execute(Realm realm) {
                throw new RuntimeException("Dummy exception");
            }
        }, transactionCallback);
    }

