    // Helper method for calling setters with different field names
    private void callSetter(SupportedType type, List<String> fieldNames) {
        for (String fieldName : fieldNames) {
            switch (type) {
                case BOOLEAN: dObjTyped.setBoolean(fieldName, false); break;
                case SHORT: dObjTyped.setShort(fieldName, (short) 1); break;
                case INT: dObjTyped.setInt(fieldName, 1); break;
                case LONG: dObjTyped.setLong(fieldName, 1L); break;
                case BYTE: dObjTyped.setByte(fieldName, (byte) 4); break;
                case FLOAT: dObjTyped.setFloat(fieldName, 1.23f); break;
                case DOUBLE: dObjTyped.setDouble(fieldName, 1.23d); break;
                case STRING: dObjTyped.setString(fieldName, "foo"); break;
                case BINARY: dObjTyped.setBlob(fieldName, new byte[]{}); break;
                case DATE: dObjTyped.getDate(fieldName); break;
                case OBJECT: dObjTyped.setObject(fieldName, null); break;
                case LIST: dObjTyped.setList(fieldName, null); break;
                default:
                    fail();
            }
        }
    }

