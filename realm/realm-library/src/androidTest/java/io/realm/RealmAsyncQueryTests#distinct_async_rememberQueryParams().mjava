    @Test
    @RunTestInLooperThread()
    public void distinct_async_rememberQueryParams() {
        final Realm realm = looperThread.getRealm();
        realm.beginTransaction();
        final int TEST_SIZE = 10;
        for (int i = 0; i < TEST_SIZE; i++) {
            realm.createObject(AllJavaTypes.class, i);
        }
        realm.commitTransaction();

        RealmResults<AllJavaTypes> results = realm.where(AllJavaTypes.class)
                .notEqualTo(AllJavaTypes.FIELD_ID, TEST_SIZE / 2)
                .distinct(AllJavaTypes.FIELD_ID)
                .findAllAsync();

        results.addChangeListener(new RealmChangeListener<RealmResults<AllJavaTypes>>() {
            @Override
            public void onChange(RealmResults<AllJavaTypes> results) {
                assertEquals(TEST_SIZE - 1, results.size());
                assertEquals(0, results.where().equalTo(AllJavaTypes.FIELD_ID, TEST_SIZE / 2).count());
                looperThread.testComplete();
            }
        });
    }

