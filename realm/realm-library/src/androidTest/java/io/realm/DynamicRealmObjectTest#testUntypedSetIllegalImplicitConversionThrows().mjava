    public void testUntypedSetIllegalImplicitConversionThrows() {
        realm.beginTransaction();
        AllJavaTypes obj = realm.createObject(AllJavaTypes.class);
        DynamicRealmObject dObj = new DynamicRealmObject(obj);
        try {
            for (SupportedType type : SupportedType.values()) {
                try {
                    switch (type) {
                        case SHORT:
                            dObj.set(AllJavaTypes.FIELD_SHORT, "foo");
                            break;
                        case INT:
                            dObj.set(AllJavaTypes.FIELD_INT, "foo");
                            break;
                        case LONG:
                            dObj.set(AllJavaTypes.FIELD_LONG, "foo");
                            break;
                        case FLOAT:
                            dObj.set(AllJavaTypes.FIELD_FLOAT, "foo");
                            break;
                        case DOUBLE:
                            dObj.set(AllJavaTypes.FIELD_DOUBLE, "foo");
                            break;
                        case DATE:
                            dObj.set(AllJavaTypes.FIELD_DATE, "foo");
                            break;

                        // These types don't have a string representation that can be parsed.
                        case BOOLEAN: // Boolean is special as it returns false for all strings != "true"
                        case BYTE:
                        case OBJECT:
                        case LIST:
                        case STRING:
                        case BINARY:
                            continue;

                        default:
                            fail("Unknown type: " + type);
                    }
                    fail(type + " failed");
                } catch (IllegalArgumentException ignored) {
                }
            }
        } finally {
            realm.cancelTransaction();
        }
    }

