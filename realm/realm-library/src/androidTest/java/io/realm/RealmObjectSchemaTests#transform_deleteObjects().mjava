    @Test
    public void transform_deleteObjects() {
        if (type == ObjectSchemaType.IMMUTABLE) {
            return;
        }

        RealmObjectSchema classSchema = realm.getSchema().get("CyclicType");

        Runnable transform = () -> classSchema.transform(obj -> {
            if (obj.getInt(CyclicType.FIELD_ID) % 2 == 0) {
                obj.getObject(CyclicType.FIELD_OBJECT).deleteFromRealm();
                obj.deleteFromRealm();
            }
        });

        String className = classSchema.getClassName();
        for (int i = 0; i < 10; i++) {
            DynamicRealmObject parentObj = ((DynamicRealm)realm).createObject(className);
            DynamicRealmObject childObj = ((DynamicRealm)realm).createObject(className);
            parentObj.setLong(CyclicType.FIELD_ID, i);
            parentObj.setObject(CyclicType.FIELD_OBJECT, childObj);
            childObj.setLong(CyclicType.FIELD_ID, i + 100);
        }
        assertEquals(20, ((DynamicRealm) realm).where((className)).count());
        transform.run();
        assertEquals(10, ((DynamicRealm) realm).where((className)).count());
    }

