    @Test
    public void testGenericAddOnTable() {
        for (int i = 0; i < value.size(); i++) {
            for (int j = 0; j < value.size(); j++) {
                final Object valueI = value.get(i);
                final Object valueJ = value.get(j);

                TestHelper.createTable(sharedRealm, "temp" + i + "_" + j, new TestHelper.AdditionalTableSetup() {
                    @Override
                    public void execute(Table t) {
                        // If the objects matches no exception will be thrown.
                        if (valueI.getClass().equals(valueJ.getClass())) {
                            assertTrue(true);
                        } else {
                            // Adds column.
                            long colKey = t.addColumn(TestHelper.getColumnType(valueJ), valueJ.getClass().getSimpleName());
                            // Adds value.
                            try {
                                TestHelper.addRowWithValues(t, new long[]{colKey}, new Object[]{valueI});
                                fail("No matching type");
                            } catch (IllegalArgumentException ignored) {
                            }
                        }
                    }
                });
            }
        }
    }

