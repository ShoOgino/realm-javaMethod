    @Test
    public void byteArrayQuery() throws Exception {

        final byte[] binary1 = new byte[] {0x01, 0x02, 0x03, 0x04};
        final byte[] binary2 = new byte[] {0x05, 0x02, 0x03, 0x08};
        final byte[] binary3 = new byte[] {0x09, 0x0a, 0x0b, 0x04};
        final byte[] binary4 = new byte[] {0x05, 0x0a, 0x0b, 0x10};

        Table table = TestHelper.createTable(sharedRealm, "temp", new TestHelper.AdditionalTableSetup() {
            @Override
            public void execute(Table table) {
                table.addColumn(RealmFieldType.BINARY, "binary");

                TestHelper.addRowWithValues(table, (Object) binary1);
                TestHelper.addRowWithValues(table, (Object) binary2);
                TestHelper.addRowWithValues(table, (Object) binary3);
                TestHelper.addRowWithValues(table, (Object) binary4);
            }
        });

        // Equal to

        assertEquals(1L, table.where().equalTo(new long[]{0}, oneNullTable, binary1).count());
        assertEquals(1L, table.where().equalTo(new long[]{0}, oneNullTable, binary3).count());

        // Not equal to

        assertEquals(3L, table.where().notEqualTo(new long[]{0}, oneNullTable, binary2).count());
        assertEquals(3L, table.where().notEqualTo(new long[]{0}, oneNullTable, binary4).count());
    }

