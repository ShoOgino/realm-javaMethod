    /**
     * This test surfaces a bunch of problems, most of them seem to be around caching of the schema
     * during a transaction
     *
     * 1) Removing the primary key do not invalidate the cache in RealmSchema and those cached
     *    are ImmutableRealmObjectSchema so do not change when the primary key is removed.
     *
     * 2) Addding `schema.refresh()` to RealmObjectSchema.removePrimaryKey()` causes
     *    RealmPrimaryKeyConstraintException anyway. Unclear why.
     */
    @Test
    @Ignore("See https://github.com/realm/realm-java/issues/5231")
    public void removingPrimaryKeyRemovesConstraint_typeSetters() {
        RealmConfiguration config = configFactory.createConfigurationBuilder()
                .name("removeConstraints").build();

        DynamicRealm realm = DynamicRealm.getInstance(config);
        RealmSchema realmSchema = realm.getSchema();
        realm.beginTransaction();
        RealmObjectSchema tableSchema = realmSchema.create("Employee")
                .addField("name", String.class, FieldAttribute.PRIMARY_KEY);

        realm.createObject("Employee", "Foo");
        DynamicRealmObject obj = realm.createObject("Employee", "Foo2");

        try {
            // Tries to create 2nd entry with name Foo.
            obj.setString("name", "Foo");
        } catch (IllegalArgumentException e) {
            tableSchema.removePrimaryKey();
            obj.setString("name", "Foo");
        } finally {
            realm.close();
        }
    }

