    @Test
    public void getInstanceForSort_linkField() {
        RealmFieldType[] types = new RealmFieldType[]{RealmFieldType.BOOLEAN, RealmFieldType.INTEGER, RealmFieldType.STRING, RealmFieldType.DATE};
        long columnKey1 = table.addColumn(RealmFieldType.BOOLEAN, RealmFieldType.BOOLEAN.name());
        long columnKey2 = table.addColumn(RealmFieldType.INTEGER, RealmFieldType.INTEGER.name());
        long columnKey3 = table.addColumn(RealmFieldType.STRING, RealmFieldType.STRING.name());
        long columnKey4 = table.addColumn(RealmFieldType.DATE, RealmFieldType.DATE.name());
        table.addSearchIndex(columnKey1);
        table.addSearchIndex(columnKey2);
        table.addSearchIndex(columnKey3);
        table.addSearchIndex(columnKey4);
        long[] columnsKey = new long[]{columnKey1, columnKey2, columnKey3, columnKey4};

        RealmFieldType objectType = RealmFieldType.OBJECT;
        long columnLink = table.addColumnLink(objectType, objectType.name(), table);

        for (int j = 0; j < columnsKey.length; j++) {
            QueryDescriptor sortDescriptor = QueryDescriptor.getInstanceForSort(null, table,
                    String.format("%s.%s", objectType.name(), types[j].name()), Sort.ASCENDING);
            assertEquals(2, sortDescriptor.getColumnKeys()[0].length);
            assertEquals(columnLink, sortDescriptor.getColumnKeys()[0][0]);
            assertEquals(columnsKey[j], sortDescriptor.getColumnKeys()[0][1]);
            assertTrue(sortDescriptor.getAscendings()[0]);
        }
    }

