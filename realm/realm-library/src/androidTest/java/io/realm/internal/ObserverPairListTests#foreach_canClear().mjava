    @Test
    public void foreach_canClear() {
        final AtomicInteger count = new AtomicInteger(0);
        final TestObserverPair pair1 = new TestObserverPair(ONE, new TestListener());
        final TestObserverPair pair2 = new TestObserverPair(TWO, new TestListener());
        final TestObserverPair pair3 = new TestObserverPair(THREE, new TestListener());
        observerPairs.add(pair1);
        observerPairs.add(pair2);
        observerPairs.add(pair3);
        assertEquals(3, observerPairs.size());
        observerPairs.foreach(new ObserverPairList.Callback<TestObserverPair>() {
            @Override
            public void onCalled(TestObserverPair pair, Object observer) {
                assertFalse(((Integer) observer) == 2);
                assertFalse(((Integer) observer) == 3);
                observerPairs.clear();
                count.getAndIncrement();
            }
        });
        assertEquals(0, observerPairs.size());
        assertEquals(1, count.get());

        observerPairs.add(pair1);
        assertEquals(1, observerPairs.size());
        observerPairs.foreach(new ObserverPairList.Callback<TestObserverPair>() {
            @Override
            public void onCalled(TestObserverPair pair, Object observer) {
                assertTrue(((Integer) observer) == 1);
            }
        });
    }

