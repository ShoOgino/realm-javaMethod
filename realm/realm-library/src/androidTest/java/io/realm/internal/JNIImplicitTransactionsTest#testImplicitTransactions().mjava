    public void testImplicitTransactions() {
        deleteFile();
        SharedGroup sg = new SharedGroup(testFile, true, SharedGroup.Durability.FULL, null); // TODO: try with encryption

        // Create a table
        WriteTransaction wt = sg.beginWrite();
        if (!wt.hasTable("test")) {
            Table table = wt.getTable("test");
            table.addColumn(RealmFieldType.INTEGER, "integer");
            table.addEmptyRow();
        }
        wt.commit();

        // Add a row in a write transaction and continue with read transaction
        ImplicitTransaction t = sg.beginImplicitTransaction();
        Table test = t.getTable("test");
        assertEquals(1, test.size());
        t.promoteToWrite();
        test.addEmptyRow();
        t.commitAndContinueAsRead();

        // Should throw as this is now a read transaction
        try {
            test.addEmptyRow();
            fail();
        } catch (IllegalStateException e) {
            assertNotNull(e);
        }
    }

