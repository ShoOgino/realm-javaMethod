    @Test
    public void shouldThrowWhenSetIndexOnWrongRealmFieldType() {
        Table t = TestHelper.createTableWithAllColumnTypes(sharedRealm);

        long columnKey1 = t.getColumnKey("binary");
        long columnKey2 = t.getColumnKey("boolean");
        long columnKey3 = t.getColumnKey("date");
        long columnKey4 = t.getColumnKey("double");
        long columnKey5 = t.getColumnKey("float");
        long columnKey6 = t.getColumnKey("long");
        long columnKey7 = t.getColumnKey("string");

        long[] columnsKeys = new long[]{columnKey1, columnKey2, columnKey3, columnKey4, columnKey5, columnKey6, columnKey7};

        for (int i = 0; i < columnsKeys.length; i++) {

            // All types supported addSearchIndex and removeSearchIndex.
            boolean exceptionExpected = (
                    t.getColumnType(columnsKeys[i]) != RealmFieldType.STRING &&
                            t.getColumnType(columnsKeys[i]) != RealmFieldType.INTEGER &&
                            t.getColumnType(columnsKeys[i]) != RealmFieldType.BOOLEAN &&
                            t.getColumnType(columnsKeys[i]) != RealmFieldType.DATE);

            // Tries to addSearchIndex().
            sharedRealm.beginTransaction();
            try {
                t.addSearchIndex(columnsKeys[i]);
                if (exceptionExpected) {
                    fail("Expected exception for colIndex " + columnsKeys[i]);
                }
            } catch (IllegalArgumentException ignored) {
            }
            sharedRealm.commitTransaction();

            // Tries to removeSearchIndex().
            sharedRealm.beginTransaction();
            try {
                // Currently core will do nothing if the column doesn't have a search index.
                t.removeSearchIndex(columnsKeys[i]);
                if (exceptionExpected) {
                    fail("Expected exception for colIndex " + columnsKeys[i]);
                }
            } catch (IllegalArgumentException ignored) {
            }
            sharedRealm.commitTransaction();

            // Tries to hasSearchIndex() for all columnTypes.
            t.hasSearchIndex(columnsKeys[i]);
        }
    }

