    // testing the migration of a string column to be nullable.
    public void testConvertToNullable() {
        ColumnType[] columnTypes = {BOOLEAN, DATE, DOUBLE,
                FLOAT, INTEGER, BINARY, STRING};
        for (ColumnType columnType : columnTypes) {
            // testing various combinations of column names and nullability
            String[] columnNames = {"foobar", "__TMP__0"};
            for (boolean nullable : new boolean[]{Table.NOT_NULLABLE, Table.NULLABLE}) {
                for (String columnName : columnNames) {
                    Table table = new Table();
                    long colIndex = table.addColumn(columnType, columnName, nullable);
                    table.addColumn(BOOLEAN, "bool");
                    table.addEmptyRow();
                    switch (columnType) {
                        case BOOLEAN:
                            table.setBoolean(colIndex, 0, true);
                            break;
                        case DATE:
                            table.setDate(colIndex, 0, new Date(0));
                            break;
                        case DOUBLE:
                            table.setDouble(colIndex, 0, 1.0);
                            break;
                        case FLOAT:
                            table.setFloat(colIndex, 0, 1.0f);
                            break;
                        case INTEGER:
                            table.setLong(colIndex, 0, 1);
                            break;
                        case BINARY:
                            table.setBinaryByteArray(colIndex, 0, new byte[]{0});
                            break;
                        case STRING:
                            table.setString(colIndex, 0, "Foo");
                            break;
                    }
                    try {
                        table.addEmptyRow();
                        if (columnType == BINARY) {
                            table.setBinaryByteArray(colIndex, 1, null);
                        }
                        else if (columnType == STRING) {
                            table.setString(colIndex, 1, null);
                        }
                        else {
                            table.getCheckedRow(1).setNull(colIndex);
                        }

                        if (!nullable) {
                            fail();
                        }
                    } catch (IllegalArgumentException ignored) {
                    }
                    table.removeLast();
                    assertEquals(1, table.size());

                    table.convertColumnToNullable(colIndex);
                    assertTrue(table.isColumnNullable(colIndex));
                    assertEquals(1, table.size());
                    assertEquals(2, table.getColumnCount());
                    assertTrue(table.getColumnIndex(columnName) >= 0);
                    assertEquals(colIndex, table.getColumnIndex(columnName));

                    table.addEmptyRow();
                    if (columnType == BINARY) {
                        table.setBinaryByteArray(colIndex, 0, null);
                    }
                    else if (columnType == STRING) {
                        table.setString(colIndex, 0, null);
                    }
                    else {
                        table.getCheckedRow(0).setNull(colIndex);
                    }

                    assertEquals(2, table.size());

                    if (columnType == BINARY) {
                        assertNull(table.getBinaryByteArray(colIndex, 1));
                    }
                    else if (columnType == STRING) {
                        assertNull(table.getString(colIndex, 1));
                    }
                    else {
                        assertTrue(table.getUncheckedRow(1).isNull(colIndex));
                    }
                }
            }
        }
    }

