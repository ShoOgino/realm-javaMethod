    @Test
    public void transform() {
        if (type == ObjectSchemaType.IMMUTABLE) {
            thrown.expect(UnsupportedOperationException.class);
            DOG_SCHEMA.transform(new RealmObjectSchema.Function() {
                @Override
                public void apply(DynamicRealmObject obj) {
                }
            });
            return;
        }
        String className = DOG_SCHEMA.getClassName();
        DynamicRealmObject dog1 = ((DynamicRealm)realm).createObject(className);
        dog1.setInt("age", 1);
        DynamicRealmObject dog2 = ((DynamicRealm)realm).createObject(className);
        dog2.setInt("age", 2);

        DOG_SCHEMA.transform(new RealmObjectSchema.Function() {
            @Override
            public void apply(DynamicRealmObject obj) {
                obj.setInt("age", obj.getInt("age") + 1);
            }
        });
        assertEquals(5, ((DynamicRealm)realm).where("Dog").sum("age").intValue());
    }

