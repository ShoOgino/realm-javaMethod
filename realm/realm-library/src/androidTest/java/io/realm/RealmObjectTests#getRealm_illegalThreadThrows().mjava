    @Test
    public void getRealm_illegalThreadThrows() throws Throwable {
        realm.beginTransaction();
        final AllTypes object = realm.createObject(AllTypes.class);
        realm.commitTransaction();

        final CountDownLatch threadFinished = new CountDownLatch(1);
        final AtomicReference<Throwable> throwable = new AtomicReference<>();
        final Thread thread = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    object.getRealm();
                    fail();
                } catch (Throwable t) {
                    throwable.set(t);
                    threadFinished.countDown();
                    return;
                }
                try {
                    RealmObject.getRealm(object);
                    fail();
                } catch (Throwable t) {
                    throwable.set(t);
                } finally {
                    threadFinished.countDown();
                }
            }
        });
        thread.start();
        TestHelper.awaitOrFail(threadFinished);

        final Throwable thrownInTheThread = throwable.get();
        if (!(thrownInTheThread instanceof IllegalStateException)) {
            throw thrownInTheThread;
        }
        assertEquals(BaseRealm.INCORRECT_THREAD_MESSAGE, thrownInTheThread.getMessage());
    }

