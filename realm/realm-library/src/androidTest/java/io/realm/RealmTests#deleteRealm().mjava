    @Test
    public void deleteRealm() throws InterruptedException {
        File tempDir = new File(configFactory.getRoot(), "delete_test_dir");
        File tempDirRenamed = new File(configFactory.getRoot(), "delete_test_dir_2");
        assertTrue(tempDir.mkdir());

        final RealmConfiguration configuration = configFactory.createConfigurationBuilder()
                .directory(tempDir)
                .build();

        final CountDownLatch bgThreadReadyLatch = new CountDownLatch(1);
        final CountDownLatch readyToCloseLatch = new CountDownLatch(1);
        final CountDownLatch closedLatch = new CountDownLatch(1);

        Realm realm = Realm.getInstance(configuration);
        // Creates another Realm to ensure the log files are generated.
        new Thread(new Runnable() {
            @Override
            public void run() {
                Realm realm = Realm.getInstance(configuration);
                bgThreadReadyLatch.countDown();
                TestHelper.awaitOrFail(readyToCloseLatch);
                realm.close();
                closedLatch.countDown();
            }
        }).start();

        realm.beginTransaction();
        realm.createObject(AllTypes.class);
        realm.commitTransaction();

        // Waits for bg thread's opening the same Realm.
        TestHelper.awaitOrFail(bgThreadReadyLatch);

        // A core upgrade might change the location of the files
        assertTrue(tempDir.renameTo(tempDirRenamed));
        readyToCloseLatch.countDown();

        realm.close();
        TestHelper.awaitOrFail(closedLatch);
        // Now we get log files back!
        assertTrue(tempDirRenamed.renameTo(tempDir));

        assertTrue(Realm.deleteRealm(configuration));

        assertEquals(1, tempDir.listFiles().length);

        // Lock file should never be deleted
        File lockFile = new File(configuration.getPath() + ".lock");
        assertTrue(lockFile.exists());
    }

