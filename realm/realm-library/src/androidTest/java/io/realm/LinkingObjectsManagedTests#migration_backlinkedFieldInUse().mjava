    /**
     * Table validation should fail if the backlinked column already exists in the target table.
     * The realm `backlinks-fieldInUse.realm` contains the classes `BacklinksSource` and `BacklinksTarget`
     * except that in the definition of {@code BacklinksTarget}, the field parent is defined as:
     * <pre>
     * {@code
     *     private RealmList<BacklinksSource> parents;
     * }
     * </pre>
     *
     * <p/>
     * The backlinked field does exist but it is list of links to {@code BacklinksSource} children
     * not a list of backlinks to  {@code BacklinksSource} parents of which the {@code BacklinksTarget}
     * is a child.
     */
    @Test
    public void migration_backlinkedFieldInUse() {
        final String realmName = "backlinks-fieldInUse.realm";

        RealmConfiguration realmConfig = configFactory.createConfigurationBuilder()
                .name(realmName)
                .schema(BacklinksSource.class, BacklinksTarget.class)
                .build();

        try {
            configFactory.copyRealmFromAssets(context, realmName, realmName);

            Realm localRealm = Realm.getInstance(realmConfig);
            localRealm.close();
            fail("A migration should have been required");
        } catch (IOException e) {
            fail("Failed copying realm");
        } catch (RealmMigrationNeededException expected) {
            assertThat(expected.getMessage(),
                    CoreMatchers.allOf(
                            CoreMatchers.containsString("Property 'BacklinksSource.name' has been added"),
                            CoreMatchers.containsString("Property 'BacklinksTarget.parents' has been removed")));
        } finally {
            Realm.deleteRealm(realmConfig);
        }
    }

