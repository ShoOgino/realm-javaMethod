    // finding elements [0-4] asynchronously then wait for the promise to be loaded
    // using a callback to be notified when the data is loaded
    @Test
    @RunTestInLooperThread
    public void testFindAllAsyncWithNotification() throws Throwable {
        Realm.asyncQueryExecutor.pause();

        populateTestRealm(workerThread.realm, 10);
        final RealmResults<AllTypes> realmResults = workerThread.realm.where(AllTypes.class)
                .between("columnLong", 0, 4)
                .findAllAsync();

        realmResults.addChangeListener(new RealmChangeListener() {
            @Override
            public void onChange() {
                assertTrue(realmResults.isLoaded());
                assertEquals(5, realmResults.size());
                assertTrue(realmResults.get(4).isValid());
                workerThread.signalTestCompleted.countDown();
            }
        });

        assertFalse(realmResults.isLoaded());
        assertEquals(0, realmResults.size());

        Realm.asyncQueryExecutor.resume();
    }

