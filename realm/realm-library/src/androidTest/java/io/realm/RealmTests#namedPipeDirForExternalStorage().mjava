    @Test
    public void namedPipeDirForExternalStorage() {

        // Test for https://github.com/realm/realm-java/issues/3140
        realm.close();
        realm = null;

        final File namedPipeDir = OsSharedRealm.getTemporaryDirectory();
        assertTrue(namedPipeDir.isDirectory());
        TestHelper.deleteRecursively(namedPipeDir);
        //noinspection ResultOfMethodCallIgnored
        namedPipeDir.mkdirs();

        final File externalFilesDir = context.getExternalFilesDir(null);
        final RealmConfiguration config = configFactory.createConfigurationBuilder()
                .directory(externalFilesDir)
                .name("external.realm")
                .build();
        Realm.deleteRealm(config);

        // Test if it works when the namedPipeDir is empty.
        Realm realmOnExternalStorage = Realm.getInstance(config);
        realmOnExternalStorage.close();

        assertTrue(namedPipeDir.isDirectory());

        Assume.assumeTrue("SELinux is not enforced on this device.", TestHelper.isSelinuxEnforcing());

        // Only checks the fifo file created by call, since all Realm instances share the same fifo created by
        // external_commit_helper which might not be created in the newly created dir if there are Realm instances
        // are not deleted when TestHelper.deleteRecursively(namedPipeDir) called.
        File[] files = namedPipeDir.listFiles(new FilenameFilter() {
            @Override
            public boolean accept(File dir, String name) {
                return name.matches("realm_.*cv");
            }
        });
        assertEquals(2, files.length);

        // Tests if it works when the namedPipeDir and the named pipe files already exist.
        realmOnExternalStorage = Realm.getInstance(config);
        realmOnExternalStorage.close();
    }

