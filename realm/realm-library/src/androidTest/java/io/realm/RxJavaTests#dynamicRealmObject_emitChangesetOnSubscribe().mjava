    @Test
    @RunTestInLooperThread
    public void dynamicRealmObject_emitChangesetOnSubscribe() {
        DynamicRealm dynamicRealm = DynamicRealm.getInstance(looperThread.getConfiguration());
        dynamicRealm.beginTransaction();
        final DynamicRealmObject obj = dynamicRealm.createObject(AllJavaTypes.CLASS_NAME, 42);
        dynamicRealm.commitTransaction();

        subscription = obj.<DynamicRealmObject>asChangesetObservable()
                .subscribe(change -> {
            assertTrue(change.getObject().isFrozen());
            assertEquals(change.getObject().getLong(AllJavaTypes.FIELD_ID), obj.getLong(AllJavaTypes.FIELD_ID));
            assertNull(change.getChangeset());
            disposeSuccessfulTest(dynamicRealm);
        });
    }

