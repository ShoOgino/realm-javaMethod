    @Test
    @RunTestInLooperThread
    public void executeTransactionAsync_onErrorCallerRealmClosed() throws Throwable {
        final Realm realm = looperThread.realm;
        final RuntimeException runtimeException = new RuntimeException("Oh! What a Terrible Failure");
        assertEquals(0, realm.where(Owner.class).count());

        realm.executeTransactionAsync(new Realm.Transaction() {
            @Override
            public void execute(Realm realm) {
                throw runtimeException;
            }
        }, new Realm.Transaction.OnError() {
            @Override
            public void onError(Throwable error) {
                assertTrue(realm.isClosed());
                Realm newRealm = Realm.getInstance(looperThread.realmConfiguration);
                assertEquals(0, newRealm.where(Owner.class).count());
                assertNull(newRealm.where(Owner.class).findFirst());
                assertEquals(runtimeException, error);
                newRealm.close();
                looperThread.testComplete();
            }
        });
        realm.close();
    }

