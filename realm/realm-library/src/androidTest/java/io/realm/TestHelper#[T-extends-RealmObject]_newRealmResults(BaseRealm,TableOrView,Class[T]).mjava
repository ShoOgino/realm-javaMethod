    /**
     * Creates a {@link RealmResults} instance.
     * This helper method is useful to create a mocked {@link RealmResults}.
     *
     * @param realm a {@link Realm} or a {@link DynamicRealm} instance.
     * @param table a {@link Table} or a {@link io.realm.internal.TableView} instance.
     * @param tableClass a Class of Table.
     * @return a created {@link RealmResults} instance.
     */
    public static <T extends RealmObject> RealmResults<T> newRealmResults(
            BaseRealm realm, TableOrView table, Class<T> tableClass) {
        //noinspection TryWithIdenticalCatches
        try {
            final Constructor<RealmResults> c = RealmResults.class.getDeclaredConstructor(
                    BaseRealm.class, TableOrView.class, Class.class);
            c.setAccessible(true);
            //noinspection unchecked
            return c.newInstance(realm, table, tableClass);
        } catch (NoSuchMethodException e) {
            throw new RuntimeException(e);
        } catch (InstantiationException e) {
            throw new RuntimeException(e);
        } catch (IllegalAccessException e) {
            throw new RuntimeException(e);
        } catch (InvocationTargetException e) {
            throw new RuntimeException(e);
        }
    }

