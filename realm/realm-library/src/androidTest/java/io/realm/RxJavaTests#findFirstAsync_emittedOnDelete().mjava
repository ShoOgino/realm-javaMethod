    @Test
    @RunTestInLooperThread
    public void findFirstAsync_emittedOnDelete() {
        realm.beginTransaction();
        realm.createObject(AllTypes.class);
        realm.commitTransaction();

        subscription = realm.where(AllTypes.class).findFirstAsync().<AllTypes>asFlowable().subscribe(rxObject -> {
            assertTrue(rxObject.isFrozen());
            if (!rxObject.isLoaded()) {
                //noinspection UnnecessaryReturnStatement
                return;
            } else if (rxObject.isValid()) {
                realm.executeTransactionAsync(r -> r.delete(AllTypes.class));
            } else if (!rxObject.isValid()) {
                disposeSuccessfulTest(realm);
            }
        });
    }

