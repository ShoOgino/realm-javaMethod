    @Test
    @RunTestInLooperThread
    public void findAllSortedAsync_listOnSubObjectField() {
        Realm realm = looperThread.realm;
        String[] fieldNames = new String[2];
        fieldNames[0] = AllTypes.FIELD_REALMOBJECT + "." + Dog.FIELD_AGE;
        fieldNames[1] = AllTypes.FIELD_REALMOBJECT + "." + Dog.FIELD_AGE;

        Sort[] sorts = new Sort[2];
        sorts[0] = Sort.ASCENDING;
        sorts[1] = Sort.ASCENDING;

        populateTestRealm(realm, TEST_DATA_SIZE);
        RealmResults<AllTypes> results = realm.where(AllTypes.class)
                .findAllSortedAsync(fieldNames, sorts);
        looperThread.keepStrongReference.add(results);
        results.addChangeListener(new RealmChangeListener<RealmResults<AllTypes>>() {
            @Override
            public void onChange(RealmResults<AllTypes> results) {
                assertEquals(0, results.get(0).getColumnRealmObject().getAge());
                assertEquals(TEST_DATA_SIZE - 1, results.get(TEST_DATA_SIZE - 1).getColumnRealmObject().getAge());
                looperThread.testComplete();
            }
        });
    }

