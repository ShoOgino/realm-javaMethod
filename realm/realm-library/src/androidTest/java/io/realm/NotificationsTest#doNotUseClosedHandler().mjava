    // Tests that if the same configuration is used on 2 different Looper threads that each gets its own Handler. This
    // prevents commitTransaction from accidentally posting messages to Handlers which might reference a closed Realm.
    @Test
    public void doNotUseClosedHandler() throws InterruptedException {
        final CountDownLatch handlerNotified = new CountDownLatch(1);
        final CountDownLatch backgroundThread1Started = new CountDownLatch(1);
        final CountDownLatch backgroundThread2Closed = new CountDownLatch(1);

        // Create Handler on Thread1 by opening a Realm instance
        new Thread("thread1") {

            @Override
            public void run() {
                Looper.prepare();
                final Realm realm = Realm.getInstance(realmConfig);
                RealmChangeListener<Realm> listener = new RealmChangeListener<Realm>() {
                    @Override
                    public void onChange(Realm object) {
                        realm.close();
                        handlerNotified.countDown();
                    }
                };
                realm.addChangeListener(listener);
                backgroundThread1Started.countDown();
                Looper.loop();
            }
        }.start();

        // Create Handler on Thread2 for the same Realm path and close the Realm instance again.
        new Thread("thread2") {
            @Override
            public void run() {
                Looper.prepare();
                Realm realm = Realm.getInstance(realmConfig);
                RealmChangeListener<Realm> listener = new RealmChangeListener<Realm>() {
                    @Override
                    public void onChange(Realm object) {
                        fail("This handler should not be notified");
                    }
                };
                realm.addChangeListener(listener);
                realm.close();
                backgroundThread2Closed.countDown();
                Looper.loop();
            }

        }.start();

        TestHelper.awaitOrFail(backgroundThread1Started);
        TestHelper.awaitOrFail(backgroundThread2Closed);
        Realm realm = Realm.getInstance(realmConfig);
        realm.beginTransaction();
        realm.commitTransaction();
        // Any REALM_CHANGED message should now only reach the open Handler on Thread1
        try {
            // TODO: Waiting 5 seconds is not a reliable condition. Figure out a better way for this.
            if (!handlerNotified.await(5, TimeUnit.SECONDS)) {
                fail("Handler didn't receive message");
            }
        } finally {
            realm.close();
        }
    }

