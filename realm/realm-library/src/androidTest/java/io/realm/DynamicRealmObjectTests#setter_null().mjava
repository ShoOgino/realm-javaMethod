    @Test
    public void setter_null() {
        realm.beginTransaction();
        NullTypes obj = realm.createObject(NullTypes.class, 0);
        DynamicRealmObject dObj = new DynamicRealmObject(obj);
        try {
            for (SupportedType type : SupportedType.values()) {
                switch (type) {
                    case OBJECT:
                        NullTypes childObj = new NullTypes();
                        childObj.setId(1);
                        DynamicRealmObject dynamicChildObject = new DynamicRealmObject(realm.copyToRealm(childObj));
                        dObj.setObject(NullTypes.FIELD_OBJECT_NULL, dynamicChildObject);
                        assertNotNull(dObj.getObject(NullTypes.FIELD_OBJECT_NULL));
                        dObj.setNull(NullTypes.FIELD_OBJECT_NULL);
                        assertNull(dObj.getObject(NullTypes.FIELD_OBJECT_NULL));
                        break;
                    case LIST:
                        try {
                            dObj.setNull(NullTypes.FIELD_LIST_NULL);
                            fail();
                        } catch (IllegalArgumentException ignored) {
                        }
                        break;
                    case LIST_INTEGER:
                        try {
                            dObj.setNull(NullTypes.FIELD_INTEGER_LIST_NULL);
                            fail();
                        } catch (IllegalArgumentException ignored) {
                        }
                        break;
                    case LIST_STRING:
                        try {
                            dObj.setNull(NullTypes.FIELD_STRING_LIST_NULL);
                            fail();
                        } catch (IllegalArgumentException ignored) {
                        }
                        break;
                    case LIST_BOOLEAN:
                        try {
                            dObj.setNull(NullTypes.FIELD_BOOLEAN_LIST_NULL);
                            fail();
                        } catch (IllegalArgumentException ignored) {
                        }
                        break;
                    case LIST_FLOAT:
                        try {
                            dObj.setNull(NullTypes.FIELD_FLOAT_LIST_NULL);
                            fail();
                        } catch (IllegalArgumentException ignored) {
                        }
                        break;
                    case LIST_DOUBLE:
                        try {
                            dObj.setNull(NullTypes.FIELD_DOUBLE_LIST_NULL);
                            fail();
                        } catch (IllegalArgumentException ignored) {
                        }
                        break;
                    case LIST_BINARY:
                        try {
                            dObj.setNull(NullTypes.FIELD_BINARY_LIST_NULL);
                            fail();
                        } catch (IllegalArgumentException ignored) {
                        }
                        break;
                    case LIST_DATE:
                        try {
                            dObj.setNull(NullTypes.FIELD_DATE_LIST_NULL);
                            fail();
                        } catch (IllegalArgumentException ignored) {
                        }
                        break;
                    case LIST_DECIMAL128:
                        try {
                            dObj.setNull(NullTypes.FIELD_DECIMAL128_LIST_NULL);
                            fail();
                        } catch (IllegalArgumentException ignored) {
                        }
                        break;
                    case LIST_OBJECT_ID:
                        try {
                            dObj.setNull(NullTypes.FIELD_OBJECT_ID_LIST_NULL);
                            fail();
                        } catch (IllegalArgumentException ignored) {
                        }
                        break;
                    case BOOLEAN:
                        dObj.setNull(NullTypes.FIELD_BOOLEAN_NULL);
                        assertTrue(dObj.isNull(NullTypes.FIELD_BOOLEAN_NULL));
                        break;
                    case BYTE:
                        dObj.setNull(NullTypes.FIELD_BYTE_NULL);
                        assertTrue(dObj.isNull(NullTypes.FIELD_BYTE_NULL));
                        break;
                    case SHORT:
                        dObj.setNull(NullTypes.FIELD_SHORT_NULL);
                        assertTrue(dObj.isNull(NullTypes.FIELD_SHORT_NULL));
                        break;
                    case INT:
                        dObj.setNull(NullTypes.FIELD_INTEGER_NULL);
                        assertTrue(dObj.isNull(NullTypes.FIELD_INTEGER_NULL));
                        break;
                    case LONG:
                        dObj.setNull(NullTypes.FIELD_LONG_NULL);
                        assertTrue(dObj.isNull(NullTypes.FIELD_LONG_NULL));
                        break;
                    case FLOAT:
                        dObj.setNull(NullTypes.FIELD_FLOAT_NULL);
                        assertTrue(dObj.isNull(NullTypes.FIELD_FLOAT_NULL));
                        break;
                    case DOUBLE:
                        dObj.setNull(NullTypes.FIELD_DOUBLE_NULL);
                        assertTrue(dObj.isNull(NullTypes.FIELD_DOUBLE_NULL));
                        break;
                    case STRING:
                        dObj.setNull(NullTypes.FIELD_STRING_NULL);
                        assertTrue(dObj.isNull(NullTypes.FIELD_STRING_NULL));
                        break;
                    case BINARY:
                        dObj.setNull(NullTypes.FIELD_BYTES_NULL);
                        assertTrue(dObj.isNull(NullTypes.FIELD_BYTES_NULL));
                        break;
                    case DATE:
                        dObj.setNull(NullTypes.FIELD_DATE_NULL);
                        assertTrue(dObj.isNull(NullTypes.FIELD_DATE_NULL));
                        break;
                    case DECIMAL128:
                        dObj.setNull(NullTypes.FIELD_DECIMAL128_NULL);
                        assertTrue(dObj.isNull(NullTypes.FIELD_DECIMAL128_NULL));
                        break;
                    case OBJECT_ID:
                        dObj.setNull(NullTypes.FIELD_OBJECT_ID_NULL);
                        assertTrue(dObj.isNull(NullTypes.FIELD_OBJECT_ID_NULL));
                        break;
                    default:
                        fail("Unknown type: " + type);
                }
            }
        } finally {
            realm.cancelTransaction();
        }
    }

