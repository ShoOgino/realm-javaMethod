    @Test
    public void copyToRealm_duplicatedPrimaryKeyThrows() {
        final String[] PRIMARY_KEY_TYPES = { "String", "BoxedLong", "long" };
        for (String className : PRIMARY_KEY_TYPES) {
            String expectedKey = null;
            try {
                realm.beginTransaction();
                switch (className) {
                    case "String": {
                        expectedKey = "foo";
                        PrimaryKeyAsString obj = new PrimaryKeyAsString("foo");
                        realm.copyToRealm(obj);
                        realm.copyToRealm(obj);
                        break;
                    }
                    case "BoxedLong": {
                        expectedKey = Long.toString(Long.MIN_VALUE);
                        PrimaryKeyAsBoxedLong obj = new PrimaryKeyAsBoxedLong(Long.MIN_VALUE, "boxedlong");
                        realm.copyToRealm(obj);
                        realm.copyToRealm(obj);
                        break;
                    }
                    case "long":
                        expectedKey = Long.toString(Long.MAX_VALUE);
                        PrimaryKeyAsLong obj = new PrimaryKeyAsLong(Long.MAX_VALUE);
                        realm.copyToRealm(obj);
                        realm.copyToRealm(obj);
                        break;
                    default:
                }
                fail("Null value as primary key already exists, but wasn't detected correctly");
            } catch (RealmPrimaryKeyConstraintException expected) {
                assertTrue("Exception message is: " + expected.getMessage(),
                        expected.getMessage().contains("with an existing primary key value '"+ expectedKey +"'"));
            } finally {
                realm.cancelTransaction();
            }
        }
    }

