    public boolean methodWrongThread(final boolean callGetter) throws ExecutionException, InterruptedException {
        testRealm = Realm.getInstance(getContext());
        testRealm.beginTransaction();
        testRealm.createObject(AllTypes.class);
        testRealm.commitTransaction();
        final AllTypes allTypes = testRealm.where(AllTypes.class).findFirst();
        ExecutorService executorService = Executors.newSingleThreadExecutor();
        Future<Boolean> future = executorService.submit(new Callable<Boolean>() {
            @Override
            public Boolean call() throws Exception {
                try {
                    if (callGetter) {
                        allTypes.getColumnFloat();
                    } else {
                        allTypes.setColumnFloat(1.0f);
                    }
                    return false;
                } catch (IllegalStateException ignored) {
                    return true;
                }
            }
        });

        Boolean result = future.get();
        testRealm.close();
        return result;
    }

