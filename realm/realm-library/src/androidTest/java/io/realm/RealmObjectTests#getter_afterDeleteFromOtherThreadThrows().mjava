    @Test
    public void getter_afterDeleteFromOtherThreadThrows() {
        realm = Realm.getInstance(configFactory.createConfiguration());
        final CountDownLatch bgRealmDone = new CountDownLatch(1);

        realm.beginTransaction();
        final AllTypes obj = realm.createObject(AllTypes.class);
        realm.commitTransaction();

        new Thread(new Runnable() {
            @Override
            public void run() {
                Realm bgRealm = Realm.getInstance(realm.getConfiguration());
                bgRealm.beginTransaction();
                bgRealm.delete(AllTypes.class);
                bgRealm.commitTransaction();
                bgRealm.close();
                bgRealmDone.countDown();
            }
        }).start();
        TestHelper.awaitOrFail(bgRealmDone);
        realm.waitForChange();

        // Object should no longer be available
        assertFalse(obj.isValid());
        try {
            obj.getColumnLong();
            fail();
        } catch (IllegalStateException ignored) {
        }
    }

