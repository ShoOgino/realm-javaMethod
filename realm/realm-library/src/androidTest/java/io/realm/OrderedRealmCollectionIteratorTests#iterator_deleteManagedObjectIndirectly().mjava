    @Test
    public void iterator_deleteManagedObjectIndirectly() {
        realm.beginTransaction();
        Iterator<AllJavaTypes> it = collection.iterator();
        it.next(); // First item is a cyclic reference to the entire graph, avoid deleting that.
        it.next().deleteFromRealm();
        realm.commitTransaction();

        switch (collectionClass) {
            // Snapshot
            case REALMRESULTS_SNAPSHOT_RESULTS_BASE:
            case REALMRESULTS_SNAPSHOT_LIST_BASE:
                assertFalse(collection.get(1).isValid());
                break;
            // Managed RealmLists are directly associated with their table. Thus any indirect deletion will
            // also remove it from the LinkView.
            case MANAGED_REALMLIST:
            case REALMRESULTS:
                assertEquals(TEST_SIZE - 1, collection.size());
                break;

            // Unmanaged collections are not affected by changes to Realm.
            case UNMANAGED_REALMLIST:
                assertEquals(TEST_SIZE, collection.size());
                break;

            default:
                fail();
        }
    }

