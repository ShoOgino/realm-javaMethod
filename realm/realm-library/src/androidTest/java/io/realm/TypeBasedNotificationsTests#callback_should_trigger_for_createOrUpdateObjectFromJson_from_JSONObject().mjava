    //UC 0 using Realm.copyToRealmOrUpdate
    @Test
    @RunTestInLooperThread
    public void callback_should_trigger_for_createOrUpdateObjectFromJson_from_JSONObject() throws JSONException {
        final Realm realm = looperThread.realm;
        realm.addChangeListener(new RealmChangeListener<Realm>() {
            @Override
            public void onChange(Realm object) {
                realm.handler.post(new Runnable() {
                    @Override
                    public void run() {
                        assertEquals(1, typebasedCommitInvocations.get());
                        looperThread.testComplete();
                    }
                });
            }
        });

        AllTypesPrimaryKey obj = new AllTypesPrimaryKey();
        obj.setColumnLong(1);
        obj.setColumnString("Foo");

        realm.beginTransaction();
        realm.copyToRealm(obj);
        realm.commitTransaction();


        JSONObject json = new JSONObject();
        json.put("columnLong", 1);
        json.put("columnString", "bar");

        realm.beginTransaction();
        final AllTypesPrimaryKey newObj = realm.createOrUpdateObjectFromJson(AllTypesPrimaryKey.class, json);
        realm.commitTransaction();

        newObj.addChangeListener(new RealmChangeListener<AllTypesPrimaryKey>() {
            @Override
            public void onChange(AllTypesPrimaryKey object) {
                assertEquals(1, realm.where(AllTypesPrimaryKey.class).count());
                assertEquals("bar", newObj.getColumnString());
                assertTrue(newObj.getColumnBoxedBoolean());
                typebasedCommitInvocations.incrementAndGet();
            }
        });

        realm.beginTransaction();
        newObj.setColumnBoxedBoolean(Boolean.TRUE);
        realm.commitTransaction();
    }

