    @Test
    public void createWithPrimaryKeyField_string() {
        final String[] validClassNames = {
                TestHelper.getRandomString(1),
                "Darby",
                TestHelper.getRandomString(Table.CLASS_NAME_MAX_LENGTH)
        };

        if (type == SchemaType.IMMUTABLE) {
            thrown.expect(UnsupportedOperationException.class);
            realmSchema.createWithPrimaryKeyField(validClassNames[0], "pkField", String.class);
            return;
        }

        for (String validClassName : validClassNames) {
            // Not nullable
            RealmObjectSchema objectSchema = realmSchema.createWithPrimaryKeyField(validClassName,
                    "pkField", String.class, FieldAttribute.REQUIRED);
            assertEquals("pkField", objectSchema.getPrimaryKey());
            assertEquals(RealmFieldType.STRING, objectSchema.getFieldType("pkField"));
            assertFalse(objectSchema.isNullable("pkField"));
            // Search index is not added to primary key string columns. Will compute key directly from primary key value.
            // since Core6.0.0-alpha.25
            assertFalse(objectSchema.hasIndex("pkField"));

            realmSchema.remove(validClassName);

            // Nullable
            objectSchema = realmSchema.createWithPrimaryKeyField(validClassName,
                    "pkField", String.class);
            assertEquals("pkField", objectSchema.getPrimaryKey());
            assertEquals(RealmFieldType.STRING, objectSchema.getFieldType("pkField"));
            assertTrue(objectSchema.isNullable("pkField"));
            assertFalse(objectSchema.hasIndex("pkField"));
        }
    }

