    @Test
    public void sort_usingChildObject() {
        if (isSnapshot(collectionClass)) {
            thrown.expect(UnsupportedOperationException.class);
        }
        OrderedRealmCollection<AllJavaTypes> resultList = collection;
        OrderedRealmCollection<AllJavaTypes> sortedList = createCollection(collectionClass);
        sortedList = sortedList.sort(AllJavaTypes.FIELD_OBJECT + "." + AllJavaTypes.FIELD_LONG, Sort.DESCENDING);
        assertEquals("Should have same size", resultList.size(), sortedList.size());
        assertEquals(TEST_SIZE, sortedList.size());
        assertEquals("First excepted to be last", resultList.first().getFieldLong(), sortedList.last().getFieldLong());

        sortedList = sortedList.sort(AllJavaTypes.FIELD_OBJECT + "." + AllJavaTypes.FIELD_LONG, Sort.ASCENDING);
        assertEquals(TEST_SIZE, sortedList.size());
        assertEquals("First excepted to be first", resultList.first().getFieldLong(), sortedList.first().getFieldLong());
        assertEquals("Last excepted to be last", resultList.last().getFieldLong(), sortedList.last().getFieldLong());

        sortedList = sortedList.sort(AllJavaTypes.FIELD_OBJECT + "." + AllJavaTypes.FIELD_LONG, Sort.DESCENDING);
        assertEquals(TEST_SIZE, sortedList.size());
    }

