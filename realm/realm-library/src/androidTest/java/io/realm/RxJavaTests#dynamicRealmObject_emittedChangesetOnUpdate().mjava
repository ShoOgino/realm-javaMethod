    @Test
    @RunTestInLooperThread
    public void dynamicRealmObject_emittedChangesetOnUpdate() {
        final AtomicInteger subscriberCalled = new AtomicInteger(0);
        DynamicRealm realm = DynamicRealm.getInstance(looperThread.getConfiguration());
        looperThread.closeAfterTest(realm);
        realm.beginTransaction();
        final DynamicRealmObject obj = realm.createObject(AllTypes.CLASS_NAME);
        realm.commitTransaction();

        subscription = obj.asChangesetObservable().subscribe(new Consumer<ObjectChange<RealmObject>>() {
            @Override
            public void accept(ObjectChange<RealmObject> change) throws Exception {
                if (subscriberCalled.incrementAndGet() == 2) {
                    assertNotNull(change.getChangeset());
                    assertTrue(change.getChangeset().isFieldChanged(AllTypes.FIELD_LONG));
                    looperThread.testComplete();
                }
            }
        });
        realm.beginTransaction();
        obj.setLong(AllTypes.FIELD_LONG, 1);
        realm.commitTransaction();
    }

