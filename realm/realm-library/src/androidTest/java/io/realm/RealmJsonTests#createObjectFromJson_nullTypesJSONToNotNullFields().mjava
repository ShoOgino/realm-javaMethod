    /**
     * If JSON has a field with value null, and corresponding object's field is not nullable,
     * an exception should be throw.
     */
    @Test
    public void createObjectFromJson_nullTypesJSONToNotNullFields() throws IOException, JSONException {
        String json = TestHelper.streamToString(TestHelper.loadJsonFromAssets(context, "nulltypes_invalid.json"));
        JSONArray array = new JSONArray(json);
        realm.beginTransaction();

        // 1 String
        try {
            realm.createObjectFromJson(NullTypes.class, array.getJSONObject(0));
            fail();
        } catch (RealmException expected) {
            assertTrue(expected.getCause() instanceof IllegalArgumentException);
        }
        // 2 Bytes
        try {
            realm.createObjectFromJson(NullTypes.class, array.getJSONObject(1));
            fail();
        } catch (RealmException expected) {
            assertTrue(expected.getCause() instanceof IllegalArgumentException);
        }
        // 3 Boolean
        try {
            realm.createObjectFromJson(NullTypes.class, array.getJSONObject(2));
            fail();
        } catch (RealmException expected) {
            assertTrue(expected.getCause() instanceof IllegalArgumentException);
        }
        // 4 Byte
        try {
            realm.createObjectFromJson(NullTypes.class, array.getJSONObject(3));
            fail();
        } catch (RealmException expected) {
            assertTrue(expected.getCause() instanceof IllegalArgumentException);
        }
        // 5 Short
        try {
            realm.createObjectFromJson(NullTypes.class, array.getJSONObject(4));
            fail();
        } catch (RealmException expected) {
            assertTrue(expected.getCause() instanceof IllegalArgumentException);
        }
        // 6 Integer
        try {
            realm.createObjectFromJson(NullTypes.class, array.getJSONObject(5));
            fail();
        } catch (RealmException expected) {
            assertTrue(expected.getCause() instanceof IllegalArgumentException);
        }
        // 7 Long
        try {
            realm.createObjectFromJson(NullTypes.class, array.getJSONObject(6));
            fail();
        } catch (RealmException expected) {
            assertTrue(expected.getCause() instanceof IllegalArgumentException);
        }
        // 8 Float
        try {
            realm.createObjectFromJson(NullTypes.class, array.getJSONObject(7));
            fail();
        } catch (RealmException expected) {
            assertTrue(expected.getCause() instanceof IllegalArgumentException);
        }
        // 9 Double
        try {
            realm.createObjectFromJson(NullTypes.class, array.getJSONObject(8));
            fail();
        } catch (RealmException expected) {
            assertTrue(expected.getCause() instanceof IllegalArgumentException);
        }
        // 10 Date
        try {
            realm.createObjectFromJson(NullTypes.class, array.getJSONObject(9));
            fail();
        } catch (RealmException expected) {
            assertTrue(expected.getCause() instanceof IllegalArgumentException);
        }

        realm.cancelTransaction();
    }

