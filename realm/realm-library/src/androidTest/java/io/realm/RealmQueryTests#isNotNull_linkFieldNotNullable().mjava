    // Test isNotNull on link's not-nullable field. should throw
    @Test
    public void isNotNull_linkFieldNotNullable() {
        TestHelper.populateTestRealmForNullTests(realm);

        // 1 String
        try {
            realm.where(NullTypes.class)
                    .isNotNull(NullTypes.FIELD_OBJECT_NULL + "." + NullTypes.FIELD_STRING_NOT_NULL);
            fail();
        } catch (IllegalArgumentException ignored) {
        }
        // 2 Bytes
        try {
            realm.where(NullTypes.class)
                    .isNotNull(NullTypes.FIELD_OBJECT_NULL + "." + NullTypes.FIELD_BYTES_NOT_NULL);
            fail();
        } catch (IllegalArgumentException ignored) {
        }
        // 3 Boolean
        try {
            realm.where(NullTypes.class)
                    .isNotNull(NullTypes.FIELD_OBJECT_NULL + "." + NullTypes.FIELD_BOOLEAN_NOT_NULL);
            fail();
        } catch (IllegalArgumentException ignored) {
        }
        // 4 Byte
        try {
            realm.where(NullTypes.class)
                    .isNotNull(NullTypes.FIELD_OBJECT_NULL + "." + NullTypes.FIELD_BYTE_NOT_NULL);
            fail();
        } catch (IllegalArgumentException ignored) {
        }
        // 5 Short
        try {
            realm.where(NullTypes.class)
                    .isNotNull(NullTypes.FIELD_OBJECT_NULL + "." + NullTypes.FIELD_SHORT_NOT_NULL);
            fail();
        } catch (IllegalArgumentException ignored) {
        }
        // 6 Integer
        try {
            realm.where(NullTypes.class)
                    .isNotNull(NullTypes.FIELD_OBJECT_NULL + "." + NullTypes.FIELD_INTEGER_NOT_NULL);
            fail();
        } catch (IllegalArgumentException ignored) {
        }
        // 7 Long
        try {
            realm.where(NullTypes.class)
                    .isNotNull(NullTypes.FIELD_OBJECT_NULL + "." + NullTypes.FIELD_LONG_NOT_NULL);
            fail();
        } catch (IllegalArgumentException ignored) {
        }
        // 8 Float
        try {
            realm.where(NullTypes.class)
                    .isNotNull(NullTypes.FIELD_OBJECT_NULL + "." + NullTypes.FIELD_FLOAT_NOT_NULL);
            fail();
        } catch (IllegalArgumentException ignored) {
        }
        // 9 Double
        try {
            realm.where(NullTypes.class)
                    .isNotNull(NullTypes.FIELD_OBJECT_NULL + "." + NullTypes.FIELD_DOUBLE_NOT_NULL);
            fail();
        } catch (IllegalArgumentException ignored) {
        }
        // 10 Date
        try {
            realm.where(NullTypes.class)
                    .isNotNull(NullTypes.FIELD_OBJECT_NULL + "." + NullTypes.FIELD_DATE_NOT_NULL);
            fail();
        } catch (IllegalArgumentException ignored) {
        }
        // 11 Object skipped, RealmObject is always nullable.
    }

