    @Test
    @RunTestInLooperThread
    public void removeAllChangeListeners() {
        collection = prepareRealmListInLooperThread();
        Realm realm = looperThread.getRealm();
        final AtomicInteger listenerCalledCount = new AtomicInteger(0);
        collection.addChangeListener(new RealmChangeListener<RealmList<Dog>>() {
            @Override
            public void onChange(RealmList<Dog> element) {
                fail();
            }
        });
        collection.addChangeListener(new OrderedRealmCollectionChangeListener<RealmList<Dog>>() {
            @Override
            public void onChange(RealmList<Dog> collection, OrderedCollectionChangeSet changes) {
                fail();
            }
        });

        collection.removeAllChangeListeners();

        // This one is added after removal, so it should be triggered.
        collection.addChangeListener(new RealmChangeListener<RealmList<Dog>>() {
            @Override
            public void onChange(RealmList<Dog> element) {
                listenerCalledCount.incrementAndGet();
                looperThread.testComplete();
            }
        });

        // This should trigger the listener if there is any.
        realm.beginTransaction();
        collection.get(0).setAge(42);
        realm.commitTransaction();

        assertEquals(1, listenerCalledCount.get());
    }

