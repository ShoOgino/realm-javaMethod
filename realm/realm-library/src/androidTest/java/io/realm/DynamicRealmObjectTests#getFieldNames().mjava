    @Test
    public void getFieldNames() {
        String[] expectedKeys = {AllJavaTypes.FIELD_STRING, AllJavaTypes.FIELD_ID, AllJavaTypes.FIELD_LONG,
                AllJavaTypes.FIELD_SHORT, AllJavaTypes.FIELD_INT, AllJavaTypes.FIELD_BYTE, AllJavaTypes.FIELD_FLOAT,
                AllJavaTypes.FIELD_DOUBLE, AllJavaTypes.FIELD_BOOLEAN, AllJavaTypes.FIELD_DATE,
                AllJavaTypes.FIELD_BINARY, AllJavaTypes.FIELD_OBJECT, AllJavaTypes.FIELD_LIST,
                AllJavaTypes.FIELD_STRING_LIST, AllJavaTypes.FIELD_BINARY_LIST, AllJavaTypes.FIELD_BOOLEAN_LIST,
                AllJavaTypes.FIELD_LONG_LIST, AllJavaTypes.FIELD_INTEGER_LIST, AllJavaTypes.FIELD_SHORT_LIST,
                AllJavaTypes.FIELD_BYTE_LIST, AllJavaTypes.FIELD_DOUBLE_LIST, AllJavaTypes.FIELD_FLOAT_LIST,
                AllJavaTypes.FIELD_DATE_LIST};
        String[] keys = dObjTyped.getFieldNames();
        // After the stable ID support, primary key field will be inserted first before others. So even FIELD_STRING is
        // the first defined field in the class, it will be inserted after FIELD_ID.
        // See ObjectStore::add_initial_columns #if REALM_HAVE_SYNC_STABLE_IDS branch.
        assertEquals(expectedKeys.length, keys.length);
        assertThat(Arrays.asList(expectedKeys), Matchers.hasItems(keys));
    }

