    private void populateNoPrimaryKeyNullTypesRows(Realm testRealm, int dataSize) {
        testRealm.beginTransaction();
        testRealm.deleteAll();
        for (int i = 0; i < dataSize; ++i) {
            NoPrimaryKeyNullTypes noPrimaryKeyNullTypes = testRealm.createObject(NoPrimaryKeyNullTypes.class);
            noPrimaryKeyNullTypes.setFieldStringNull((i % 3) == 0 ? null : "test data " + i);
            noPrimaryKeyNullTypes.setFieldStringNotNull("test data " + i);
            noPrimaryKeyNullTypes.setFieldBooleanNull((i % 3) == 0 ? null : (i % 3) == 1);
            noPrimaryKeyNullTypes.setFieldBooleanNotNull((i % 3) == 0);
            noPrimaryKeyNullTypes.setFieldByteNull((i % 3) == 0 ? null : (byte) i);
            noPrimaryKeyNullTypes.setFieldByteNotNull((byte) i);
            noPrimaryKeyNullTypes.setFieldShortNull((i % 3) == 0 ? null : (short) i);
            noPrimaryKeyNullTypes.setFieldShortNotNull((short) i);
            noPrimaryKeyNullTypes.setFieldIntegerNull((i % 3) == 0 ? null : i);
            noPrimaryKeyNullTypes.setFieldIntegerNotNull(i);
            noPrimaryKeyNullTypes.setFieldLongNull((i % 3) == 0 ? null : (long) i);
            noPrimaryKeyNullTypes.setFieldLongNotNull((long) i);
            noPrimaryKeyNullTypes.setFieldFloatNull((i % 3) == 0 ? null : 1.2345f + i);
            noPrimaryKeyNullTypes.setFieldFloatNotNull(1.2345f + i);
            noPrimaryKeyNullTypes.setFieldDoubleNull((i % 3) == 0 ? null : Math.PI + i);
            noPrimaryKeyNullTypes.setFieldDoubleNotNull(Math.PI + i);
            noPrimaryKeyNullTypes.setFieldDateNull((i % 3) == 0 ? null : new Date(DECADE_MILLIS * (i - (dataSize / 2))));
            noPrimaryKeyNullTypes.setFieldDateNotNull(new Date(DECADE_MILLIS * (i - (dataSize / 2))));
        }
        testRealm.commitTransaction();
    }

