    @Test
    @RunTestInLooperThread
    @SuppressWarnings("ReferenceEquality")
    public void unsubscribe_fromOtherThread() {
        subscription = realm.asFlowable()
            .doFinally(() -> {
                disposeSuccessfulTest(realm);
            })
            .subscribe(new Consumer<Realm>() {
                @Override
                public void accept(Realm rxRealm) {
                    assertTrue(rxRealm.isFrozen());
                    assertEquals(rxRealm.getPath(), realm.getPath());
                    assertEquals(rxRealm.sharedRealm.getVersionID(), realm.sharedRealm.getVersionID());
                    looperThread.postRunnable(() -> {
                        Thread t = new Thread(() -> subscription.dispose());
                        t.start();
                        looperThread.keepStrongReference(t);
                    });
                }
            });
    }

