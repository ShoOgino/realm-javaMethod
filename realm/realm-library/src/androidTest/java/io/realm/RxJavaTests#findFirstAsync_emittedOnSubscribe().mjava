    @Test
    @RunTestInLooperThread
    public void findFirstAsync_emittedOnSubscribe() {
        realm.beginTransaction();
        realm.createObject(AllTypes.class).setColumnLong(42);
        realm.commitTransaction();

        final AllTypes asyncObj = realm.where(AllTypes.class).findFirstAsync();
        subscription = asyncObj.<AllTypes>asFlowable().subscribe(rxObject -> {
            assertTrue(rxObject.isFrozen());
            // Because the subscription is run asynchronously. There is a chance
            // the query resolved before the subscription triggers.
            // This means it is not deterministic what state is first emitted here.
            // It can either be a fully loaded object or one that is still loading.
            if (rxObject.isLoaded()) {
                assertTrue(rxObject.isValid());
                assertEquals(42, rxObject.getColumnLong());
            } else {
                assertFalse(rxObject.isValid());
            }
            disposeSuccessfulTest(realm);
        });
    }

