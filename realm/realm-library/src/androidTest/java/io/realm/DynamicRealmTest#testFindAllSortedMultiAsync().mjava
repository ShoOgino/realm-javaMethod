    public void testFindAllSortedMultiAsync() {
        final RealmResults[] keepStrongReferences = new RealmResults[2];
        final CountDownLatch callback1 = new CountDownLatch(1);
        final CountDownLatch callback2 = new CountDownLatch(1);

        final HandlerThread handlerThread = new HandlerThread("LooperThread");
        handlerThread.start();
        Handler handler = new Handler(handlerThread.getLooper());

        handler.post(new Runnable() {
            @Override
            public void run() {
                final DynamicRealm realm = DynamicRealm.getInstance(defaultConfig);

                realm.beginTransaction();
                for (int i = 0; i < 5; ) {
                    DynamicRealmObject allTypes = realm.createObject(AllTypes.CLASS_NAME);
                    allTypes.set(AllTypes.FIELD_LONG, i);
                    allTypes.set(AllTypes.FIELD_STRING, "data " + i % 3);

                    allTypes = realm.createObject(AllTypes.CLASS_NAME);
                    allTypes.set(AllTypes.FIELD_LONG, i);
                    allTypes.set(AllTypes.FIELD_STRING, "data " + (++i % 3));
                }
                realm.commitTransaction();

                final RealmResults<DynamicRealmObject> realmResults1 = realm.where(AllTypes.CLASS_NAME)
                        .findAllSortedAsync(new String[]{AllTypes.FIELD_STRING, AllTypes.FIELD_LONG},
                                new Sort[]{Sort.ASCENDING, Sort.DESCENDING});
                final RealmResults<DynamicRealmObject> realmResults2 = realm.where(AllTypes.CLASS_NAME)
                        .between(AllTypes.FIELD_LONG, 0, 5)
                        .findAllSortedAsync(new String[]{AllTypes.FIELD_STRING, AllTypes.FIELD_LONG},
                                new Sort[]{Sort.DESCENDING, Sort.ASCENDING});

                realmResults1.addChangeListener(new RealmChangeListener() {
                    @Override
                    public void onChange() {
                        assertEquals("data 0", realmResults1.get(0).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(3), realmResults1.get(0).get(AllTypes.FIELD_LONG));
                        assertEquals("data 0", realmResults1.get(1).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(2), realmResults1.get(1).get(AllTypes.FIELD_LONG));
                        assertEquals("data 0", realmResults1.get(2).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(0), realmResults1.get(2).get(AllTypes.FIELD_LONG));

                        assertEquals("data 1", realmResults1.get(3).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(4), realmResults1.get(3).get(AllTypes.FIELD_LONG));
                        assertEquals("data 1", realmResults1.get(4).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(3), realmResults1.get(4).get(AllTypes.FIELD_LONG));
                        assertEquals("data 1", realmResults1.get(5).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(1), realmResults1.get(5).get(AllTypes.FIELD_LONG));
                        assertEquals("data 1", realmResults1.get(6).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(0), realmResults1.get(6).get(AllTypes.FIELD_LONG));

                        assertEquals("data 2", realmResults1.get(7).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(4), realmResults1.get(7).get(AllTypes.FIELD_LONG));
                        assertEquals("data 2", realmResults1.get(8).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(2), realmResults1.get(8).get(AllTypes.FIELD_LONG));
                        assertEquals("data 2", realmResults1.get(9).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(1), realmResults1.get(9).get(AllTypes.FIELD_LONG));

                        if (callback2.getCount() == 0) {
                            realm.close();
                        }
                        callback1.countDown();
                    }
                });

                realmResults2.addChangeListener(new RealmChangeListener() {
                    @Override
                    public void onChange() {
                        assertEquals("data 2", realmResults2.get(0).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(1), realmResults2.get(0).get(AllTypes.FIELD_LONG));
                        assertEquals("data 2", realmResults2.get(1).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(2), realmResults2.get(1).get(AllTypes.FIELD_LONG));
                        assertEquals("data 2", realmResults2.get(2).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(4), realmResults2.get(2).get(AllTypes.FIELD_LONG));

                        assertEquals("data 1", realmResults2.get(3).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(0), realmResults2.get(3).get(AllTypes.FIELD_LONG));
                        assertEquals("data 1", realmResults2.get(4).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(1), realmResults2.get(4).get(AllTypes.FIELD_LONG));
                        assertEquals("data 1", realmResults2.get(5).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(3), realmResults2.get(5).get(AllTypes.FIELD_LONG));
                        assertEquals("data 1", realmResults2.get(6).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(4), realmResults2.get(6).get(AllTypes.FIELD_LONG));

                        assertEquals("data 0", realmResults2.get(7).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(0), realmResults2.get(7).get(AllTypes.FIELD_LONG));
                        assertEquals("data 0", realmResults2.get(8).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(2), realmResults2.get(8).get(AllTypes.FIELD_LONG));
                        assertEquals("data 0", realmResults2.get(9).get(AllTypes.FIELD_STRING));
                        assertEquals(Long.valueOf(3), realmResults2.get(9).get(AllTypes.FIELD_LONG));

                        if (callback1.getCount() == 0) {
                            realm.close();
                        }
                        callback2.countDown();
                    }
                });

                keepStrongReferences[0] = realmResults1;
                keepStrongReferences[1] = realmResults2;
            }
        });

        try {
            TestHelper.awaitOrFail(callback1);
            TestHelper.awaitOrFail(callback2);
        } finally {
            handlerThread.quit();
        }
    }

