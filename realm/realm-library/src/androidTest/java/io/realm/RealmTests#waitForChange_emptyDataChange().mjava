    @Test
    public void waitForChange_emptyDataChange() throws InterruptedException {
        final CountDownLatch bgRealmOpened = new CountDownLatch(1);
        final CountDownLatch bgRealmClosed = new CountDownLatch(1);
        final AtomicBoolean bgRealmChangeResult = new AtomicBoolean(false);
        final AtomicLong bgRealmWaitForChangeResult = new AtomicLong(0);

        // wait in background
        final CountDownLatch signalTestFinished = new CountDownLatch(1);
        Thread thread = new Thread(new Runnable() {
            @Override
            public void run() {
                Realm realm = Realm.getInstance(realmConfig);
                bgRealmOpened.countDown();
                bgRealmChangeResult.set(realm.waitForChange());
                bgRealmWaitForChangeResult.set(realm.where(AllTypes.class).count());
                realm.close();
                bgRealmClosed.countDown();
            }
        });
        thread.start();

        TestHelper.awaitOrFail(bgRealmOpened);
        realm.beginTransaction();
        realm.commitTransaction();
        TestHelper.awaitOrFail(bgRealmClosed);
        assertTrue(bgRealmChangeResult.get());
        assertEquals(0, bgRealmWaitForChangeResult.get());
    }

