    // Pre-null Realms will leave columns not-nullable after the underlying storage engine has
    // migrated the file format. If the user adds the @Required annotation to a field and does not
    // change the schema version, no migration is needed. But then, null cannot be used as a value.
    @Test
    public void openPreNullWithRequired() throws IOException {
        configFactory.copyRealmFromAssets(context,
                "string-only-required-pre-null-0.82.2.realm", Realm.DEFAULT_REALM_NAME);
        RealmConfiguration realmConfig = configFactory.createConfigurationBuilder()
                .schemaVersion(0)
                .schema(StringOnlyRequired.class)
                .build();
        Realm realm = Realm.getInstance(realmConfig);

        StringOnlyRequired stringOnlyRequired = realm.where(StringOnlyRequired.class).findFirst();
        assertNotNull(stringOnlyRequired);
        // This object was created with 0.82.2
        assertEquals("String_set_with_0.82.2", stringOnlyRequired.getChars());

        realm.beginTransaction();
        try {
            stringOnlyRequired.setChars(null);
            fail();
        } catch (IllegalArgumentException expected) {
            assertThat(expected.getMessage(),
                    CoreMatchers.containsString("Trying to set non-nullable field 'chars' to null."));
        }
        realm.cancelTransaction();

        realm.close();
    }

