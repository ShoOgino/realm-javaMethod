    public void testSetNullOnRequiredFieldsThrows() {
        realm.beginTransaction();
        NullTypes obj = realm.createObject(NullTypes.class);
        DynamicRealmObject dObj = new DynamicRealmObject(obj);
        try {
            for (SupportedType type : SupportedType.values()) {
                try {
                    switch (type) {
                        case OBJECT: continue; // Ignore
                        case LIST: dObj.setNull(NullTypes.FIELD_LIST_NULL); break;
                        case BOOLEAN: dObj.setNull(NullTypes.FIELD_BOOLEAN_NOT_NULL); break;
                        case BYTE: dObj.setNull(NullTypes.FIELD_BYTE_NOT_NULL); break;
                        case SHORT: dObj.setNull(NullTypes.FIELD_SHORT_NOT_NULL); break;
                        case INT: dObj.setNull(NullTypes.FIELD_INTEGER_NOT_NULL); break;
                        case LONG: dObj.setNull(NullTypes.FIELD_LONG_NOT_NULL); break;
                        case FLOAT: dObj.setNull(NullTypes.FIELD_FLOAT_NOT_NULL); break;
                        case DOUBLE: dObj.setNull(NullTypes.FIELD_DOUBLE_NOT_NULL); break;
                        case STRING: dObj.setNull(NullTypes.FIELD_STRING_NOT_NULL); break;
                        case BINARY: dObj.setNull(NullTypes.FIELD_BYTES_NOT_NULL); break;
                        case DATE: dObj.setNull(NullTypes.FIELD_DATE_NOT_NULL); break;
                        default:
                            fail("Unknown type: " + type);
                    }
                    fail("Setting value to null should throw: " + type);
                } catch (IllegalArgumentException ignored) {
                }
            }
        } finally {
            realm.cancelTransaction();
        }
    }

