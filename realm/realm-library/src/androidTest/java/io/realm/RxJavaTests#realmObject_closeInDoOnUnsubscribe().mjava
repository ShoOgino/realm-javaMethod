    @Test
    @UiThreadTest
    public void realmObject_closeInDoOnUnsubscribe() {
        realm.beginTransaction();
        realm.createObject(AllTypes.class);
        realm.commitTransaction();

        Flowable<AllTypes> flowable = realm.where(AllTypes.class).findFirst().<AllTypes>asFlowable()
                .doOnCancel(new Action() {
                    @Override
                    public void run() throws Exception {
                        realm.close();
                    }
                });

        subscription = flowable.subscribe(new Consumer<AllTypes>() {
            @Override
            public void accept(AllTypes ignored) throws Exception {
            }
        });

        subscription.dispose();
        assertTrue(realm.isClosed());
    }

