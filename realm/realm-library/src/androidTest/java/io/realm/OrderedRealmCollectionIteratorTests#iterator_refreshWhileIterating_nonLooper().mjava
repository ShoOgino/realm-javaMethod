    // TODO Remove once waitForChange is introduced
    @Test
    public void iterator_refreshWhileIterating_nonLooper() {
        final CountDownLatch bgDone = new CountDownLatch(1);
        Iterator<AllJavaTypes> it = collection.iterator();
        it.next();

        new Thread(new Runnable() {
            @Override
            public void run() {
                Realm realm = Realm.getInstance(OrderedRealmCollectionIteratorTests.this.realm.getConfiguration());
                appendElementToCollection(realm, collectionClass);
                realm.close();
                bgDone.countDown();
            }
        }).start();
        TestHelper.awaitOrFail(bgDone);

        realm.refresh();
        switch (collectionClass) {
            case UNMANAGED_REALMLIST:
                assertEquals(TEST_SIZE, collection.size());
                break;

            case MANAGED_REALMLIST:
            case REALMRESULTS:
                assertEquals(TEST_SIZE + 1, collection.size());
                break;

            default:
                fail("Unknown class: " + collectionClass);
        }
    }

