    @Test
    @UiThreadTest
    public void findFirst_emittedOnSubscribe() {
        realm.beginTransaction();
        realm.createObject(AllTypes.class).setColumnLong(42);
        realm.commitTransaction();

        final AtomicBoolean subscribedNotified = new AtomicBoolean(false);
        subscription = realm.where(AllTypes.class).equalTo(AllTypes.FIELD_LONG, 42).findFirst().<AllTypes>asFlowable()
                .subscribe(new Consumer <AllTypes>() {
                    @Override
                    public void accept(AllTypes allTypes) throws Exception {
                        subscribedNotified.set(true);
                    }
                });
        assertTrue(subscribedNotified.get());
        subscription.dispose();
    }

