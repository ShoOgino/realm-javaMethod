    // Querying a non-nullable field with null is an error
    @Test
    public void equalTo_notNullableFields() {
        TestHelper.populateTestRealmForNullTests(realm);

        // 1 String
        try {
            realm.where(NullTypes.class).equalTo(NullTypes.FIELD_STRING_NOT_NULL,
                    (String) null).findAll();
            fail();
        } catch (IllegalArgumentException ignored) {
        }
        // 2 Bytes
        try {
            realm.where(NullTypes.class).equalTo(NullTypes.FIELD_BYTES_NOT_NULL, (byte[]) null).findAll();
            fail();
        } catch (IllegalArgumentException ignored) {
        }
        // 3 Boolean
        try {
            realm.where(NullTypes.class).equalTo(NullTypes.FIELD_BOOLEAN_NOT_NULL, (Boolean) null).findAll();
            fail();
        } catch (IllegalArgumentException ignored) {
        }
        // 4 Byte
        try {
            realm.where(NullTypes.class).equalTo(NullTypes.FIELD_BYTE_NOT_NULL, (Byte) null).findAll();
            fail();
        } catch (IllegalArgumentException ignored) {
        }
        // 5 Short
        try {
            realm.where(NullTypes.class).equalTo(NullTypes.FIELD_SHORT_NOT_NULL, (Short) null).findAll();
            fail();
        } catch (IllegalArgumentException ignored) {
        }
        // 6 Integer
        try {
            realm.where(NullTypes.class).equalTo(NullTypes.FIELD_INTEGER_NOT_NULL, (Integer) null).findAll();
            fail();
        } catch (IllegalArgumentException ignored) {
        }
        // 7 Long
        try {
            realm.where(NullTypes.class).equalTo(NullTypes.FIELD_LONG_NOT_NULL, (Long) null).findAll();
            fail();
        } catch (IllegalArgumentException ignored) {
        }
        // 8 Float
        try {
            realm.where(NullTypes.class).equalTo(NullTypes.FIELD_FLOAT_NOT_NULL, (Float) null).findAll();
            fail();
        } catch (IllegalArgumentException ignored) {
        }
        // 9 Double
        try {
            realm.where(NullTypes.class).equalTo(NullTypes.FIELD_DOUBLE_NOT_NULL, (Double) null).findAll();
            fail();
        } catch (IllegalArgumentException ignored) {
        }
        // 10 Date
        try {
            realm.where(NullTypes.class).equalTo(NullTypes.FIELD_DATE_NOT_NULL, (Date) null).findAll();
            fail();
        } catch (IllegalArgumentException ignored) {
        }
    }

