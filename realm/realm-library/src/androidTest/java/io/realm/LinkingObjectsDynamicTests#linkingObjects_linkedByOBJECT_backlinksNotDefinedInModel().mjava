    @Test
    public void linkingObjects_linkedByOBJECT_backlinksNotDefinedInModel() {
        final int numOwnersOfCat1 = 3;
        final int numOwnersOfCat2 = 2;
        realm.executeTransaction(new Realm.Transaction() {
            @Override
            public void execute(Realm realm) {
                final Cat cat1 = realm.createObject(Cat.class);
                cat1.setName("cat1");

                // create owners of cat1
                for (int i = 0; i < numOwnersOfCat1; i++) {
                    final Owner owner = realm.createObject(Owner.class);
                    owner.setName("owner" + i + "_cat1");
                    owner.setCat(cat1);
                }

                final Cat cat2 = realm.createObject(Cat.class);
                cat2.setName("cat2");

                // create owners of cat2
                for (int i = 0; i < numOwnersOfCat2; i++) {
                    final Owner owner = realm.createObject(Owner.class);
                    owner.setName("owner" + i + "_cat2");
                    owner.setCat(cat2);
                }

                // cat3 has no owner
                final Cat cat3 = realm.createObject(Cat.class);
                cat3.setName("cat3");
            }
        });

        dynamicRealm.refresh();

        final DynamicRealmObject cat1 = dynamicRealm.where(Cat.CLASS_NAME).equalTo(Cat.FIELD_NAME, "cat1").findFirst();
        final RealmResults<DynamicRealmObject> cat1Owners = cat1.linkingObjects(Owner.CLASS_NAME, Owner.FIELD_CAT);
        assertNotNull(cat1Owners);
        assertEquals(numOwnersOfCat1, cat1Owners.size());
        for (DynamicRealmObject cat1Owner : cat1Owners) {
            assertEquals(Owner.CLASS_NAME, cat1Owner.getType());
            assertTrue(cat1Owner.getString(Owner.FIELD_NAME).endsWith("_cat1"));
            assertEquals(cat1, cat1Owner.getObject(Owner.FIELD_CAT));
        }

        final DynamicRealmObject cat2 = dynamicRealm.where(Cat.CLASS_NAME).equalTo(Cat.FIELD_NAME, "cat2").findFirst();
        final RealmResults<DynamicRealmObject> cat2Owners = cat2.linkingObjects(Owner.CLASS_NAME, Owner.FIELD_CAT);
        assertNotNull(cat2Owners);
        assertEquals(numOwnersOfCat2, cat2Owners.size());
        for (DynamicRealmObject cat2Owner : cat2Owners) {
            assertEquals(Owner.CLASS_NAME, cat2Owner.getType());
            assertTrue(cat2Owner.getString(Owner.FIELD_NAME).endsWith("_cat2"));
            assertEquals(cat2, cat2Owner.getObject(Owner.FIELD_CAT));
        }

        final DynamicRealmObject cat3 = dynamicRealm.where(Cat.CLASS_NAME).equalTo(Cat.FIELD_NAME, "cat3").findFirst();
        final RealmResults<DynamicRealmObject> cat3Owners = cat3.linkingObjects(Owner.CLASS_NAME, Owner.FIELD_CAT);
        assertNotNull(cat3Owners);
        assertTrue(cat3Owners.isEmpty());
    }

