    // Test modifying syncRealmResults in RealmResults's change listener
    public void test_change_realm_results_map_in_listener() throws InterruptedException {
        final CountDownLatch finishedLatch = new CountDownLatch(2);

        handler.post(new Runnable() {
            @Override
            public void run() {
                realm = Realm.getInstance(configuration);

                // Two results needed to make sure list modification happen while iterating
                RealmResults<Owner> results1 = realm.allObjects(Owner.class);
                RealmResults<Cat> results2 = realm.allObjects(Cat.class);
                RealmChangeListener listener = new RealmChangeListener() {
                    @Override
                    public void onChange() {
                        RealmResults<Owner> results = realm.allObjects(Owner.class);
                        boolean foundKey = false;
                        // Check if the results has been added to the syncRealmResults in case of the behaviour of
                        // allObjects changes
                        for (WeakReference<RealmResults<? extends RealmObject>> weakReference :
                                realm.handlerController.syncRealmResults.keySet()) {
                            if (weakReference.get() == results) {
                                foundKey = true;
                                break;
                            }
                        }
                        assertTrue(foundKey);
                        finishedLatch.countDown();
                    }
                };
                results1.addChangeListener(listener);
                results2.addChangeListener(listener);

                realm.beginTransaction();
                realm.createObject(Owner.class);
                realm.commitTransaction();
            }
        });

        finishedLatch.await();
    }

