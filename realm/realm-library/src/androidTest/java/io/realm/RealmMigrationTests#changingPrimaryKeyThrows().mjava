    @Test
    public void changingPrimaryKeyThrows() {

        // Creates v0 of the Realm.
        RealmConfiguration originalConfig = configFactory.createConfigurationBuilder()
                .schema(Thread.class)
                .build();
        Realm.getInstance(originalConfig).close();

        RealmMigration migration = new RealmMigration() {
            @Override
            public void migrate(DynamicRealm realm, long oldVersion, long newVersion) {
                RealmSchema schema = realm.getSchema();
                schema.create("PrimaryKeyAsString")
                        .addField("id", long.class, FieldAttribute.PRIMARY_KEY) // Initial @PrimaryKey is on the int.
                        .addField("name", String.class);
            }
        };

        // Creates v1 of the Realm.
        RealmConfiguration realmConfig = configFactory.createConfigurationBuilder()
                .schemaVersion(1)
                .schema(Thread.class, PrimaryKeyAsString.class)
                .migration(migration)
                .build();
        try {
            realm = Realm.getInstance(realmConfig);
            fail();
        } catch (RealmMigrationNeededException e) {
            assertThat(e.getMessage(), CoreMatchers.containsString(
                    "Primary Key for class 'PrimaryKeyAsString' has changed from 'id' to 'name'."));
        } finally {
            if (realm != null) {
                realm.close();
            }
        }
    }

