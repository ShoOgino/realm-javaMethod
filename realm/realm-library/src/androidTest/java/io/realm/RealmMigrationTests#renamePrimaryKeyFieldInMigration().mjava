    // Renaming the class should also rename the the class entry in the pk metadata table that tracks primary keys.
    @Test
    public void renamePrimaryKeyFieldInMigration() {
        buildInitialMigrationSchema(MigrationFieldRenamed.CLASS_NAME, false);

        RealmMigration migration = new RealmMigration() {
            @Override
            public void migrate(DynamicRealm realm, long oldVersion, long newVersion) {
                realm.getSchema().get(MigrationFieldRenamed.CLASS_NAME)
                        .renameField(MigrationPrimaryKey.FIELD_PRIMARY, MigrationFieldRenamed.FIELD_PRIMARY);
            }
        };
        RealmConfiguration realmConfig = configFactory.createConfigurationBuilder()
                .schemaVersion(1)
                .schema(MigrationFieldRenamed.class)
                .migration(migration)
                .build();
        Realm realm = Realm.getInstance(realmConfig);

        Table table = realm.getSchema().getTable(MigrationFieldRenamed.class);
        assertTrue(table.hasPrimaryKey());
        assertEquals(MigrationFieldRenamed.DEFAULT_FIELDS_COUNT, table.getColumnCount());
        assertEquals(MigrationFieldRenamed.DEFAULT_PRIMARY_INDEX, table.getPrimaryKey());

        RealmObjectSchema objectSchema = realm.getSchema().get(MigrationFieldRenamed.CLASS_NAME);
        assertFalse(objectSchema.hasField(MigrationPrimaryKey.FIELD_PRIMARY));
        assertEquals(MigrationFieldRenamed.FIELD_PRIMARY, objectSchema.getPrimaryKey());
    }

