    @Test
    public void compactOnLaunch_multipleThread() throws IOException {
        final String REALM_NAME = "test.realm";
        final AtomicInteger compactOnLaunchCount = new AtomicInteger(0);

        final RealmConfiguration realmConfig = configFactory.createConfigurationBuilder()
                .name(REALM_NAME)
                .compactOnLaunch(new CompactOnLaunchCallback() {
                    @Override
                    public boolean shouldCompact(long totalBytes, long usedBytes) {
                        compactOnLaunchCount.incrementAndGet();
                        return true;
                    }
                })
                .build();
        Realm realm = Realm.getInstance(realmConfig);

        Thread thread = new Thread(new Runnable() {
            @Override
            public void run() {
                Realm bgRealm = Realm.getInstance(realmConfig);
                bgRealm.close();
            }
        });
        thread.start();

        try {
            thread.join();
        } catch (InterruptedException e) {
            fail();
        }

        realm.close();

        // FIXME: It should be 1. Current compactOnLaunch is called each time a Realm is opened on a new thread.
        assertNotEquals(1, compactOnLaunchCount.get());
        assertEquals(3, compactOnLaunchCount.get());
    }

