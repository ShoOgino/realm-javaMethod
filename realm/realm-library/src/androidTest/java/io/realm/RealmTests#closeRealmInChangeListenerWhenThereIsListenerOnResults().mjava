    // Tests if close can be called from Realm change listener when there is an listener on RealmResults.
    @Test
    @RunTestInLooperThread
    public void closeRealmInChangeListenerWhenThereIsListenerOnResults() {
        final Realm realm = looperThread.getRealm();
        final RealmChangeListener<RealmResults<AllTypes>> dummyListener = new RealmChangeListener<RealmResults<AllTypes>>() {
            @Override
            public void onChange(RealmResults<AllTypes> object) {
            }
        };
        final RealmChangeListener<Realm> listener = new RealmChangeListener<Realm>() {
            @Override
            public void onChange(Realm object) {
                if (realm.where(AllTypes.class).count() == 1) {
                    realm.removeChangeListener(this);
                    realm.close();
                    looperThread.postRunnable(new Runnable() {
                        @Override
                        public void run() {
                            looperThread.testComplete();
                        }
                    });
                }
            }
        };

        realm.addChangeListener(listener);

        // Change listener on Realm results.
        RealmResults<AllTypes> results = realm.where(AllTypes.class).findAll();
        results.addChangeListener(dummyListener);

        realm.executeTransactionAsync(new Realm.Transaction() {
            @Override
            public void execute(Realm realm) {
                realm.createObject(AllTypes.class);
            }
        });
    }

