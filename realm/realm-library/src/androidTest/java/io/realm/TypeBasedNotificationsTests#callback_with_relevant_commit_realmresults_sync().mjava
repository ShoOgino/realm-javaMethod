    // UC 1 Sync RealmResults
    @Test
    @RunTestInLooperThread
    @Ignore("Flaky test because of Object Store always run Results query callbacks even " +
            "if the query returned and nothing changes.")
    public void callback_with_relevant_commit_realmresults_sync() {
        final Realm realm = looperThread.realm;

        // Step 1: Create object
        realm.beginTransaction();
        final Dog akamaru = realm.createObject(Dog.class);
        akamaru.setName("Akamaru");
        realm.commitTransaction();

        final RealmResults<Dog> dogs = realm.where(Dog.class).findAll();
        // Execute the query.
        dogs.first();
        looperThread.keepStrongReference.add(dogs);
        dogs.addChangeListener(new RealmChangeListener<RealmResults<Dog>>() {
            @Override
            public void onChange(RealmResults<Dog> object) {
                // Step 4: Respond to relevant change
                typebasedCommitInvocations.incrementAndGet();
                assertEquals(1, dogs.size());
                assertEquals("Akamaru", dogs.get(0).getName());
                assertEquals(17, dogs.get(0).getAge());
                looperThread.testComplete();
            }
        });

        // Step 2: Trigger non-related commit. If this triggered the results listener, assertion will happen there.
        realm.executeTransactionAsync(new Realm.Transaction() {
            @Override
            public void execute(Realm realm) {
            }
        });

        // Step 3: Trigger related commit
        realm.executeTransactionAsync(new Realm.Transaction() {
            @Override
            public void execute(Realm realm) {
                realm.where(Dog.class).findFirst().setAge(17);
            }
        });
    }

