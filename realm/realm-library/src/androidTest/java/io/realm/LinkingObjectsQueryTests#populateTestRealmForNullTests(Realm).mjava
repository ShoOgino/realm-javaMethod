    // Similar to the version in TestHelper, but with more Backlinks
    // Creates 3 NullTypes objects. The objects are self-referenced (link) in
    // order to test link queries.
    //
    // +-+--------+------+---------+--------+--------------------+----------+
    // | | string | link | numeric | binary | numeric (not null) | linklist |
    // +-+--------+------+---------+--------+--------------------+----------+
    // |0| Fish   |    0 |       1 |    {0} |                  1 |      [0] |
    // |1| null   |    2 |    null |   null |                  0 |      [2] |
    // |2| Horse  | null |       3 |  {1,2} |                  3 |     null |
    // +-+--------+------+---------+--------+--------------------+----------+
    private void populateTestRealmForNullTests(Realm testRealm) {
        // 1 String
        String[] words = {"Fish", null, "Horse"};
        // 2 Bytes
        byte[][] binaries = {new byte[]{0}, null, new byte[]{1, 2}};
        // 3 Boolean
        Boolean[] booleans = {false, null, true};
        // Numeric fields will be 1, 0/null, 3
        // 10 Date
        Date[] dates = {new Date(0), null, new Date(10000)};
        NullTypes[] nullTypesArray = new NullTypes[3];

        Decimal128[] decimals = {new Decimal128(BigDecimal.TEN), null, new Decimal128(BigDecimal.ONE)};

        ObjectId[] ids = {new ObjectId(TestHelper.generateObjectIdHexString(10)), null, new ObjectId(TestHelper.generateObjectIdHexString(1))};

        testRealm.beginTransaction();
        for (int i = 0; i < 3; i++) {
            NullTypes nullTypes = new NullTypes();
            nullTypes.setId(i + 1);
            // 1 String
            nullTypes.setFieldStringNull(words[i]);
            if (words[i] != null) {
                nullTypes.setFieldStringNotNull(words[i]);
            }
            // 2 Bytes
            nullTypes.setFieldBytesNull(binaries[i]);
            if (binaries[i] != null) {
                nullTypes.setFieldBytesNotNull(binaries[i]);
            }
            // 3 Boolean
            nullTypes.setFieldBooleanNull(booleans[i]);
            if (booleans[i] != null) {
                nullTypes.setFieldBooleanNotNull(booleans[i]);
            }
            if (i != 1) {
                int n = i + 1;
                // 4 Byte
                nullTypes.setFieldByteNull((byte) n);
                nullTypes.setFieldByteNotNull((byte) n);
                // 5 Short
                nullTypes.setFieldShortNull((short) n);
                nullTypes.setFieldShortNotNull((short) n);
                // 6 Integer
                nullTypes.setFieldIntegerNull(n);
                nullTypes.setFieldIntegerNotNull(n);
                // 7 Long
                nullTypes.setFieldLongNull((long) n);
                nullTypes.setFieldLongNotNull((long) n);
                // 8 Float
                nullTypes.setFieldFloatNull((float) n);
                nullTypes.setFieldFloatNotNull((float) n);
                // 9 Double
                nullTypes.setFieldDoubleNull((double) n);
                nullTypes.setFieldDoubleNotNull((double) n);
            }
            // 10 Date
            nullTypes.setFieldDateNull(dates[i]);
            if (dates[i] != null) {
                nullTypes.setFieldDateNotNull(dates[i]);
            }

            nullTypes.setFieldDecimal128Null(decimals[i]);

            nullTypes.setFieldObjectIdNull(ids[i]);

            nullTypesArray[i] = testRealm.copyToRealm(nullTypes);
        }
        nullTypesArray[0].setFieldObjectNull(nullTypesArray[0]);
        nullTypesArray[1].setFieldObjectNull(nullTypesArray[2]);
        nullTypesArray[2].setFieldObjectNull(null);

        nullTypesArray[0].getFieldListNull().add(nullTypesArray[1]);
        nullTypesArray[1].getFieldListNull().add(nullTypesArray[2]);
        nullTypesArray[2].getFieldListNull().clear(); // just to be sure
        testRealm.commitTransaction();
    }

