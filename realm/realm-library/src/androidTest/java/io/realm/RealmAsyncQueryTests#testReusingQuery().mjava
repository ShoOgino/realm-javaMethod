    @Test
    @RunTestInLooperThread
    public void testReusingQuery() throws Throwable {
        populateTestRealm(workerThread.realm, 10);

        RealmQuery<AllTypes> query = workerThread.realm.where(AllTypes.class)
                .between("columnLong", 0, 4);
        RealmResults<AllTypes> queryAllSync = query.findAll();
        RealmResults<AllTypes> allAsync = query.findAllAsync();

        assertTrue(allAsync.load());
        assertEquals(allAsync, queryAllSync);

        // the RealmQuery already has an argumentHolder, can't reuse it
        try {
            RealmResults<AllTypes> allAsyncSorted = query.findAllSorted("columnLong");
            fail("Should throw an exception, can not reuse RealmQuery");
        } catch (IllegalStateException ignored) {
            workerThread.testComplete();
        }
    }

