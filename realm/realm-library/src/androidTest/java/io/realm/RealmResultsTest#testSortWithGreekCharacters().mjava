    public void testSortWithGreekCharacters() {
        testRealm.beginTransaction();
        testRealm.clear(AllTypes.class);
        AllTypes at1 = testRealm.createObject(AllTypes.class);
        at1.setColumnString("αύριο");
        AllTypes at2 = testRealm.createObject(AllTypes.class);
        at2.setColumnString("ημέρες");
        AllTypes at3 = testRealm.createObject(AllTypes.class);
        at3.setColumnString("δοκιμές");
        testRealm.commitTransaction();

        RealmResults<AllTypes> result = testRealm.allObjects(AllTypes.class);
        RealmResults<AllTypes> sortedResult = result.where().findAll();
        sortedResult.sort(FIELD_STRING);

        assertEquals(3, sortedResult.size());
        assertEquals("αύριο", sortedResult.first().getColumnString());
        assertEquals("αύριο", sortedResult.get(0).getColumnString());
        assertEquals("δοκιμές", sortedResult.get(1).getColumnString());
        assertEquals("ημέρες", sortedResult.get(2).getColumnString());

        RealmResults<AllTypes> reverseResult = result.where().findAll();
        reverseResult.sort(FIELD_STRING, Sort.DESCENDING);
        assertEquals(3, reverseResult.size());
        assertEquals("αύριο", reverseResult.last().getColumnString());
        assertEquals("ημέρες", reverseResult.get(0).getColumnString());
        assertEquals("δοκιμές", reverseResult.get(1).getColumnString());
        assertEquals("αύριο", reverseResult.get(2).getColumnString());
    }

