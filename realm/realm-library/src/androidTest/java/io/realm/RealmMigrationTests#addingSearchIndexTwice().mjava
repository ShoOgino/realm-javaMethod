    // adding search index is idempotent
    @Test
    public void addingSearchIndexTwice() throws IOException {
        Class[] classes = {PrimaryKeyAsLong.class, PrimaryKeyAsString.class};

        for (final Class clazz : classes){
            final boolean[] didMigrate = {false};

            RealmMigration migration = new RealmMigration() {
                @Override
                public void migrate(DynamicRealm realm, long oldVersion, long newVersion) {
                    Table table = realm.schema.getTable(clazz);
                    long columnIndex = table.getColumnIndex("id");
                    table.addSearchIndex(columnIndex);
                    if (clazz == PrimaryKeyAsLong.class) {
                        columnIndex = table.getColumnIndex("name");
                        table.convertColumnToNullable(columnIndex);
                    }
                    didMigrate[0] = true;
                }
            };
            RealmConfiguration realmConfig = configFactory.createConfigurationBuilder()
                    .schemaVersion(42)
                    .schema(clazz)
                    .migration(migration)
                    .build();
            Realm.deleteRealm(realmConfig);
            configFactory.copyRealmFromAssets(context,
                    "default-before-migration.realm", Realm.DEFAULT_REALM_NAME);
            Realm.migrateRealm(realmConfig);
            realm = Realm.getInstance(realmConfig);
            assertEquals(42, realm.getVersion());
            assertTrue(didMigrate[0]);
            Table table = realm.getTable(clazz);
            assertEquals(true, table.hasSearchIndex(table.getColumnIndex("id")));
            realm.close();
        }
    }

