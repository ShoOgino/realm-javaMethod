    @Test
    public void toArray_withBinaryArray() {
        if (listType != BINARY_LIST) {
            thrown.expect(ArrayStoreException.class);
            list.toArray(new byte[0][]);
            // should not reach here
            return;
        }

        final byte[][] expected = new byte[typeIsNullable ? NULLABLE_TEST_SIZE : NON_NULL_TEST_SIZE][];
        for (int i = 0; i < NON_NULL_TEST_SIZE; i++) {
            if (typeIsNullable) {
                expected[i * 2] = (byte[]) generateValue(BINARY_LIST, i);
                expected[i * 2 + 1] = null;
            } else {
                expected[i] = (byte[]) generateValue(BINARY_LIST, i);
            }
        }
        final Object[] returnedArray = list.toArray(new byte[0][]);
        assertEquals(byte[].class, returnedArray.getClass().getComponentType());

        assertEquals(expected.length, returnedArray.length);
        for (int i = 0; i < expected.length; i++) {
            if (expected[i] == null) {
                assertNull(returnedArray[i]);
            } else {
                assertTrue(returnedArray[i] instanceof byte[]);
                assertArrayEquals(expected[i], (byte[]) returnedArray[i]);
            }
        }
    }

