    /**
     * Test that the {@link Realm#contains(Class)} method of one Realm will not contain a
     * {@link RealmObject} from another Realm.
     */
    @Test
    public void contains_doesNotContainAnItem() {
        RealmConfiguration realmConfig = configFactory.createConfiguration("contains_test.realm");
        Realm testRealmTwo = Realm.getInstance(realmConfig);
        try {
            // Set up the test realm
            testRealmTwo.beginTransaction();
            Owner owner2 = testRealmTwo.createObject(Owner.class);
            owner2.setName("Owner");
            for (int i = 0; i < TEST_OBJECTS; i++) {
                Dog dog = testRealmTwo.createObject(Dog.class);
                dog.setName("Dog " + i);
                owner2.getDogs().add(dog);
            }
            testRealmTwo.commitTransaction();

            // Get a dog from the test realm.
            Dog dog2 = testRealmTwo.where(Owner.class).findFirst().getDogs().get(0);

            // Access the original Realm. Then see if the above dog object is contained. (It shouldn't).
            Owner owner1 = testRealm.where(Owner.class).findFirst();

            assertFalse("Should not be able to find one object in another Realm via contains",
                    owner1.getDogs().contains(dog2));
        } finally {
            if (testRealmTwo != null && !testRealmTwo.isClosed()) {
                testRealmTwo.close();
            }
        }
    }

