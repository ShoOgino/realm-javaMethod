    @Test
    @RunTestInLooperThread
    public void dynamicRealmResults_emittedChangesetOnSubscribe() {
        final DynamicRealm dynamicRealm = DynamicRealm.getInstance(realm.getConfiguration());
        final RealmResults<DynamicRealmObject> results = dynamicRealm.where(AllTypes.CLASS_NAME).findAll();
        subscription = results.asChangesetObservable().subscribe(change -> {
            assertTrue(change.getCollection().isFrozen());
            assertEquals(results, change.getCollection());
            assertNull(change.getChangeset());
            disposeSuccessfulTest(dynamicRealm);
        });
    }

