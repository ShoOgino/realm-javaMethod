    // Test update a existing object with JSON stream.
    public void testUpdateObjectFromJsonStream_nullValues() throws IOException {
        AllTypesPrimaryKey obj = new AllTypesPrimaryKey();
        Date date = new Date(0);
        // ID
        obj.setColumnLong(1);
        obj.setColumnBinary(new byte[]{1});
        obj.setColumnBoolean(true);
        obj.setColumnDate(date);
        obj.setColumnDouble(1);
        obj.setColumnFloat(1);
        obj.setColumnString("1");
        testRealm.beginTransaction();
        testRealm.copyToRealm(obj);
        testRealm.commitTransaction();

        InputStream in = loadJsonFromAssets("all_types_primary_key_null.json");
        testRealm.beginTransaction();
        testRealm.createOrUpdateObjectFromJson(AllTypesPrimaryKey.class, in);
        testRealm.commitTransaction();
        in.close();

        // Check that all primitive types are imported correctly
        obj = testRealm.allObjects(AllTypesPrimaryKey.class).first();
        // TODO: We only handle updating null for String right now.
        //       Clean this up after nullable support for all types.
        assertEquals("", obj.getColumnString());
        assertEquals(1L, obj.getColumnLong());
        assertEquals(1f, obj.getColumnFloat());
        assertEquals(1d, obj.getColumnDouble());
        assertEquals(true, obj.isColumnBoolean());
        assertEquals(date, obj.getColumnDate());
        assertArrayEquals(new byte[]{1}, obj.getColumnBinary());
        assertNull(obj.getColumnRealmObject());
        assertEquals(0, obj.getColumnRealmList().size());
    }

