    // Test case for https://github.com/realm/realm-java/issues/2417
    // Ensure that a UnreachableVersion exception during handover doesn't crash the app or cause a segfault.
    @Test
    @RunTestInLooperThread
    public void badVersion_syncTransaction() throws NoSuchFieldException, IllegalAccessException {
        TestHelper.replaceRealmThreadExectutor(RealmThreadPoolExecutor.newSingleThreadExecutor());
        Realm realm = looperThread.realm;

        // 1. Make sure that async query is not started
        final RealmResults<AllTypes> result = realm.where(AllTypes.class).findAllSortedAsync(AllTypes.FIELD_STRING);
        result.addChangeListener(new RealmChangeListener<RealmResults<AllTypes>>() {
            @Override
            public void onChange(RealmResults<AllTypes> object) {
                // 4. The commit in #2, should result in a refresh being triggered, which means this callback will
                // be notified once the updated async queries has run.
                // with the correct
                assertTrue(result.isValid());
                assertTrue(result.isLoaded());
                assertEquals(1, result.size());
                looperThread.testComplete();
            }
        });

        // 2. Advance the calle Realm, invalidating the version in the handover object
        realm.beginTransaction();
        realm.createObject(AllTypes.class);
        realm.commitTransaction();

        // 3. The async query should now (hopefully) fail with a BadVersion
        result.load();
    }

