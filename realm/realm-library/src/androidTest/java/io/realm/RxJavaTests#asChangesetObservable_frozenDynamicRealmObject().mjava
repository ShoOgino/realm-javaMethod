    @Test
    @RunTestInLooperThread
    public void asChangesetObservable_frozenDynamicRealmObject() {
        realm.beginTransaction();
        realm.createObject(AllTypes.class);
        realm.commitTransaction();

        DynamicRealm dynamicRealm = DynamicRealm.getInstance(looperThread.getConfiguration());
        DynamicRealmObject obj = dynamicRealm.where(AllTypes.CLASS_NAME).findFirst();

        DynamicRealmObject frozenObject = obj.<DynamicRealmObject>freeze();
        subscription = frozenObject.asChangesetObservable().subscribe(change -> {
            RealmObject rxObject = change.getObject();
            assertTrue(rxObject.isFrozen());
            assertEquals(rxObject, frozenObject);
            assertNull(change.getChangeset());
            disposeSuccessfulTest(dynamicRealm);
        });
    }

