    @Test
    @RunTestInLooperThread
    public void realmResults_emittedChangesetOnUpdate() {
        RealmResults<AllTypes> results = realm.where(AllTypes.class).findAll();

        subscription = results.asChangesetObservable().subscribe(change -> {
            RealmResults<AllTypes> rxResults = change.getCollection();
            assertTrue(rxResults.isFrozen());
            if (rxResults.isEmpty()) {
                realm.executeTransaction(r -> r.createObject(AllTypes.class));
            } else if (rxResults.size() == 1) {
                assertEquals(1, change.getChangeset().getInsertions().length);
                disposeSuccessfulTest(realm);
            }
        });
    }

