    public void testIsNonEmptyIllegalFieldTypeThrows() {
        for (RealmFieldType type : NOT_SUPPORTED_IS_NONEMPTY_TYPES) {
            try {
                switch (type) {
                    case INTEGER:
                        testRealm.where(AllJavaTypes.class).isNonEmpty(AllJavaTypes.FIELD_LONG).findAll();
                        break;
                    case FLOAT:
                        testRealm.where(AllJavaTypes.class).isNonEmpty(AllJavaTypes.FIELD_FLOAT).findAll();
                        break;
                    case DOUBLE:
                        testRealm.where(AllJavaTypes.class).isNonEmpty(AllJavaTypes.FIELD_DOUBLE).findAll();
                        break;
                    case BOOLEAN:
                        testRealm.where(AllJavaTypes.class).isNonEmpty(AllJavaTypes.FIELD_BOOLEAN).findAll();
                        break;
                    case OBJECT:
                        testRealm.where(AllJavaTypes.class).isNonEmpty(AllJavaTypes.FIELD_OBJECT).findAll();
                        break;
                    case DATE:
                        testRealm.where(AllJavaTypes.class).isNonEmpty(AllJavaTypes.FIELD_DATE).findAll();
                        break;
                    default:
                        fail("Unknown type: " + type);
                }
                fail(type + " should throw an exception");
            } catch (IllegalArgumentException ignored) {
            }
        }
    }

