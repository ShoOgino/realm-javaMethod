    @Test
    public void setAnnotations() {

        // Creates v0 of the Realm.
        RealmConfiguration originalConfig = configFactory.createConfigurationBuilder()
                .schema(StringOnly.class)
                .build();
        Realm.getInstance(originalConfig).close();

        RealmMigration migration = new RealmMigration() {
            @Override
            public void migrate(DynamicRealm realm, long oldVersion, long newVersion) {
                RealmSchema schema = realm.getSchema();
                schema.create("AnnotationTypes")
                        .addField("id", long.class, FieldAttribute.PRIMARY_KEY)
                        .addField("indexString", String.class, FieldAttribute.INDEXED)
                        .addField("notIndexString", String.class);
            }
        };

        RealmConfiguration realmConfig = configFactory.createConfigurationBuilder()
                .schemaVersion(1)
                .schema(StringOnly.class, AnnotationTypes.class)
                .migration(migration)
                .build();

        realm = Realm.getInstance(realmConfig);
        Table table = realm.getTable(AnnotationTypes.class);
        assertEquals(3, table.getColumnCount());
        assertEquals("id", OsObjectStore.getPrimaryKeyForObject(realm.getSharedRealm(), "AnnotationTypes"));
        assertFalse(table.hasSearchIndex(table.getColumnKey("id")));
        assertTrue(table.hasSearchIndex(table.getColumnKey("indexString")));
    }

