    @Test
    @RunTestInLooperThread
    public void accessingSyncRealmResultInsideAsyncResultListener() {
        final Realm realm = looperThread.realm;
        final AtomicInteger asyncResultCallback = new AtomicInteger(0);

        final RealmResults<AllTypes> syncResults = realm.where(AllTypes.class).findAll();

        RealmResults<AllTypes> results = realm.where(AllTypes.class).findAllAsync();
        results.addChangeListener(new RealmChangeListener<RealmResults<AllTypes>>() {
            @Override
            public void onChange(RealmResults<AllTypes> results) {
                switch (asyncResultCallback.incrementAndGet()) {
                    case 1:
                        // Called when first async query completes
                        assertEquals(0, results.size());
                        realm.executeTransactionAsync(new Realm.Transaction() {
                            @Override
                            public void execute(Realm realm) {
                                realm.createObject(AllTypes.class);
                            }
                        });
                        break;

                    case 2:
                        // Called after async transaction completes, A REALM_CHANGED event has been triggered,
                        // async queries have rerun, and listeners are triggered again
                        assertEquals(1, results.size());
                        assertEquals(1, syncResults.size()); // If syncResults is not in sync yet, this will fail.
                        looperThread.testComplete();
                        break;
                }
            }
        });
    }

