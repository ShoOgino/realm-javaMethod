    @Test
    public void deletingRealmAlsoClearsConfigurationCache() throws IOException {
        String REALM_NAME = "encrypted.realm";
        byte[] oldPassword = TestHelper.SHA512("realm");
        byte[] newPassword = TestHelper.SHA512("realm-copy");

        configFactory.copyRealmFromAssets(context, REALM_NAME, REALM_NAME);
        RealmMigration realmMigration = TestHelper.prepareMigrationToNullSupportStep();

        RealmConfiguration config = configFactory.createConfigurationBuilder()
                .name(REALM_NAME)
                .encryptionKey(oldPassword)
                .migration(realmMigration)
                .schema(StringOnly.class)
                .build();

        // 1. Write a copy of the encrypted Realm to a new file
        Realm testRealm = Realm.getInstance(config);
        File copiedRealm = new File(config.getRealmDirectory(), "encrypted-copy.realm");
        if (copiedRealm.exists()) {
            assertTrue(copiedRealm.delete());
        }
        testRealm.writeEncryptedCopyTo(copiedRealm, newPassword);
        testRealm.close();

        // 2. Delete the old Realm.
        Realm.deleteRealm(config);

        // 3. Rename the new file to the old file name.
        assertTrue(copiedRealm.renameTo(new File(config.getRealmDirectory(), REALM_NAME)));

        // 4. Try to open the file again with the new password
        // If the configuration cache wasn't cleared this would fail as we would detect two
        // configurations with 2 different passwords pointing to the same file.
        RealmConfiguration newConfig = configFactory.createConfigurationBuilder()
                .name(REALM_NAME)
                .encryptionKey(newPassword)
                .migration(realmMigration)
                .schema(StringOnly.class)
                .build();

        testRealm = Realm.getInstance(newConfig);
        assertNotNull(testRealm);
        testRealm.close();
    }

