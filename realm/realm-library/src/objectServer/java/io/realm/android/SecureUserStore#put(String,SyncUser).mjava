    /**
     * Store user as serialised and encrypted (Json), inside the private {@link android.content.SharedPreferences}.
     * @param key the {@link android.content.SharedPreferences} key.
     * @param user we want to save.
     * @return The previous user saved with this key or {@code null} if no user was replaced.
     */
    @Override
    public SyncUser put(String key, SyncUser user) {
        String previousUser = sp.getString(key, null);
        SharedPreferences.Editor editor = sp.edit();
        String userSerialisedAndEncrypted;
        try {
            userSerialisedAndEncrypted = cipherClient.encrypt(user.toJson());
        } catch (KeyStoreException e) {
            e.printStackTrace();
            return null;
        }
        editor.putString(key, userSerialisedAndEncrypted);
        // Optimistically save. If the user isn't saved due to a process crash it isn't dangerous.
        editor.apply();

        if (UserStore.CURRENT_USER_KEY.equals(key)) {
            cachedCurrentUser = user;
        }
        if (previousUser != null) {
            try {
                String userSerialisedAndDecrypted = cipherClient.decrypt(previousUser);
                return SyncUser.fromJson(userSerialisedAndDecrypted);
            } catch (KeyStoreException e) {
                e.printStackTrace();
                return null;
            }
        } else {
            return null;
        }
    }

