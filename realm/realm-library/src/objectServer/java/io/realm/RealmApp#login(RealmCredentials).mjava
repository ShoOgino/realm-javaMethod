    /**
     * FIXME
     *
     * @param credentials
     * @return
     * @throws ObjectServerError
     */
    public RealmUser login(RealmCredentials credentials) throws ObjectServerError {
        checkNull(credentials, "credentials");
        AtomicReference<RealmUser> user = new AtomicReference<>(null);
        AtomicReference<ObjectServerError> error = new AtomicReference<>(null);
        nativeLogin(nativePtr, credentials.osCredentials.getNativePtr(), new OsJavaNetworkTransport.NetworkTransportJNIResultCallback() {
            @Override
            public void onSuccess(Object result) {
                Long nativePtr = (Long) result;
                user.set(new RealmUser(nativePtr));
            }
            @Override
            public void onError(String nativeErrorCategory, int nativeErrorCode, String errorMessage) {
                ErrorCode code = ErrorCode.fromNativeError(nativeErrorCategory, nativeErrorCode);
                if (code == ErrorCode.UNKNOWN) {
                    // In case of UNKNOWN errors parse as much error information on as possible.
                    String detailedErrorMessage = String.format("{%s::%s} %s", nativeErrorCategory, nativeErrorCode, errorMessage);
                    error.set(new ObjectServerError(code, detailedErrorMessage));
                } else {
                    error.set(new ObjectServerError(code, errorMessage));
                }
            }
        });

        // ObjectStore runs all code in the same thread even though it is using a callback.
        // So results should be available here.
        if (user.get() == null && error.get() == null) {
            throw new IllegalStateException("Network result callback did not trigger correctly");
        }
        if (user.get() != null) {
            return user.get();
        } else {
            throw error.get();
        }
    }

