    /**
     * Changes another user's password. This is done synchronously and involves the network, so calling this method on the
     * Android UI thread will always crash.
     * <p>
     * This user needs admin privilege in order to change someone else's password.
     * <p>
     * <b>WARNING:</b> Changing a user's password through an authentication server that doesn't use HTTPS is a major
     * security flaw, and should only be done while testing.
     *
     * @param userId identity ({@link #getIdentity()}) of the user we want to change the password for.
     * @param newPassword the user's new password.
     * @throws ObjectServerError if the password could not be changed.
     */
    public void changePassword(final String userId, final String newPassword) throws ObjectServerError {
        if (newPassword == null) {
            throw new IllegalArgumentException("Not-null 'newPassword' required.");
        }

        if (Util.isEmptyString(userId)) {
            throw new IllegalArgumentException("None empty 'userId' required.");
        }

        if (userId.equals(getIdentity())) { // user want's to change his/her own password
            changePassword(newPassword);

        } else {
            if (!isAdmin()) {
                throw new IllegalStateException("User need to be admin in order to change another user's password.");
            }

            AuthenticationServer authServer = SyncManager.getAuthServer();
            ChangePasswordResponse response = authServer.changePassword(getSyncUser().getUserToken(), userId, newPassword, getAuthenticationUrl());
            if (!response.isValid()) {
                throw response.getError();
            }
        }
    }

