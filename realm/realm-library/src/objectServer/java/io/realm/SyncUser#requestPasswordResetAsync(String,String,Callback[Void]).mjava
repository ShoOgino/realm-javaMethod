    /**
     * Request a password reset email to be sent to a user's email.
     * This will not fail, even if the email doesn't belong to a Realm Object Server user.
     * <p>
     * This can only be used for users who authenticated with the {@link SyncCredentials.IdentityProvider#USERNAME_PASSWORD}
     * provider, and passed a valid email address as a username.
     *
     * @param email email that corresponds to the user's username.
     * @param authenticationUrl the url used to authenticate the user.
     * @param callback callback when the request has completed or failed. The callback will always happen on the same thread
     * as this method is called on.
     * @return representation of the async task that can be used to cancel it if needed.
     * @throws IllegalStateException if this method is called on a non-looper thread.
     * @throws IllegalArgumentException if no email or authenticationUrl was provided.
     */
    public static RealmAsyncTask requestPasswordResetAsync(final String email, final String authenticationUrl, final Callback<Void> callback) {
        checkLooperThread("Asynchronous requesting a password reset is only possible from looper threads.");
        //noinspection ConstantConditions
        if (callback == null) {
            throw new IllegalArgumentException("Non-null 'callback' required.");
        }

        return new Request<Void>(SyncManager.NETWORK_POOL_EXECUTOR, callback) {
            @Override
            public Void run() {
                requestPasswordReset(email, authenticationUrl);
                return null;
            }
        }.start();
    }

