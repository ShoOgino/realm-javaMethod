    /**
     * Changes another user's password asynchronously.
     * <p>
     * This user needs admin privilege in order to change someone else's password.
     *
     * <b>WARNING:</b> Changing a users password using an authentication server that doesn't use HTTPS is a major
     * security flaw, and should only be done while testing.
     *
     * @param userId identity ({@link #getIdentity()}) of the user we want to change the password for.
     * @param newPassword the user's new password.
     * @param callback callback when login has completed or failed. The callback will always happen on the same thread
     * as this method is called on.
     * @return representation of the async task that can be used to cancel it if needed.
     * @throws IllegalArgumentException if not on a Looper thread.
     */
    public RealmAsyncTask changePasswordAsync(final String userId, final String newPassword, final Callback<SyncUser> callback) {
        checkLooperThread("Asynchronous changing password is only possible from looper threads.");
        //noinspection ConstantConditions
        if (callback == null) {
            throw new IllegalArgumentException("Non-null 'callback' required.");
        }

        return new Request<SyncUser>(SyncManager.NETWORK_POOL_EXECUTOR, callback) {
            @Override
            public SyncUser run() {
                changePassword(userId, newPassword);
                return SyncUser.this;
            }
        }.start();
    }

