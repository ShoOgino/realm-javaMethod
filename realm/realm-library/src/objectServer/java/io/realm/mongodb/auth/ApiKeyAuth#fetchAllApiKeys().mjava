    /**
     * Fetches all API keys associated with the user.
     *
     * @throws AppException if the server failed to fetch the API keys.
     */
    public List<UserApiKey> fetchAllApiKeys() throws AppException {
        AtomicReference<List<UserApiKey>> success = new AtomicReference<>(null);
        AtomicReference<AppException> error = new AtomicReference<>(null);
        call(TYPE_FETCH_ALL, null, new OsJNIResultCallback<List<UserApiKey>>(success, error) {
            @Override
            protected List<UserApiKey> mapSuccess(Object result) {
                Object[] keyData = (Object[]) result;
                List<UserApiKey> list = new ArrayList<>();
                for (int i = 0; i < keyData.length; i++) {
                    list.add(createKeyFromNative((Object[]) keyData[i]));
                }
                return list;
            }
        });
        return ResultHandler.handleResult(success, error);
    }

