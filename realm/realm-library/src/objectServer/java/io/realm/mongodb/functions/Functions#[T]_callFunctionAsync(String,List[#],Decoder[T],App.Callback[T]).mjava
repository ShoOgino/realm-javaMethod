    /**
     * Call a MongoDB Realm function asynchronously with custom result decoder.
     * <p>
     * This is the asynchronous equivalent of {@link #callFunction(String, List, Decoder)}.
     *
     * @param name Name of the Stitch function to call.
     * @param args Arguments to the Stitch function.
     * @param resultDecoder The decoder used to decode the result.
     * @param callback The callback that will receive the result or any errors from the request.
     * @param <T> The type that the response will be decoded as using the {@code resultDecoder}
     * @return Result of the Stitch function.
     *
     * @throws IllegalStateException if not called on a looper thread.
     *
     * @see #callFunction(String, List, Class)
     * @see #callFunctionAsync(String, List, Class, CodecRegistry, App.Callback)
     * @see AppConfiguration#getDefaultCodecRegistry()
     */
    public <T> RealmAsyncTask callFunctionAsync(String name, List<?> args, Decoder<T> resultDecoder, App.Callback<T> callback) {
        Util.checkLooperThread("Asynchronous functions is only possible from looper threads.");
        return new Request<T>(App.NETWORK_POOL_EXECUTOR, callback) {
            @Override
            public T run() throws ObjectServerError {
                return invoke(name, args, defaultCodecRegistry, resultDecoder);
            }
        }.start();
    }

