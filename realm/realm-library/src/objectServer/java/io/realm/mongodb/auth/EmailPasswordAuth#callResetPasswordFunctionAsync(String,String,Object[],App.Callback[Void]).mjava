    /**
     * Call the reset password function configured to the
     * {@link Credentials.IdentityProvider#EMAIL_PASSWORD} provider.
     *
     * @param email the email of the user.
     * @param newPassword the new password of the user.
     * @param args any additional arguments provided to the reset function. All arguments must
     * be able to be converted to JSON compatible values using {@code toString()}.
     * @param callback callback when the reset has completed or failed. The callback will always
     * happen on the same thread as this this method is called on.
     * @throws IllegalStateException if called from a non-looper thread.
     */
    public RealmAsyncTask callResetPasswordFunctionAsync(String email, String newPassword, Object[] args, App.Callback<Void> callback) {
        Util.checkLooperThread("Asynchronous calling the password reset function is only possible from looper threads.");
        return new Request<Void>(NETWORK_POOL_EXECUTOR, callback) {
            @Override
            public Void run() throws AppException {
                callResetPasswordFunction(email, newPassword, args);
                return null;
            }
        }.start();
    }

