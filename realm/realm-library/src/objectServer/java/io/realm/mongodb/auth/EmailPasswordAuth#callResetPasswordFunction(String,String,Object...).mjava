    /**
     * Call the reset password function configured to the
     * {@link Credentials.IdentityProvider#EMAIL_PASSWORD} provider.
     *
     * @param email the email of the user.
     * @param newPassword the new password of the user.
     * @param args any additional arguments provided to the reset function. All arguments must
     * be able to be converted to JSON compatible values using {@code toString()}.
     * @throws AppException if the server failed to confirm the user.
     */
    public void callResetPasswordFunction(String email, String newPassword, Object... args) throws AppException {
        Util.checkEmpty(email, "email");
        Util.checkEmpty(newPassword, "newPassword");
        String encodedArgs = JniBsonProtocol.encode(Arrays.asList(args), app.getConfiguration().getDefaultCodecRegistry());
        AtomicReference<AppException> error = new AtomicReference<>(null);
        call(TYPE_CALL_RESET_PASSWORD_FUNCTION, new OsJNIVoidResultCallback(error), email, newPassword, encodedArgs);
        ResultHandler.handleResult(null, error);
    }

