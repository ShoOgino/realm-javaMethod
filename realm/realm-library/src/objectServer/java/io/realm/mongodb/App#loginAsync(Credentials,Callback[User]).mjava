    /**
     * Logs in as a user with the given credentials associated with an authentication provider.
     * <p>
     * The user who logs in becomes the current user. Other App functionality acts on behalf of
     * the current user.
     * <p>
     * If there was already a current user, that user is still logged in and can be found in the
     * list returned by {@link #allUsers()}.
     * <p>
     * It is also possible to switch between which user is considered the current user by using
     * {@link #switchUser(User)}.
     *
     * @param credentials the credentials representing the type of login.
     * @param callback callback when logging in has completed or failed. The callback will always
     * happen on the same thread as this method is called on.
     * @throws IllegalStateException if not called on a looper thread.
     */
     public RealmAsyncTask loginAsync(Credentials credentials, Callback<User> callback) {
        Util.checkLooperThread("Asynchronous log in is only possible from looper threads.");
        return new Request<User>(NETWORK_POOL_EXECUTOR, callback) {
            @Override
            public User run() throws AppException {
                return login(credentials);
            }
        }.start();
    }

