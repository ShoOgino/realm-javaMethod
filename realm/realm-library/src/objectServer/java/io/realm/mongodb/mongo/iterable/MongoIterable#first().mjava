    /**
     * Helper to return the first item in the iterator or null.
     * <p>
     * The result is wrapped in a {@link Task} since the iterator should be capable of
     * asynchronously retrieve documents from the server.
     *
     * @return a task containing the first item or null.
     */
    public Task<ResultT> first() {
        AtomicReference<ResultT> success = new AtomicReference<>(null);
        AtomicReference<ObjectServerError> error = new AtomicReference<>(null);
        OsJNIResultCallback<ResultT> callback = new OsJNIResultCallback<ResultT>(success, error) {
            @Override
            protected ResultT mapSuccess(Object result) {
                Collection<ResultT> decodedCollection = mapCollection(result);
                Iterator<ResultT> iter = decodedCollection.iterator();
                return iter.hasNext() ? iter.next() : null;
            }
        };

        callNative(callback);

        return dispatcher.dispatchTask(() ->
                ResultHandler.handleResult(success, error)
        );
    }

