    /**
     * Log the user out of the Realm App asynchronously. This will unregister them on the device, stop any
     * synchronization to and from the users' Realms, and those Realms will be deleted next time
     * the app restarts. Therefor logging out should not be done until all changes to Realms have
     * been uploaded to the server.
     * <p>
     * Once the Realm App has confirmed the logout any registered {@link AuthenticationListener}
     * will be notified and user credentials will be deleted from this device.
     * <p>
     * Logging out anonymous users will remove them immediately instead of marking them as
     * {@link User.State#LOGGED_OUT}. All other users will be marked as {@link User.State#LOGGED_OUT}
     * and will still be returned by {@link App#allUsers()}. They can be removed completely by calling
     * {@link #remove()}.
     *
     * @param callback callback when logging out has completed or failed. The callback will always
     * happen on the same thread as this method is called on.
     * @throws IllegalStateException if called from a non-looper thread.
     */
    public RealmAsyncTask logOutAsync(App.Callback<User> callback) {
        Util.checkLooperThread("Asynchronous log out is only possible from looper threads.");
        return new Request<User>(App.NETWORK_POOL_EXECUTOR, callback) {
            @Override
            public User run() throws AppException {
                logOut();
                return User.this;
            }
        }.start();
    }

