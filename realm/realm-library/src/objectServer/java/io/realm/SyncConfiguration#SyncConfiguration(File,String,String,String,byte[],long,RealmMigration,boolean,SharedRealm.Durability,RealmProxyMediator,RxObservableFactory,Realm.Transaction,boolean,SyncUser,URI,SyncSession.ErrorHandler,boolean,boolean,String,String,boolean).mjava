    private SyncConfiguration(File directory,
                                String filename,
                                String canonicalPath,
                                String assetFilePath,
                                byte[] key,
                                long schemaVersion,
                                RealmMigration migration,
                                boolean deleteRealmIfMigrationNeeded,
                                SharedRealm.Durability durability,
                                RealmProxyMediator schemaMediator,
                                RxObservableFactory rxFactory,
                                Realm.Transaction initialDataTransaction,
                                boolean readOnly,
                                SyncUser user,
                                URI serverUrl,
                                SyncSession.ErrorHandler errorHandler,
                                boolean deleteRealmOnLogout,
                                boolean syncClientValidateSsl,
                                String serverCertificateAssetName,
                                String serverCertificateFilePath,
                                boolean waitForInitialData
    ) {
        super(directory,
                filename,
                canonicalPath,
                assetFilePath,
                key,
                schemaVersion,
                migration,
                deleteRealmIfMigrationNeeded,
                durability,
                schemaMediator,
                rxFactory,
                initialDataTransaction,
                readOnly,
                null
        );

        this.user = user;
        this.serverUrl = serverUrl;
        this.errorHandler = errorHandler;
        this.deleteRealmOnLogout = deleteRealmOnLogout;
        this.syncClientValidateSsl = syncClientValidateSsl;
        this.serverCertificateAssetName = serverCertificateAssetName;
        this.serverCertificateFilePath = serverCertificateFilePath;
        this.waitForInitialData = waitForInitialData;
    }

