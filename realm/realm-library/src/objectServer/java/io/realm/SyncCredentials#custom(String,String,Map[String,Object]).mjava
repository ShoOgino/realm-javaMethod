    /**
     * Creates a custom set of credentials. The behaviour will depend on the type of {@code identityProvider} and
     * {@code userInfo} used.
     *
     * @param userIdentifier String identifying the user. Usually a username or user token.
     * @param identityProvider provider used to verify the credentials.
     * @param userInfo data describing the user further or {@code null} if the user does not have any extra data. The
     * data will be serialized to JSON, so all values must be mappable to a valid JSON data type. Custom
     * classes will be converted using {@code toString()}.
     * @return a set of credentials that can be used to log into the Object Server using
     * {@link SyncUser#loginAsync(SyncCredentials, String, SyncUser.Callback)}.
     * @throws IllegalArgumentException if any parameter is either {@code null} or empty.
     */
    public static SyncCredentials custom(String userIdentifier, String identityProvider, Map<String, Object> userInfo) {
        assertStringNotEmpty(userIdentifier, "userIdentifier");
        assertStringNotEmpty(identityProvider, "identityProvider");
        if (userInfo == null) {
            userInfo = new HashMap<String, Object>();
        }
        return new SyncCredentials(userIdentifier, identityProvider, userInfo);
    }

