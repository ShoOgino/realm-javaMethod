    /**
     * Accepts a permission offer sent by another user. Once this offer is accepted successfully, the permissions
     * described by the token will be granted.
     *
     * @param offerToken token representing the permission offer.
     * @param callback with the permission details that were accepted.
     * @return {@link RealmAsyncTask} that can be used to cancel the task if needed.
     * @throws IllegalStateException if this method is called from a thread without a looper.
     */
    public RealmAsyncTask acceptPermissionsOfferAsync(String offerToken, Callback<String> callback) {
        checkLooperThread("Asynchronously accepting an permissions offer is only possible from looper threads.");
        checkCallbackNotNull(callback);
        return new Request<String>(SyncManager.NETWORK_POOL_EXECUTOR, callback) {
            @Override
            public String run() throws ObjectServerError {
                return acceptPermissionsOffer(offerToken);
            }
        }.start();
    }

