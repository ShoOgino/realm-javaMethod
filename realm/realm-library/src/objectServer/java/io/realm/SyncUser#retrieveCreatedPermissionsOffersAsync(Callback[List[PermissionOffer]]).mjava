    /**
     * Returns the list of offers created by this user. These offers can be revoked again by calling
     * {@link #invalidatePermissionsOfferAsync(String, Callback)} or sent to other users by sending the
     * {@link PermissionOffer#getToken()}.
     *
     * @param callback that will receive the list of available offers.
     * @return {@link RealmAsyncTask} that can be used to cancel the task if needed.
     * @throws IllegalStateException if this method is called from a thread without a looper.
     */
    public RealmAsyncTask retrieveCreatedPermissionsOffersAsync(Callback<List<PermissionOffer>> callback) {
        checkLooperThread("Asynchronously getting all permission offers is only possible from looper threads.");
        checkCallbackNotNull(callback);
        return new Request<List<PermissionOffer>>(SyncManager.NETWORK_POOL_EXECUTOR, callback) {
            @Override
            public List<PermissionOffer> run() throws ObjectServerError {
                return retrieveCreatedPermissionsOffers();
            }
        }.start();
    }

