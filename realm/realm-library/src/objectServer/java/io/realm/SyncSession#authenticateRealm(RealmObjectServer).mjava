    // Authenticate by getting access tokens for the specific Realm
    private void authenticateRealm(final RealmObjectServer authServer) {
        if (networkRequest != null) {
            networkRequest.cancel();
        }
        clearScheduledAccessTokenRefresh();

        onGoingAccessTokenQuery.set(true);
        // Authenticate in a background thread. This allows incremental backoff and retries in a safe manner.
        Future<?> task = SyncManager.NETWORK_POOL_EXECUTOR.submit(new ExponentialBackoffTask<AuthenticateResponse>() {
            @Override
            protected AuthenticateResponse execute() {
                if (!isClosed && !Thread.currentThread().isInterrupted()) {
                    return authServer.loginToRealm(
                            getUser().getRefreshToken(), //refresh token in fact
                            resolvedRealmURI,
                            getUser().getAuthenticationUrl()
                    );
                }
                return null;
            }

            @Override
            protected void onSuccess(AuthenticateResponse response) {
                RealmLog.debug("Session[%s]: Access token acquired", configuration.getPath());
                if (!isClosed && !Thread.currentThread().isInterrupted()) {
                    URI realmUrl = configuration.getServerUrl();
                    getUser().addRealm(configuration, response.getAccessToken());
                    if (nativeRefreshAccessToken(configuration.getPath(), response.getAccessToken().value(), realmUrl.toString())) {
                        scheduleRefreshAccessToken(authServer, response.getAccessToken().expiresMs());

                    } else {
                        // token not applied, no refresh will be scheduled
                        onGoingAccessTokenQuery.set(false);
                    }
                }
            }

            @Override
            protected void onError(AuthenticateResponse response) {
                onGoingAccessTokenQuery.set(false);
                RealmLog.debug("Session[%s]: Failed to get access token (%s)", configuration.getPath(),
                        response.getError().getErrorCode());
                if (!isClosed
                        && !Thread.currentThread().isInterrupted()
                        // We might be interrupted while negotiating an access token with the Realm Object Server
                        // This will result in a InterruptedIOException from OkHttp. We should ignore this as
                        // well.
                        && !(response.getError().getException() instanceof InterruptedIOException)) {
                    errorHandler.onError(SyncSession.this, response.getError());
                }
            }
        });
        networkRequest = new RealmAsyncTaskImpl(task, SyncManager.NETWORK_POOL_EXECUTOR);
    }

