    // Authenticate by getting access tokens for the specific Realm
    private void authenticateRealm(final AuthenticationServer authServer) {
        if (networkRequest != null) {
            networkRequest.cancel();
        }
        clearScheduledAccessTokenRefresh();

        // Authenticate in a background thread. This allows incremental backoff and retries in a safe manner.
        Future<?> task = SyncManager.NETWORK_POOL_EXECUTOR.submit(new ExponentialBackoffTask<AuthenticateResponse>() {
            @Override
            protected AuthenticateResponse execute() {
                if (!isClosed && !Thread.currentThread().isInterrupted()) {
                    return authServer.loginToRealm(
                            getUser().getAccessToken(),//refresh token in fact
                            configuration.getServerUrl(),
                            getUser().getSyncUser().getAuthenticationUrl()
                    );
                }
                return null;
            }

            @Override
            protected void onSuccess(AuthenticateResponse response) {
                RealmLog.debug("Session[%s]: Access token acquired", configuration.getPath());
                if (!isClosed && !Thread.currentThread().isInterrupted()) {
                    ObjectServerUser.AccessDescription desc = new ObjectServerUser.AccessDescription(
                            response.getAccessToken(),
                            configuration.getPath(),
                            configuration.shouldDeleteRealmOnLogout()
                    );
                    getUser().getSyncUser().addRealm(configuration.getServerUrl(), desc);
                    // schedule a token refresh before it expires
                    if (nativeRefreshAccessToken(configuration.getPath(), getUser().getSyncUser().getAccessToken(configuration.getServerUrl()).value(), configuration.getServerUrl().toString())) {
                        scheduleRefreshAccessToken(authServer, response.getAccessToken().expiresMs());

                    } else {
                        // token not applied, no refresh will be scheduled
                        onGoingAccessTokenQuery.set(false);
                    }
                }
            }

            @Override
            protected void onError(AuthenticateResponse response) {
                onGoingAccessTokenQuery.set(false);
                RealmLog.debug("Session[%s]: Failed to get access token (%d)", configuration.getPath(), response.getError().getErrorCode());
                if (!isClosed && !Thread.currentThread().isInterrupted()) {
                    errorHandler.onError(SyncSession.this, response.getError());
                }
            }
        });
        networkRequest = new RealmAsyncTaskImpl(task, SyncManager.NETWORK_POOL_EXECUTOR);
    }

