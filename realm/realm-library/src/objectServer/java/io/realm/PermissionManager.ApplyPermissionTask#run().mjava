        @Override
        public void run() {
            if (checkAndReportInvalidState()) {
                return;
            }

            // Save PermissionChange object. It will be synchronized to the server where it will be processed.
            Realm.Transaction transaction = new Realm.Transaction() {
                @Override
                public void execute(Realm realm) {
                    if (checkAndReportInvalidState()) { return; }
                    realm.insertOrUpdate(unmanagedChangeRequest);
                }
            };

            // If the PermissionChange was successfully written to Realm, we need to wait for it to be processed.
            // Register a ChangeListener on the object and wait for the proper response code, which can then be
            // converted to a proper response to the user.
            Realm.Transaction.OnSuccess onSuccess = new Realm.Transaction.OnSuccess() {
                @Override
                public void onSuccess() {
                    if (checkAndReportInvalidState()) { return; }

                    // Find PermissionChange object we just added
                    managedChangeRequest = managementRealm.where(PermissionChange.class)
                            .equalTo("id", changeRequestId)
                            .findFirstAsync();


                    // Wait for it to be processed
                    RealmObject.addChangeListener(managedChangeRequest, new RealmChangeListener<PermissionChange>() {
                        @Override
                        public void onChange(PermissionChange permissionChange) {
                            if (checkAndReportInvalidState()) {
                                RealmObject.removeChangeListener(managedChangeRequest, this);
                                return;
                            }
                            handleServerStatusChanges(permissionChange, new Runnable() {
                                @Override
                                public void run() {
                                    notifyCallbackWithSuccess();
                                }
                            });
                        }
                    });
                }
            };

            // Critical error: The PermissionChange could not be written to the Realm.
            // Report it back to the user.
            Realm.Transaction.OnError onError = new Realm.Transaction.OnError() {
                @Override
                public void onError(Throwable error) {
                    if (checkAndReportInvalidState()) { return; }
                    notifyCallbackWithError(new ObjectServerError(ErrorCode.UNKNOWN, error));
                }
            };

            // Run
            transactionTask = managementRealm.executeTransactionAsync(transaction, onSuccess, onError);
        }

