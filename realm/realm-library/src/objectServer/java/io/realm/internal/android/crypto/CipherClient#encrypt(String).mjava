    /**
     * Takes some plain text {@link String} and return the encrypted version
     * of this {@link String} using the Android Key Store.
     *
     * @param user represents the Token of a {@link SyncUser}.
     * @return the encrypted Token.
     * @throws KeyStoreException in case the Key Store is locked or other error.
     */
    public String encrypt(String user) throws KeyStoreException {
        if (syncCrypto.is_keystore_unlocked()) {
            try {
                syncCrypto.create_key();
                String encrypted = syncCrypto.encrypt(user);
                return encrypted;
            } catch (KeyStoreException ex) {
                throw new KeyStoreException(ex);
            }
        } else {
            throw new KeyStoreException("Trying to use SecureUserStore without an unlocked KeyStore");
        }
    }

