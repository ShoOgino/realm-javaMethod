    public <ResultT> ResultT findOne(
            final Bson filter,
            final RemoteFindOptions options,
            final Class<ResultT> resultClass) {
        AtomicReference<ResultT> success = new AtomicReference<>(null);
        AtomicReference<ObjectServerError> error = new AtomicReference<>(null);
        OsJNIResultCallback<ResultT> callback = new OsJNIResultCallback<ResultT>(success, error) {
            @Override
            protected ResultT mapSuccess(Object result) {
                return findOneSuccessMapper(result, resultClass);
            }
        };

        String encodedFilter = JniBsonProtocol.encode(filter, codecRegistry);
        String projectionString = JniBsonProtocol.encode(options.getProjection(), codecRegistry);
        String sortString = JniBsonProtocol.encode(options.getSort(), codecRegistry);
        nativeFindOneWithOptions(nativePtr, encodedFilter, projectionString, sortString, options.getLimit(), callback);

        return ResultHandler.handleResult(success, error);
    }

