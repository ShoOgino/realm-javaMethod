    @Override
    public void downloadInitialSubscriptions(Realm realm) {
        if (isPartialRealm(realm.getConfiguration())) {
            SyncConfiguration syncConfig = (SyncConfiguration) realm.getConfiguration();
            if (syncConfig.shouldWaitForInitialRemoteData()) {
                RealmResults<Subscription> pendingSubscriptions = realm.where(Subscription.class)
                        .equalTo("status", Subscription.State.PENDING.getValue())
                        .findAll();
                SyncSession session = SyncManager.getSession(syncConfig);

                // Continue once all subscriptions are either ACTIVE or ERROR'ed.
                while (!pendingSubscriptions.isEmpty()) {
                    try {
                        session.uploadAllLocalChanges(); // Uploads subscriptions (if any)
                        session.downloadAllServerChanges(); // Download subscriptions (if any)
                    } catch (InterruptedException e) {
                        throw new DownloadingRealmInterruptedException(syncConfig, e);
                    }
                    realm.refresh();
                }

                // If some of the subscriptions failed to become ACTIVE, report them and cancel opening
                // the Realm. Note, this should only happen if the client is contacting an older
                // version of the server which are lacking query support for features available
                // in the client SDK.
                RealmResults<Subscription> failedSubscriptions = realm.where(Subscription.class)
                        .equalTo("status", Subscription.State.ERROR.getValue())
                        .findAll();
                if (!failedSubscriptions.isEmpty()) {
                    String errorMessage = "Some initial subscriptions encountered errors:" + Arrays.toString(failedSubscriptions.toArray());
                    throw new DownloadingRealmInterruptedException(syncConfig, errorMessage);
                }
            }
        }
    }

