    // Schedule a refresh. This method cannot fail, but will continue retrying until either the app is killed
    // or the attempt was successful.
    // We should probably optimize this. See https://github.com/realm/realm-java-private/issues/140
    public void scheduleRefresh() {
        final long expire = refreshToken.expiresMs();
        final AuthenticationServer server = SyncManager.getAuthServer();
        Future<?> task = SyncManager.NETWORK_POOL_EXECUTOR.submit(new ExponentialBackoffTask<AuthenticateResponse>() {
            @Override
            protected AuthenticateResponse execute() {
                long timeToExpiration = System.currentTimeMillis() - expire;
                if (timeToExpiration - REFRESH_WINDOW_MS > 0) {
                    SystemClock.sleep(timeToExpiration);
                }
                return server.refreshUser(refreshToken, authenticationUrl);
            }

            @Override
            protected void onSuccess(AuthenticateResponse response) {
                setRefreshToken(response.getRefreshToken());
            }

            @Override
            protected void onError(AuthenticateResponse response) {
                RealmLog.warn("Failed refreshing a user.\n" + response.getError().toString());
            }
        });
        refreshTask = new RealmAsyncTaskImpl(task, SyncManager.NETWORK_POOL_EXECUTOR);
    }

