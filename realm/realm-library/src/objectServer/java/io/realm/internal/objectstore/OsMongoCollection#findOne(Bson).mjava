    public DocumentT findOne(final Bson filter) {
        AtomicReference<DocumentT> success = new AtomicReference<>(null);
        AtomicReference<ObjectServerError> error = new AtomicReference<>(null);
        OsJNIResultCallback<DocumentT> callback = new OsJNIResultCallback<DocumentT>(success, error) {
            @Override
            protected DocumentT mapSuccess(Object result) {
                return findOneSuccessMapper(result, documentClass);
            }
        };

        String encodedFilter = JniBsonProtocol.encode(filter, codecRegistry);
        nativeFindOne(nativePtr, encodedFilter, callback);

        return ResultHandler.handleResult(success, error);
    }

