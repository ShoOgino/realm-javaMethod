    @Override
    public Object[] getSyncConfigurationOptions(RealmConfiguration config) {
        if (config instanceof SyncConfiguration) {
            SyncConfiguration syncConfig = (SyncConfiguration) config;
            SyncUser user = syncConfig.getUser();
            String rosServerUrl = syncConfig.getServerUrl().toString();
            String rosUserIdentity = user.getIdentity();
            String syncRealmAuthUrl = user.getAuthenticationUrl().toString();
            String syncUserRefreshToken = user.getRefreshToken().toJson().toString();
            String syncUserAccessToken = user.getAccessToken(((SyncConfiguration) config)).toJson().toString();
            byte sessionStopPolicy = syncConfig.getSessionStopPolicy().getNativeValue();
            String urlPrefix = syncConfig.getUrlPrefix();
            String customAuthorizationHeaderName = SyncManager.getAuthorizationHeaderName(syncConfig.getServerUrl());
            Map<String, String> customHeaders = SyncManager.getCustomRequestHeaders(syncConfig.getServerUrl());
            return new Object[]{
                    rosUserIdentity,
                    rosServerUrl,
                    syncRealmAuthUrl,
                    syncUserRefreshToken,
                    syncUserAccessToken,
                    syncConfig.syncClientValidateSsl(),
                    syncConfig.getServerCertificateFilePath(),
                    sessionStopPolicy,
                    urlPrefix,
                    customAuthorizationHeaderName,
                    customHeaders,
                    syncConfig.getClientResyncMode().getNativeValue()
            };
        } else {
            return new Object[11];
        }
    }

