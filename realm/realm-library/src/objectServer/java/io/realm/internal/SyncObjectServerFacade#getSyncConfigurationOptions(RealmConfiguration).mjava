    @Override
    public Object[] getSyncConfigurationOptions(RealmConfiguration config) {
        if (config instanceof SyncConfiguration) {
            SyncConfiguration syncConfig = (SyncConfiguration) config;
            RealmUser user = syncConfig.getUser();
            RealmApp app = user.getApp();
            String rosServerUrl = syncConfig.getServerUrl().toString();
            String rosUserIdentity = user.getId();
            String syncRealmAuthUrl = user.getApp().getConfiguration().getBaseUrl().toString();
            String syncUserRefreshToken = user.getRefreshToken();
            String syncUserAccessToken = user.getAccessToken();
            String deviceId = user.getDeviceId();
            byte sessionStopPolicy = syncConfig.getSessionStopPolicy().getNativeValue();
            String urlPrefix = syncConfig.getUrlPrefix();
            String customAuthorizationHeaderName = app.getConfiguration().getAuthorizationHeaderName();
            Map<String, String> customHeaders = app.getConfiguration().getCustomRequestHeaders();

            // TODO Simplify. org.bson serialization only allows writing full documents, so the partition
            //  key is embedded in a document with key 'value' and unwrapped in JNI.
            BsonValue partitionValue = syncConfig.getPartitionValue();
            String encodedPartitionValue;
            switch (partitionValue.getBsonType()) {
                case STRING:
                case OBJECT_ID:
                case INT32:
                case INT64:
                    encodedPartitionValue = JniBsonProtocol.encode(partitionValue, RealmAppConfiguration.DEFAULT_BSON_CODEC_REGISTRY);
                    break;
                default:
                    throw new IllegalArgumentException("Unsupported type: " + partitionValue);
            }

            int i = 0;
            Object[] configObj = new Object[SYNC_CONFIG_OPTIONS];
            configObj[i++] = rosUserIdentity;
            configObj[i++] = rosServerUrl;
            configObj[i++] = syncRealmAuthUrl;
            configObj[i++] = syncUserRefreshToken;
            configObj[i++] = syncUserAccessToken;
            configObj[i++] = deviceId;
            configObj[i++] = sessionStopPolicy;
            configObj[i++] = urlPrefix;
            configObj[i++] = customAuthorizationHeaderName;
            configObj[i++] = customHeaders;
            configObj[i++] = OsRealmConfig.CLIENT_RESYNC_MODE_MANUAL;
            configObj[i++] = encodedPartitionValue;
            configObj[i++] = app.getSync();
            return configObj;
        } else {
            return new Object[SYNC_CONFIG_OPTIONS];
        }
    }

