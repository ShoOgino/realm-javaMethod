    @Override
    public Object[] getSyncConfigurationOptions(RealmConfiguration config) {
        if (config instanceof SyncConfiguration) {
            SyncConfiguration syncConfig = (SyncConfiguration) config;
            RealmUser user = syncConfig.getUser();
            RealmApp app = user.getApp();
            String rosServerUrl = syncConfig.getServerUrl().toString();
            String rosUserIdentity = user.getId();
            String syncRealmAuthUrl = user.getApp().getConfiguration().getBaseUrl().toString();
            String syncUserRefreshToken = user.getRefreshToken();
            String syncUserAccessToken = user.getAccessToken();
            String deviceId = user.getDeviceId();
            byte sessionStopPolicy = syncConfig.getSessionStopPolicy().getNativeValue();
            String urlPrefix = syncConfig.getUrlPrefix();
            String customAuthorizationHeaderName = app.getConfiguration().getAuthorizationHeaderName();
            Map<String, String> customHeaders = app.getConfiguration().getCustomRequestHeaders();

            // Temporary work-around for serializing supported bson values
            BsonValue val = syncConfig.getPartitionValue();
            String partitionValue = null;
            if (val.isString()) {
                partitionValue = "\"" + val.asString().getValue() + "\"";
            } else if (val.isInt32()) {
                partitionValue = "{ \"$bsonInt\" : " + val.asInt32().intValue() + " }";
            } else if (val.isInt64()) {
                partitionValue = "{ \"$bsonLong\" : " + val.asInt64().longValue() + " }";
            } else if (val.isObjectId()) {
                partitionValue = "{ \"$oid\" : " + val.asObjectId().toString() + " }";
            } else {
                throw new IllegalArgumentException("Unsupported type: " + val);
            }
            int i = 0;
            Object[] configObj = new Object[SYNC_CONFIG_OPTIONS];
            configObj[i++] = rosUserIdentity;
            configObj[i++] = rosServerUrl;
            configObj[i++] = syncRealmAuthUrl;
            configObj[i++] = syncUserRefreshToken;
            configObj[i++] = syncUserAccessToken;
            configObj[i++] = deviceId;
            configObj[i++] = sessionStopPolicy;
            configObj[i++] = urlPrefix;
            configObj[i++] = customAuthorizationHeaderName;
            configObj[i++] = customHeaders;
            configObj[i++] = OsRealmConfig.CLIENT_RESYNC_MODE_MANUAL;
            configObj[i++] = partitionValue;
            configObj[i++] = app.getSync();
            return configObj;
        } else {
            return new Object[SYNC_CONFIG_OPTIONS];
        }
    }

