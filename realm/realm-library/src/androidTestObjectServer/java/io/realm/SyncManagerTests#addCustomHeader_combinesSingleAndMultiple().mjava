    @Test
    public void addCustomHeader_combinesSingleAndMultiple() throws URISyntaxException {
        Map<String, String> inputHeaders1 = new LinkedHashMap<>();
        inputHeaders1.put("header1", "val1");
        Map<String, String> inputHeaders2 = new LinkedHashMap<>();
        inputHeaders2.put("header2", "val2");

        SyncManager.addCustomRequestHeader("header3", "val3");
        SyncManager.addCustomRequestHeaders(inputHeaders1);
        SyncManager.addCustomRequestHeader("header4", "val4", "realm.io");
        SyncManager.addCustomRequestHeaders(inputHeaders2, "realm.io");

        Map<String, String> localhostHeaders = SyncManager.getCustomRequestHeaders(new URI("http://localhost"));
        assertEquals(2, localhostHeaders.size());
        Iterator<Map.Entry<String, String>> it = localhostHeaders.entrySet().iterator();
        Map.Entry<String, String> item = it.next();
        assertEquals("header3", item.getKey());
        assertEquals("val3", item.getValue());
        item = it.next();
        assertEquals("header1", item.getKey());
        assertEquals("val1", item.getValue());

        Map<String, String> realmioHeaders = SyncManager.getCustomRequestHeaders(new URI("http://realm.io"));
        it = realmioHeaders.entrySet().iterator();
        assertEquals(4, realmioHeaders.size());
        item = it.next();
        assertEquals("header3", item.getKey());
        assertEquals("val3", item.getValue());
        item = it.next();
        assertEquals("header1", item.getKey());
        assertEquals("val1", item.getValue());
        item = it.next();
        assertEquals("header4", item.getKey());
        assertEquals("val4", item.getValue());
        item = it.next();
        assertEquals("header2", item.getKey());
        assertEquals("val2", item.getValue());
    }

