    @Test
    public void allSessions() {
        String url1 = "realm://objectserver.realm.io/default";
        String url2 = "realm://objectserver.realm.io/~/default";

        SyncUser user = createTestUser();
        assertEquals(0, user.allSessions().size());

        SyncConfiguration configuration1 = new SyncConfiguration.Builder(user, url1).modules(new AllTypesModelModule()).build();
        Realm realm1 = Realm.getInstance(configuration1);
        List<SyncSession> allSessions = user.allSessions();
        assertEquals(1, allSessions.size());
        Iterator<SyncSession> iter = allSessions.iterator();
        SyncSession session = iter.next();
        assertEquals(user, session.getUser());
        assertEquals(url1, session.getServerUrl().toString());

        SyncConfiguration configuration2 = new SyncConfiguration.Builder(user, url2).modules(new AllTypesModelModule()).build();
        Realm realm2 = Realm.getInstance(configuration2);
        allSessions = user.allSessions();
        assertEquals(2, allSessions.size());
        iter = allSessions.iterator();
        String individualUrl = url2.replace("~", user.getIdentity());
        int foundCount = 0;
        while (iter.hasNext()) {
            session = iter.next();
            assertEquals(user, session.getUser());
            if (individualUrl.equals(session.getServerUrl().toString())) {
                foundCount++;
            }
        }
        assertEquals(1, foundCount);
        realm1.close();

        allSessions = user.allSessions();
        assertEquals(1, allSessions.size());
        iter = allSessions.iterator();
        session = iter.next();
        assertEquals(user, session.getUser());
        assertEquals(individualUrl, session.getServerUrl().toString());

        realm2.close();
        assertEquals(0, user.allSessions().size());
    }

