    private void createWorldReadableRealm(String realmUrl, List modules) {
        HandlerThread t = new HandlerThread("create-realm-thread");
        t.start();
        Handler handler = new Handler(t.getLooper());
        CountDownLatch setupRealm = new CountDownLatch(1);
        handler.post(() -> {
            final boolean oldValue = AndroidCapabilities.EMULATE_MAIN_THREAD;
            SyncUser adminUser = UserFactory.createNicknameUser(Constants.AUTH_URL, "admin", true);
            SyncConfiguration syncConfig = configurationFactory.createSyncConfigurationBuilder(adminUser, realmUrl)
                    .modules(modules)
                    .addModule(new PermissionModule())
                    .waitForInitialRemoteData()
                    .build();
            Realm.getInstanceAsync(syncConfig, new Realm.Callback() {
                @Override
                public void onSuccess(Realm realm) {
                    AndroidCapabilities.EMULATE_MAIN_THREAD = true;
                    PermissionManager pm = adminUser.getPermissionManager();
                    pm.applyPermissions(new PermissionRequest(UserCondition.noExistingPermissions(), realmUrl, AccessLevel.WRITE), new PermissionManager.ApplyPermissionsCallback() {
                        @Override
                        public void onSuccess() {
                            handler.post(() -> {
                                AndroidCapabilities.EMULATE_MAIN_THREAD = oldValue;
                                pm.close();
                                realm.close();
                                adminUser.logout();
                                setupRealm.countDown();
                            });
                        }

                        @Override
                        public void onError(ObjectServerError error) {
                            fail(error.toString());
                        }
                    });
                }

                @Override
                public void onError(Throwable exception) {
                    fail(exception.toString());
                }
            });
        });
        TestHelper.awaitOrFail(setupRealm);
    }

