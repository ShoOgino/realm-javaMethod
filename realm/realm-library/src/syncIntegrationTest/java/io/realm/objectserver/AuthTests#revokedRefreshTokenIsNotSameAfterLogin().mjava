    @Test
    public void revokedRefreshTokenIsNotSameAfterLogin() throws InterruptedException {
        final CountDownLatch userLoggedInAgain = new CountDownLatch(1);
        final String uniqueName = UUID.randomUUID().toString();

        final SyncCredentials credentials = SyncCredentials.usernamePassword(uniqueName, "password", true);
        SyncUser user = SyncUser.login(credentials, Constants.AUTH_URL);
        final Token revokedRefreshToken = user.getAccessToken();

        SyncManager.addAuthenticationListener(new AuthenticationListener() {
            @Override
            public void loggedIn(SyncUser user) {

            }

            @Override
            public void loggedOut(SyncUser user) {
                SystemClock.sleep(1000); // Remove once https://github.com/realm/ros/issues/304 is fixed
                SyncCredentials credentials = SyncCredentials.usernamePassword(uniqueName, "password", false);
                SyncUser loggedInUser = SyncUser.login(credentials, Constants.AUTH_URL);

                // still comparing the same user
                assertEquals(revokedRefreshToken.identity(), loggedInUser.getAccessToken().identity());

                // different tokens
                assertNotEquals(revokedRefreshToken.value(), loggedInUser.getAccessToken().value());
                SyncManager.removeAuthenticationListener(this);
                userLoggedInAgain.countDown();
            }
        });

        user.logout();
        TestHelper.awaitOrFail(userLoggedInAgain);
    }

