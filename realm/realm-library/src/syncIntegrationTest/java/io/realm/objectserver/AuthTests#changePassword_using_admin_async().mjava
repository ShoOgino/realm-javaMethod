    @Test
    @RunTestInLooperThread
    @Ignore("Wait for https://github.com/realm/ros/issues/335")
    public void changePassword_using_admin_async() {
        final String username = UUID.randomUUID().toString();
        final String originalPassword = "password";
        final SyncCredentials credentials = SyncCredentials.usernamePassword(username, originalPassword, true);
        final SyncUser userOld = SyncUser.login(credentials, Constants.AUTH_URL);
        assertTrue(userOld.isValid());

        // Login an admin user
        final SyncUser adminUser = UserFactory.createAdminUser(Constants.AUTH_URL);
        assertTrue(adminUser.isValid());
        assertTrue(adminUser.isAdmin());

        // Change password using admin user
        final String newPassword = "new-password";
        adminUser.changePasswordAsync(userOld.getIdentity(), newPassword, new SyncUser.Callback() {
            @Override
            public void onSuccess(SyncUser administratorUser) {
                assertEquals(adminUser, administratorUser);

                // Try to log in with new password
                userOld.logout();
                SyncCredentials credentials = SyncCredentials.usernamePassword(username, newPassword, false);
                SyncUser userNew = SyncUser.login(credentials, Constants.AUTH_URL);

                assertTrue(userNew.isValid());
                assertEquals(userOld.getIdentity(), userNew.getIdentity());

                looperThread.testComplete();
            }

            @Override
            public void onError(ObjectServerError error) {
                fail(error.getErrorMessage());
            }
        });
    }

