    @Test
    @RunTestInLooperThread
    public void includeLinkingObjects_sameTable() throws InterruptedException {
        // Upload data
        SyncUser admin = UserFactory.createAdminUser(Constants.AUTH_URL);
        Realm realm1 = getPartialRealm(admin);
        realm1.executeTransaction(realm -> {
            AllJavaTypes obj1 = new AllJavaTypes(1);
            obj1.setFieldString("parent");
            AllJavaTypes obj2 = new AllJavaTypes(2);
            obj2.setFieldString("child");
            obj1.setFieldObject(obj2);
            realm.insert(obj1);
        });
        SyncManager.getSession((SyncConfiguration) realm1.getConfiguration()).uploadAllLocalChanges();
        realm1.close();

        // Create subscription with includes
        SyncUser user = UserFactory.createUniqueUser(Constants.AUTH_URL);
        Realm realm2 = getPartialRealm(admin);
        SyncSession session = SyncManager.getSession((SyncConfiguration) realm2.getConfiguration());
        assertEquals(0, realm2.where(AllJavaTypes.class).count());
        realm2.executeTransaction(realm -> {
            realm.where(AllJavaTypes.class)
                    .equalTo(AllJavaTypes.FIELD_STRING, "child")
                    .subscribe("my-sub");
        });
        session.uploadAllLocalChanges();
        session.downloadAllServerChanges();
        realm2.refresh();
        assertEquals(1, realm2.where(AllJavaTypes.class).count());

        // Update subscription to include parent objects
        realm2.executeTransaction(realm -> {
            realm.where(AllJavaTypes.class)
                    .equalTo(AllJavaTypes.FIELD_STRING, "child")
                    .includeLinkingObjects(AllJavaTypes.FIELD_LO_OBJECT)
                    .subscribeOrUpdate("my-sub");
        });
        session.uploadAllLocalChanges();
        session.downloadAllServerChanges();
        realm2.refresh();
        assertEquals(2, realm2.where(AllJavaTypes.class).count());
        realm2.close();
        looperThread.postRunnable(() -> {
            looperThread.testComplete();
        });
    }

