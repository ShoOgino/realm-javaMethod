    @Test
    @RunTestInLooperThread
    public void downloadLimitedData() throws InterruptedException {
        SyncUser user = UserFactory.createUniqueUser(Constants.AUTH_URL);
        createServerData(user, Constants.SYNC_SERVER_URL);
        Realm realm = getPartialRealm(user);
        looperThread.closeAfterTest(realm);

        RealmResults<PartialSyncObjectA> results = realm.where(PartialSyncObjectA.class)
                .notEqualTo("string", "")
                .distinct("string")
                .sort("string", Sort.ASCENDING)
                .limit(2)
                .findAllAsync();
        looperThread.keepStrongReference(results);

        results.addChangeListener((objects, changeSet) -> {
            RealmLog.error(changeSet.getState().toString());
            if (changeSet.getState() == OrderedCollectionChangeSet.State.ERROR) {
                RealmLog.error(changeSet.getError().toString());
            }
            if (changeSet.isCompleteResult()) {
                assertEquals(2, results.size());
                PartialSyncObjectA obj = objects.first();
                assertEquals(6, obj.getNumber());
                assertEquals("partial", obj.getString());
                obj = objects.last();
                assertEquals(0, obj.getNumber());
                assertEquals("realm", obj.getString());
                looperThread.testComplete();
            }
        });
    }

