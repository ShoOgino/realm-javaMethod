    @Test
    @RunTestInLooperThread
    public void namedSubscription_update_throwsIfDifferentQueryType() {
        SyncUser user = UserFactory.createUniqueUser(Constants.AUTH_URL);
        final Realm realm = getPartialRealm(user);
        looperThread.closeAfterTest(realm);

        RealmResults<PartialSyncObjectA> results = realm.where(PartialSyncObjectA.class).findAllAsync("type-conflict");
        results.addChangeListener((objects1, changeSet1) -> {
            if (changeSet1.isCompleteResult()) {
                results.removeAllChangeListeners();
                RealmResults<PartialSyncObjectB> results2 = realm.where(PartialSyncObjectB.class).findAllAsync("type-conflict", true);
                results2.addChangeListener((objects2, changeSet2) -> {
                    if (changeSet2.getState() == OrderedCollectionChangeSet.State.ERROR) {
                        assertTrue(changeSet2.getError() instanceof IllegalArgumentException);
                        assertTrue(changeSet2.getError().getMessage().startsWith("Replacing an existing query with a query on a different type is not allowed"));
                        looperThread.testComplete();
                    }
                });
                looperThread.keepStrongReference(results2);
            }
        });
        looperThread.keepStrongReference(results);
    }

