    @Test
    @RunTestInLooperThread
    public void partialSync_namedSubscription_namedConflictThrows() {
        SyncUser user = UserFactory.createUniqueUser(Constants.AUTH_URL);
        Realm realm = getPartialRealm(user);
        looperThread.closeAfterTest(realm);

        RealmResults<PartialSyncObjectA> results1 = realm.where(PartialSyncObjectA.class)
                .greaterThan("number", 0) // FIXME: Work-around Query serializer not accepting empty query for now
                .findAllAsync("my-id");
        results1.addChangeListener((results, changeSet) -> {
            // Ignore. Just used to trigger partial sync path
        });

        RealmResults<PartialSyncObjectB> results2 = realm.where(PartialSyncObjectB.class)
                .greaterThan("number", 0) // FIXME: Work-around Query serializer not accepting empty query for now
                .findAllAsync("my-id");
        results2.addChangeListener((results, changeSet) -> {
            if (changeSet.getState() == OrderedCollectionChangeSet.State.ERROR) {
                assertEquals(OrderedCollectionChangeSet.State.ERROR, changeSet.getState());
                assertTrue(changeSet.getError() instanceof IllegalArgumentException);
                looperThread.testComplete();
            }
        });

        looperThread.keepStrongReference(results1);
        looperThread.keepStrongReference(results2);
    }

