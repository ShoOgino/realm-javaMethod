    @Test
    public void uploadProgressListener_indefinitely() {
        final AtomicInteger transferCompleted = new AtomicInteger(0);
        final CountDownLatch testDone = new CountDownLatch(1);
        final SyncConfiguration config = createSyncConfig();
        Realm realm = Realm.getInstance(config);

        writeSampleData(realm); // Write first batch of sample data
        SyncSession session = SyncManager.getSession(config);
        session.addUploadProgressListener(ProgressMode.INDEFINITELY, new ProgressListener() {
            @Override
            public void onChange(Progress progress) {
                Realm tempRealm = Realm.getInstance(config);
                long objectsCount = tempRealm.where(AllTypes.class).count();
                tempRealm.close();
                // FIXME: Remove the objectsCount checking when
                // https://github.com/realm/realm-object-store/issues/581 gets fixed
                if (objectsCount != 0 && progress.isTransferComplete()) {
                    switch(transferCompleted.incrementAndGet()) {
                        case 1:
                            Realm realm = Realm.getInstance(config);
                            writeSampleData(realm);
                            realm.close();
                            break;
                        case 2:
                            assertTransferComplete(progress, true);
                            testDone.countDown();
                            break;
                        default:
                            fail("Unsupported number of transfers completed: " + transferCompleted.get());
                    }
                }
            }
        });

        TestHelper.awaitOrFail(testDone);
        realm.close();
    }

