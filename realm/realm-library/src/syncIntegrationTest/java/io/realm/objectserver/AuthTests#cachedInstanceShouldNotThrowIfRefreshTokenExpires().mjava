    @Test
    public void cachedInstanceShouldNotThrowIfRefreshTokenExpires() throws InterruptedException {
        String username = UUID.randomUUID().toString();
        String password = "password";

        SyncCredentials credentials = SyncCredentials.usernamePassword(username, password, true);
        final SyncUser user = spy(SyncUser.logIn(credentials, Constants.AUTH_URL));

        when(user.isValid()).thenReturn(true, true, false);

        final RealmConfiguration configuration = configurationFactory.createSyncConfigurationBuilder(user, Constants.USER_REALM).build();
        Realm realm = Realm.getInstance(configuration);

        assertFalse(user.isValid());
        verify(user, times(3)).isValid();

        final CountDownLatch backgroundThread = new CountDownLatch(1);
        // Should not throw when using an expired refresh_token form a different thread
        // It should be able to open a Realm with an expired token
        new Thread() {
            @Override
            public void run() {
                Realm instance = Realm.getInstance(configuration);
                instance.close();
                backgroundThread.countDown();
            }
        }.start();

        backgroundThread.await();

        // It should be possible to open a cached Realm with expired token
        Realm cachedInstance = Realm.getInstance(configuration);
        assertNotNull(cachedInstance);

        realm.close();
        cachedInstance.close();
        user.logOut();
    }

