    // Create remote data for a given user.
    private URI createRemoteData(SyncUser user) {
        final SyncConfiguration config = configFactory.createSyncConfigurationBuilder(user, Constants.USER_REALM)
                .name("remote")
                .build();
        final Realm realm = Realm.getInstance(config);
        final CountDownLatch changesUploaded = new CountDownLatch(1);
        final SyncSession session = SyncManager.getSession(config);
        final long beforeAdd = realm.where(AllTypes.class).count();
        writeSampleData(realm);

        session.addUploadProgressListener(ProgressMode.INDEFINITELY, new ProgressListener() {
            @Override
            public void onChange(Progress progress) {
                if (progress.isTransferComplete()) {
                    Realm realm = Realm.getInstance(config);
                    final long afterAdd = realm.where(AllTypes.class).count();
                    realm.close();

                    RealmLog.warn(String.format(Locale.ENGLISH,"createRemoteData upload %d/%d objects count:%d",
                            progress.getTransferredBytes(), progress.getTransferableBytes(), afterAdd));
                    // FIXME: Remove this after https://github.com/realm/realm-object-store/issues/581
                    if (afterAdd == TEST_SIZE + beforeAdd) {
                        session.removeProgressListener(this);
                        changesUploaded.countDown();
                    } else if (afterAdd < TEST_SIZE + beforeAdd) {
                        fail("The added objects are more than expected.");
                    }
                }
            }
        });
        TestHelper.awaitOrFail(changesUploaded);
        realm.close();
        return config.getServerUrl();
    }

