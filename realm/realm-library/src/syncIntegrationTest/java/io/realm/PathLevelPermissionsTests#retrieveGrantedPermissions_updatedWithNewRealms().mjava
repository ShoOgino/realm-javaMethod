    @Test
    @RunTestInLooperThread
    public void retrieveGrantedPermissions_updatedWithNewRealms() {
        user.retrieveGrantedPermissionsAsync(new SyncUser.Callback<List<Permission>>() {
            @Override
            public void onSuccess(List<Permission> permissions) {
                assertInitialPermissions(permissions);

                // Create new Realm, which should create a new Permission entry
                SyncConfiguration config2 = user.createConfiguration(Constants.USER_REALM_2)
                        .schema(AllJavaTypes.class)
                        .fullSynchronization()
                        .errorHandler((session, error) -> fail(error.toString()))
                        .build();
                final Realm secondRealm = Realm.getInstance(config2);
                looperThread.closeAfterTest(secondRealm);
                try {
                    SyncManager.getSession(config2).uploadAllLocalChanges();
                } catch (InterruptedException e) {
                    fail(e.toString());
                }

                // Wait for the permission Result to report the new Realms
                List<Permission> permissions2 = user.retrieveGrantedPermissions();
                assertEquals(1, permissions.size());
                assertEquals(2, permissions2.size());
                Permission permission = permissions2.get(1);
                assertTrue(permission.getPath().endsWith("tests2"));
                assertTrue(permission.mayRead());
                assertTrue(permission.mayWrite());
                assertTrue(permission.mayManage());
                looperThread.testComplete();
            }

            @Override
            public void onError(ObjectServerError error) {
                fail(error.toString());
            }
        });
    }

