    @Test
    @RunTestInLooperThread
    public void trustedRootCA() throws InterruptedException {
        String username = UUID.randomUUID().toString();
        String password = "password";
        SyncUser user = SyncUser.logIn(SyncCredentials.usernamePassword(username, password, true), Constants.AUTH_URL);

        // 1. Copy a valid Realm to the server
        //noinspection unchecked
        final SyncConfiguration syncConfig = configurationFactory.createSyncConfigurationBuilder(user, Constants.USER_REALM)
                .fullSynchronization()
                .schema(StringOnly.class)
                .build();
        Realm realm = Realm.getInstance(syncConfig);

        realm.beginTransaction();
        realm.createObject(StringOnly.class).setChars("Foo");
        realm.commitTransaction();

        // make sure the changes gets to the server
        SyncManager.getSession(syncConfig).uploadAllLocalChanges();
        realm.close();
        user.logOut();

        // 2. Local state should now be completely reset. Open the Realm again with a new configuration which should
        // download the uploaded changes.
        user = SyncUser.logIn(SyncCredentials.usernamePassword(username, password), Constants.AUTH_URL);
        //noinspection unchecked
        SyncConfiguration syncConfigSSL = configurationFactory.createSyncConfigurationBuilder(user, Constants.USER_REALM_SECURE)
                .fullSynchronization()
                .name("useSsl")
                .schema(StringOnly.class)
                .waitForInitialRemoteData()
                .trustedRootCA("trusted_ca.pem")
                .build();
        realm = Realm.getInstance(syncConfigSSL);

        RealmResults<StringOnly> all = realm.where(StringOnly.class).findAll();
        try {
            assertEquals(1, all.size());
            assertEquals("Foo", all.get(0).getChars());
        } finally {
            realm.close();
        }
        looperThread.testComplete();
    }

