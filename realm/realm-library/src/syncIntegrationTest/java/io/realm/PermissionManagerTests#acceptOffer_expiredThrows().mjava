    @Test
    @RunTestInLooperThread(emulateMainThread = true)
    @Ignore("The offer is randomly accepted mostly on docker-02 SHIELD K1")
    public void acceptOffer_expiredThrows() {
        // Trying to guess how long CI is to process this. The offer cannot be created if it
        // already expired.
        long delayMillis = TimeUnit.SECONDS.toMillis(10);
        Date expiresAt = new Date(new Date().getTime() + delayMillis);
        final String offerToken = createOffer(user, "test", AccessLevel.WRITE, expiresAt);
        SystemClock.sleep(delayMillis); // Make sure that the offer expires.
        final SyncUser user2 = UserFactory.createUniqueUser();
        final PermissionManager pm = user2.getPermissionManager();
        looperThread.closeAfterTest(pm);

        pm.acceptOffer(offerToken, new PermissionManager.AcceptOfferCallback() {
            @Override
            public void onSuccess(String url, Permission permission) {
                fail();
            }

            @Override
            public void onError(ObjectServerError error) {
                assertEquals(ErrorCode.EXPIRED_PERMISSION_OFFER, error.getErrorCode());
                looperThread.testComplete();
            }
        });
    }

