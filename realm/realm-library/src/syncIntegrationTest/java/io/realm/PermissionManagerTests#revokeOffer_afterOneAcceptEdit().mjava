    @Test
    @RunTestInLooperThread(emulateMainThread = true)
    public void revokeOffer_afterOneAcceptEdit() {
        // createOffer validates that the offer is actually in the __management Realm.
        final String offerToken = createOffer(user, "test", AccessLevel.WRITE, null);

        SyncUser user2 = UserFactory.createUniqueUser();
        SyncUser user3 = UserFactory.createUniqueUser();
        final PermissionManager pm1 = user.getPermissionManager();
        PermissionManager pm2 = user2.getPermissionManager();
        final PermissionManager pm3 = user3.getPermissionManager();
        looperThread.closeAfterTest(pm1);
        looperThread.closeAfterTest(pm2);
        looperThread.closeAfterTest(pm3);

        pm2.acceptOffer(offerToken, new PermissionManager.AcceptOfferCallback() {
            @Override
            public void onSuccess(String realmUrl, Permission permission) {
                pm1.revokeOffer(offerToken, new PermissionManager.RevokeOfferCallback() {
                    @Override
                    public void onSuccess() {
                        pm3.acceptOffer(offerToken, new PermissionManager.AcceptOfferCallback() {
                            @Override
                            public void onSuccess(String realmUrl, Permission permission) {
                                fail("Offer should have been revoked");
                            }

                            @Override
                            public void onError(ObjectServerError error) {
                                assertEquals(ErrorCode.INVALID_PARAMETERS, error.getErrorCode());
                                looperThread.testComplete();
                            }
                        });
                    }

                    @Override
                    public void onError(ObjectServerError error) {
                        fail(error.toString());
                    }
                });
            }

            @Override
            public void onError(ObjectServerError error) {
                fail(error.toString());
            }
        });
    }

