    @Test
    @RunTestInLooperThread(emulateMainThread = true)
    public void acceptOffer_multipleUsers() {
        final String offerToken = createOffer(user, "test", AccessLevel.WRITE, null);

        final SyncUser user2 = UserFactory.createUniqueUser();
        final SyncUser user3 = UserFactory.createUniqueUser();
        final PermissionManager pm2 = user2.getPermissionManager();
        final PermissionManager pm3 = user3.getPermissionManager();
        looperThread.closeAfterTest(pm2);
        looperThread.closeAfterTest(pm3);

        final AtomicInteger offersAccepted = new AtomicInteger(0);
        PermissionManager.AcceptOfferCallback callback = new PermissionManager.AcceptOfferCallback() {
            @Override
            public void onSuccess(String url, Permission permission) {
                assertEquals("/" + user.getIdentity() + "/test", permission.getPath());
                assertTrue(permission.mayRead());
                assertTrue(permission.mayWrite());
                assertFalse(permission.mayManage());
                if (offersAccepted.incrementAndGet() == 2) {
                    looperThread.testComplete();
                }
            }

            @Override
            public void onError(ObjectServerError error) {
                fail(error.toString());
            }
        };

        pm2.acceptOffer(offerToken, callback);
        pm3.acceptOffer(offerToken, callback);
    }

