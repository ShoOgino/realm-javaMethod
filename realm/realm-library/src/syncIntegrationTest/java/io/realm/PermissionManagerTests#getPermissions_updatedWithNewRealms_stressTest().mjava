    @Test
    @RunTestInLooperThread(emulateMainThread = true)
    @Ignore("See https://github.com/realm/ros/issues/437")
    public void getPermissions_updatedWithNewRealms_stressTest() {
        final PermissionManager pm = user.getPermissionManager();
        looperThread.closeAfterTest(pm);
        pm.getPermissions(new PermissionManager.PermissionsCallback() {
            @Override
            public void onSuccess(RealmResults<Permission> permissions) {
                assertTrue(permissions.isLoaded());
                assertInitialPermissions(permissions);

                for (int i = 0; i < 10; i++) {
                    SyncConfiguration configNew = new SyncConfiguration.Builder(user, "realm://127.0.0.1:9080/~/test" + i).build();
                    Realm newRealm = Realm.getInstance(configNew);
                    looperThread.closeAfterTest(newRealm);
                }

                // Wait for the permission Result to report the new Realms
                looperThread.keepStrongReference(permissions);
                permissions.addChangeListener(new RealmChangeListener<RealmResults<Permission>>() {
                    @Override
                    public void onChange(RealmResults<Permission> permissions) {
                        RealmLog.error(Arrays.toString(permissions.toArray()));  // FIXME Debug output for CI. Remove before release.
                        Permission p = permissions.where().endsWith("path", "test9").findFirst();
                        if (p != null) {
                            assertTrue(p.mayRead());
                            assertTrue(p.mayWrite());
                            assertTrue(p.mayManage());
                            looperThread.testComplete();
                        }
                    }
                });
            }

            @Override
            public void onError(ObjectServerError error) {
                fail(error.toString());
            }
        });
    }

